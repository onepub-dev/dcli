The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:Invalid overlay change: no content to change
null
at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:Invalid overlay change: no content to change
null
at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:Invalid overlay change: no content to change
null
at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[ReorderMembersFix] 2025-09-27T13:11:33.245864 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.245864 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.245864 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.245864
[ReorderMembersFix] 2025-09-27T13:11:33.246050 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.246050 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.246050 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.246050
[ReorderMembersFix] 2025-09-27T13:11:33.247245 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.247245 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247245 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.247245
[ReorderMembersFix] 2025-09-27T13:11:33.247442 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.247442 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247442 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.247442
[ReorderMembersFix] 2025-09-27T13:11:33.247578 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.247578 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247578 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.247578
[ReorderMembersFix] 2025-09-27T13:11:33.247703 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.247703 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247703 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.247703
[ReorderMembersFix] 2025-09-27T13:11:33.247843 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.247843 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247843 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.247843
[ReorderMembersFix] 2025-09-27T13:11:33.247977 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.247977 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.247977 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.247977
[ReorderMembersFix] 2025-09-27T13:11:33.248073 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.248073 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.248073 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.248073
[ReorderMembersFix] 2025-09-27T13:11:33.248160 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.248160 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.248160 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.248160
[ReorderMembersFix] 2025-09-27T13:11:33.249357 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.249357 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.249357 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.249357
[ReorderMembersFix] 2025-09-27T13:11:33.250224 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.250224 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250224 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.250224
[ReorderMembersFix] 2025-09-27T13:11:33.250343 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.250343 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250343 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.250343
[ReorderMembersFix] 2025-09-27T13:11:33.250446 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.250446 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250446 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.250446
[ReorderMembersFix] 2025-09-27T13:11:33.250551 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.250551 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250551 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.250551
[ReorderMembersFix] 2025-09-27T13:11:33.250646 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.250646 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250646 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.250646
[ReorderMembersFix] 2025-09-27T13:11:33.250751 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.250751 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250751 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.250751
[ReorderMembersFix] 2025-09-27T13:11:33.250881 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.250881 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.250881 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.250881
[ReorderMembersFix] 2025-09-27T13:11:33.251411 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.251411 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.251411 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.251411
[ReorderMembersFix] 2025-09-27T13:11:33.251518 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.251518 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.251518 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.251518
[ReorderMembersFix] 2025-09-27T13:11:33.253195 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.253195 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253195 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.253195
[ReorderMembersFix] 2025-09-27T13:11:33.253760 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.253760 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253760 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.253760
[ReorderMembersFix] 2025-09-27T13:11:33.253885 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.253885 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253885 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.253885
[ReorderMembersFix] 2025-09-27T13:11:33.253977 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.253977 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.253977 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.253977
[ReorderMembersFix] 2025-09-27T13:11:33.254078 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.254078 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254078 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.254078
[ReorderMembersFix] 2025-09-27T13:11:33.254166 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.254166 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254166 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.254166
[ReorderMembersFix] 2025-09-27T13:11:33.254607 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.254607 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254607 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.254607
[ReorderMembersFix] 2025-09-27T13:11:33.254721 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.254721 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254721 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.254721
[ReorderMembersFix] 2025-09-27T13:11:33.254803 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.254803 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254803 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.254803
[ReorderMembersFix] 2025-09-27T13:11:33.254893 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.254893 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.254893 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.254893
[ReorderMembersFix] 2025-09-27T13:11:33.256478 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.256478 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.256478 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.256478
[ReorderMembersFix] 2025-09-27T13:11:33.256898 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.256898 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.256898 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.256898
[ReorderMembersFix] 2025-09-27T13:11:33.256989 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.256989 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.256989 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.256989
[ReorderMembersFix] 2025-09-27T13:11:33.257066 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.257066 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257066 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.257066
[ReorderMembersFix] 2025-09-27T13:11:33.257149 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.257149 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257149 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.257149
[ReorderMembersFix] 2025-09-27T13:11:33.257653 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.257653 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257653 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.257653
[ReorderMembersFix] 2025-09-27T13:11:33.257734 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.257734 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257734 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.257734
[ReorderMembersFix] 2025-09-27T13:11:33.257817 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.257817 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257817 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.257817
[ReorderMembersFix] 2025-09-27T13:11:33.257902 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.257902 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257902 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.257902
[ReorderMembersFix] 2025-09-27T13:11:33.257989 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.257989 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.257989 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.257989
[ReorderMembersFix] 2025-09-27T13:11:33.259976 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.259976 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.259976 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.259976
[ReorderMembersFix] 2025-09-27T13:11:33.260645 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.260645 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260645 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.260645
[ReorderMembersFix] 2025-09-27T13:11:33.260738 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.260738 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260738 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.260738
[ReorderMembersFix] 2025-09-27T13:11:33.260811 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.260811 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260811 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.260811
[ReorderMembersFix] 2025-09-27T13:11:33.260901 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.260901 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260901 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.260901
[ReorderMembersFix] 2025-09-27T13:11:33.260975 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.260975 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.260975 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.260975
[ReorderMembersFix] 2025-09-27T13:11:33.261045 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.261045 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261045 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.261045
[ReorderMembersFix] 2025-09-27T13:11:33.261543 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.261543 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261543 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.261543
[ReorderMembersFix] 2025-09-27T13:11:33.261664 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.261664 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261664 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.261664
[ReorderMembersFix] 2025-09-27T13:11:33.261788 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.261788 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.261788 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.261788
[ReorderMembersFix] 2025-09-27T13:11:33.263446 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.263446 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.263446 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.263446
[ReorderMembersFix] 2025-09-27T13:11:33.264478 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.264478 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264478 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.264478
[ReorderMembersFix] 2025-09-27T13:11:33.264620 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.264620 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264620 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.264620
[ReorderMembersFix] 2025-09-27T13:11:33.264742 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.264742 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264742 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.264742
[ReorderMembersFix] 2025-09-27T13:11:33.264908 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.264908 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.264908 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.264908
[ReorderMembersFix] 2025-09-27T13:11:33.265005 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.265005 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265005 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.265005
[ReorderMembersFix] 2025-09-27T13:11:33.265086 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.265086 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265086 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.265086
[ReorderMembersFix] 2025-09-27T13:11:33.265170 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.265170 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265170 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.265170
[ReorderMembersFix] 2025-09-27T13:11:33.265511 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.265511 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265511 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.265511
[ReorderMembersFix] 2025-09-27T13:11:33.265606 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.265606 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.265606 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.265606
[ReorderMembersFix] 2025-09-27T13:11:33.267319 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.267319 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.267319 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.267319
[ReorderMembersFix] 2025-09-27T13:11:33.267522 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.267522 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.267522 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.267522
[ReorderMembersFix] 2025-09-27T13:11:33.269081 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.269081 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269081 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.269081
[ReorderMembersFix] 2025-09-27T13:11:33.269257 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.269257 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269257 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.269257
[ReorderMembersFix] 2025-09-27T13:11:33.269410 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.269410 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269410 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.269410
[ReorderMembersFix] 2025-09-27T13:11:33.269559 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.269559 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269559 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.269559
[ReorderMembersFix] 2025-09-27T13:11:33.269700 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.269700 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269700 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.269700
[ReorderMembersFix] 2025-09-27T13:11:33.269856 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.269856 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.269856 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.269856
[ReorderMembersFix] 2025-09-27T13:11:33.270004 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.270004 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.270004 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.270004
[ReorderMembersFix] 2025-09-27T13:11:33.270189 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.270189 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.270189 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.270189
[ReorderMembersFix] 2025-09-27T13:11:33.270971 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.270971 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.270971 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.270971
[ReorderMembersFix] 2025-09-27T13:11:33.271151 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.271151 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.271151 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.271151
[ReorderMembersFix] 2025-09-27T13:11:33.272679 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.272679 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.272679 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.272679
[ReorderMembersFix] 2025-09-27T13:11:33.272882 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.272882 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.272882 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.272882
[ReorderMembersFix] 2025-09-27T13:11:33.273042 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.273042 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273042 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.273042
[ReorderMembersFix] 2025-09-27T13:11:33.273205 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.273205 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273205 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.273205
[ReorderMembersFix] 2025-09-27T13:11:33.273366 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.273366 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273366 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.273366
[ReorderMembersFix] 2025-09-27T13:11:33.273524 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.273524 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273524 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.273524
[ReorderMembersFix] 2025-09-27T13:11:33.273691 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.273691 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273691 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.273691
[ReorderMembersFix] 2025-09-27T13:11:33.273856 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.273856 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.273856 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.273856
[ReorderMembersFix] 2025-09-27T13:11:33.274556 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.274556 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.274556 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.274556
[ReorderMembersFix] 2025-09-27T13:11:33.274937 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.274937 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.274937 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.274937
[ReorderMembersFix] 2025-09-27T13:11:33.279821 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.279821 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.279821 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.279821
[ReorderMembersFix] 2025-09-27T13:11:33.280903 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.280903 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.280903 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.280903
[ReorderMembersFix] 2025-09-27T13:11:33.281043 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.281043 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281043 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.281043
[ReorderMembersFix] 2025-09-27T13:11:33.281160 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.281160 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281160 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.281160
[ReorderMembersFix] 2025-09-27T13:11:33.281274 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.281274 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281274 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.281274
[ReorderMembersFix] 2025-09-27T13:11:33.281385 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.281385 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281385 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.281385
[ReorderMembersFix] 2025-09-27T13:11:33.281499 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.281499 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281499 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.281499
[ReorderMembersFix] 2025-09-27T13:11:33.281614 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.281614 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.281614 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.281614
[ReorderMembersFix] 2025-09-27T13:11:33.609366 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.609366 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.609366 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.609366
[ReorderMembersFix] 2025-09-27T13:11:33.609523 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.609523 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.609523 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.609523
[ReorderMembersFix] 2025-09-27T13:11:33.610273 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610273 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610273 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610273
[ReorderMembersFix] 2025-09-27T13:11:33.610371 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610371 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610371 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610371
[ReorderMembersFix] 2025-09-27T13:11:33.610446 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610446 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610446 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610446
[ReorderMembersFix] 2025-09-27T13:11:33.610517 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610517 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610517 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610517
[ReorderMembersFix] 2025-09-27T13:11:33.610589 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610589 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610589 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610589
[ReorderMembersFix] 2025-09-27T13:11:33.610663 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610663 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610663 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610663
[ReorderMembersFix] 2025-09-27T13:11:33.610743 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610743 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610743 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610743
[ReorderMembersFix] 2025-09-27T13:11:33.610822 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.610822 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.610822 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.610822
[ReorderMembersFix] 2025-09-27T13:11:33.615005 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.615005 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615005 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.615005
[ReorderMembersFix] 2025-09-27T13:11:33.615818 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.615818 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615818 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.615818
[ReorderMembersFix] 2025-09-27T13:11:33.615915 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.615915 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615915 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.615915
[ReorderMembersFix] 2025-09-27T13:11:33.615988 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.615988 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.615988 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.615988
[ReorderMembersFix] 2025-09-27T13:11:33.616068 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.616068 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616068 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.616068
[ReorderMembersFix] 2025-09-27T13:11:33.616154 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.616154 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616154 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.616154
[ReorderMembersFix] 2025-09-27T13:11:33.616250 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.616250 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616250 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.616250
[ReorderMembersFix] 2025-09-27T13:11:33.616330 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.616330 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616330 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.616330
[ReorderMembersFix] 2025-09-27T13:11:33.616445 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.616445 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616445 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.616445
[ReorderMembersFix] 2025-09-27T13:11:33.616684 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.616684 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.616684 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.616684
[ReorderMembersFix] 2025-09-27T13:11:33.619469 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.619469 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.619469 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.619469
[ReorderMembersFix] 2025-09-27T13:11:33.619669 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.619669 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.619669 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.619669
[ReorderMembersFix] 2025-09-27T13:11:33.619789 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.619789 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.619789 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.619789
[ReorderMembersFix] 2025-09-27T13:11:33.621281 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.621281 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621281 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.621281
[ReorderMembersFix] 2025-09-27T13:11:33.621517 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.621517 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621517 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.621517
[ReorderMembersFix] 2025-09-27T13:11:33.621683 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.621683 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621683 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.621683
[ReorderMembersFix] 2025-09-27T13:11:33.621859 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.621859 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.621859 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.621859
[ReorderMembersFix] 2025-09-27T13:11:33.622002 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.622002 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.622002 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.622002
[ReorderMembersFix] 2025-09-27T13:11:33.622139 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.622139 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.622139 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.622139
[ReorderMembersFix] 2025-09-27T13:11:33.622283 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.622283 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.622283 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.622283
[ReorderMembersFix] 2025-09-27T13:11:33.626723 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.626723 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.626723 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.626723
[ReorderMembersFix] 2025-09-27T13:11:33.626915 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.626915 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.626915 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.626915
[ReorderMembersFix] 2025-09-27T13:11:33.628226 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.628226 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628226 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.628226
[ReorderMembersFix] 2025-09-27T13:11:33.628422 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.628422 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628422 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.628422
[ReorderMembersFix] 2025-09-27T13:11:33.628570 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.628570 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628570 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.628570
[ReorderMembersFix] 2025-09-27T13:11:33.628702 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.628702 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628702 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.628702
[ReorderMembersFix] 2025-09-27T13:11:33.628882 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.628882 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.628882 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.628882
[ReorderMembersFix] 2025-09-27T13:11:33.629072 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.629072 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.629072 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.629072
[ReorderMembersFix] 2025-09-27T13:11:33.629263 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.629263 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.629263 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.629263
[ReorderMembersFix] 2025-09-27T13:11:33.629639 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.629639 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.629639 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.629639
[ReorderMembersFix] 2025-09-27T13:11:33.630301 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.630301 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.630301 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.630301
[ReorderMembersFix] 2025-09-27T13:11:33.630456 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.630456 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.630456 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.630456
[ReorderMembersFix] 2025-09-27T13:11:33.631436 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.631436 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.631436 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.631436
[ReorderMembersFix] 2025-09-27T13:11:33.631613 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.631613 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.631613 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.631613
[ReorderMembersFix] 2025-09-27T13:11:33.631850 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.631850 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.631850 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.631850
[ReorderMembersFix] 2025-09-27T13:11:33.632028 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.632028 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.632028 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.632028
[ReorderMembersFix] 2025-09-27T13:11:33.632349 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.632349 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.632349 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.632349
[ReorderMembersFix] 2025-09-27T13:11:33.633134 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.633134 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.633134 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.633134
[ReorderMembersFix] 2025-09-27T13:11:33.633312 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.633312 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.633312 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.633312
[ReorderMembersFix] 2025-09-27T13:11:33.633495 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.633495 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.633495 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.633495
[ReorderMembersFix] 2025-09-27T13:11:33.634246 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.634246 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.634246 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.634246
[ReorderMembersFix] 2025-09-27T13:11:33.634434 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.634434 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.634434 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.634434
[ReorderMembersFix] 2025-09-27T13:11:33.634596 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.634596 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.634596 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.634596
[ReorderMembersFix] 2025-09-27T13:11:33.635863 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.635863 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.635863 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.635863
[ReorderMembersFix] 2025-09-27T13:11:33.636039 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.636039 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636039 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.636039
[ReorderMembersFix] 2025-09-27T13:11:33.636206 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.636206 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636206 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.636206
[ReorderMembersFix] 2025-09-27T13:11:33.636349 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.636349 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636349 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.636349
[ReorderMembersFix] 2025-09-27T13:11:33.636489 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.636489 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636489 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.636489
[ReorderMembersFix] 2025-09-27T13:11:33.636636 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.636636 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636636 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.636636
[ReorderMembersFix] 2025-09-27T13:11:33.636790 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.636790 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.636790 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.636790
[ReorderMembersFix] 2025-09-27T13:11:33.637502 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.637502 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.637502 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.637502
[ReorderMembersFix] 2025-09-27T13:11:33.637676 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.637676 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.637676 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.637676
[ReorderMembersFix] 2025-09-27T13:11:33.639271 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.639271 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639271 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.639271
[ReorderMembersFix] 2025-09-27T13:11:33.639535 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.639535 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639535 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.639535
[ReorderMembersFix] 2025-09-27T13:11:33.639692 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.639692 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639692 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.639692
[ReorderMembersFix] 2025-09-27T13:11:33.639852 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.639852 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.639852 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.639852
[ReorderMembersFix] 2025-09-27T13:11:33.640004 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.640004 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640004 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.640004
[ReorderMembersFix] 2025-09-27T13:11:33.640113 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.640113 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640113 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.640113
[ReorderMembersFix] 2025-09-27T13:11:33.640228 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.640228 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640228 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.640228
[ReorderMembersFix] 2025-09-27T13:11:33.640349 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.640349 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.640349 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.640349
[ReorderMembersFix] 2025-09-27T13:11:33.641164 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.641164 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.641164 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.641164
[ReorderMembersFix] 2025-09-27T13:11:33.641337 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.641337 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.641337 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.641337
[ReorderMembersFix] 2025-09-27T13:11:33.642182 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.642182 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642182 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.642182
[ReorderMembersFix] 2025-09-27T13:11:33.642314 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.642314 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642314 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.642314
[ReorderMembersFix] 2025-09-27T13:11:33.642435 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.642435 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642435 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.642435
[ReorderMembersFix] 2025-09-27T13:11:33.642538 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.642538 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642538 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.642538
[ReorderMembersFix] 2025-09-27T13:11:33.642648 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.642648 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642648 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.642648
[ReorderMembersFix] 2025-09-27T13:11:33.642756 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.642756 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642756 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.642756
[ReorderMembersFix] 2025-09-27T13:11:33.642875 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.642875 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.642875 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.642875
[ReorderMembersFix] 2025-09-27T13:11:33.643168 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.643168 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.643168 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.643168
[ReorderMembersFix] 2025-09-27T13:11:33.644888 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.644888 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.644888 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.644888
[ReorderMembersFix] 2025-09-27T13:11:33.645490 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.645490 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645490 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.645490
[ReorderMembersFix] 2025-09-27T13:11:33.645615 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.645615 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645615 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.645615
[ReorderMembersFix] 2025-09-27T13:11:33.645728 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.645728 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645728 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.645728
[ReorderMembersFix] 2025-09-27T13:11:33.645846 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.645846 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.645846 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.645846
[ReorderMembersFix] 2025-09-27T13:11:33.646553 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.646553 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646553 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.646553
[ReorderMembersFix] 2025-09-27T13:11:33.646667 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.646667 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646667 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.646667
[ReorderMembersFix] 2025-09-27T13:11:33.646773 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.646773 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646773 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.646773
[ReorderMembersFix] 2025-09-27T13:11:33.646884 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.646884 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646884 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.646884
[ReorderMembersFix] 2025-09-27T13:11:33.646987 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:33.646987 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:33.646987 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:33.646987
[ReorderMembersFix] 2025-09-27T13:11:43.250337 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.250337 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.250337 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.250337
[ReorderMembersFix] 2025-09-27T13:11:43.250588 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.250588 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.250588 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.250588
[ReorderMembersFix] 2025-09-27T13:11:43.251312 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.251312 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251312 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.251312
[ReorderMembersFix] 2025-09-27T13:11:43.251453 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.251453 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251453 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.251453
[ReorderMembersFix] 2025-09-27T13:11:43.251564 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.251564 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251564 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.251564
[ReorderMembersFix] 2025-09-27T13:11:43.251700 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.251700 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251700 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.251700
[ReorderMembersFix] 2025-09-27T13:11:43.251784 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.251784 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251784 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.251784
[ReorderMembersFix] 2025-09-27T13:11:43.251872 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.251872 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251872 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.251872
[ReorderMembersFix] 2025-09-27T13:11:43.251982 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.251982 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.251982 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.251982
[ReorderMembersFix] 2025-09-27T13:11:43.252167 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.252167 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.252167 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.252167
[ReorderMembersFix] 2025-09-27T13:11:43.254218 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.254218 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.254218 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.254218
[ReorderMembersFix] 2025-09-27T13:11:43.254808 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.254808 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.254808 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.254808
[ReorderMembersFix] 2025-09-27T13:11:43.254926 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.254926 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.254926 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.254926
[ReorderMembersFix] 2025-09-27T13:11:43.255021 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.255021 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255021 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.255021
[ReorderMembersFix] 2025-09-27T13:11:43.255109 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.255109 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255109 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.255109
[ReorderMembersFix] 2025-09-27T13:11:43.255198 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.255198 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255198 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.255198
[ReorderMembersFix] 2025-09-27T13:11:43.255287 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.255287 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255287 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.255287
[ReorderMembersFix] 2025-09-27T13:11:43.255689 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.255689 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255689 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.255689
[ReorderMembersFix] 2025-09-27T13:11:43.255791 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.255791 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255791 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.255791
[ReorderMembersFix] 2025-09-27T13:11:43.255903 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.255903 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.255903 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.255903
[ReorderMembersFix] 2025-09-27T13:11:43.257632 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.257632 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.257632 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.257632
[ReorderMembersFix] 2025-09-27T13:11:43.257759 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.257759 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.257759 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.257759
[ReorderMembersFix] 2025-09-27T13:11:43.258394 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.258394 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258394 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.258394
[ReorderMembersFix] 2025-09-27T13:11:43.258499 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.258499 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258499 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.258499
[ReorderMembersFix] 2025-09-27T13:11:43.258599 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.258599 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258599 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.258599
[ReorderMembersFix] 2025-09-27T13:11:43.258691 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.258691 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258691 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.258691
[ReorderMembersFix] 2025-09-27T13:11:43.258766 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.258766 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258766 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.258766
[ReorderMembersFix] 2025-09-27T13:11:43.258852 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.258852 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258852 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.258852
[ReorderMembersFix] 2025-09-27T13:11:43.258932 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.258932 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.258932 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.258932
[ReorderMembersFix] 2025-09-27T13:11:43.259103 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.259103 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.259103 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.259103
[ReorderMembersFix] 2025-09-27T13:11:43.261244 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.261244 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.261244 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.261244
[ReorderMembersFix] 2025-09-27T13:11:43.261509 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.261509 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.261509 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.261509
[ReorderMembersFix] 2025-09-27T13:11:43.262557 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.262557 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262557 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.262557
[ReorderMembersFix] 2025-09-27T13:11:43.262701 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.262701 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262701 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.262701
[ReorderMembersFix] 2025-09-27T13:11:43.262822 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.262822 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262822 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.262822
[ReorderMembersFix] 2025-09-27T13:11:43.262980 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.262980 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.262980 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.262980
[ReorderMembersFix] 2025-09-27T13:11:43.263121 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.263121 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263121 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.263121
[ReorderMembersFix] 2025-09-27T13:11:43.263237 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.263237 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263237 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.263237
[ReorderMembersFix] 2025-09-27T13:11:43.263348 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.263348 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263348 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.263348
[ReorderMembersFix] 2025-09-27T13:11:43.263461 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.263461 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.263461 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.263461
[ReorderMembersFix] 2025-09-27T13:11:43.264173 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.264173 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.264173 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.264173
[ReorderMembersFix] 2025-09-27T13:11:43.264742 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.264742 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.264742 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.264742
[ReorderMembersFix] 2025-09-27T13:11:43.264885 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.264885 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.264885 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.264885
[ReorderMembersFix] 2025-09-27T13:11:43.265004 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.265004 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265004 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.265004
[ReorderMembersFix] 2025-09-27T13:11:43.265128 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.265128 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265128 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.265128
[ReorderMembersFix] 2025-09-27T13:11:43.265247 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.265247 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265247 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.265247
[ReorderMembersFix] 2025-09-27T13:11:43.265785 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.265785 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265785 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.265785
[ReorderMembersFix] 2025-09-27T13:11:43.265922 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.265922 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.265922 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.265922
[ReorderMembersFix] 2025-09-27T13:11:43.266045 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.266045 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.266045 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.266045
[ReorderMembersFix] 2025-09-27T13:11:43.266177 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.266177 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.266177 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.266177
[ReorderMembersFix] 2025-09-27T13:11:43.267449 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.267449 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.267449 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.267449
[ReorderMembersFix] 2025-09-27T13:11:43.267586 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.267586 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.267586 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.267586
[ReorderMembersFix] 2025-09-27T13:11:43.268328 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.268328 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268328 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.268328
[ReorderMembersFix] 2025-09-27T13:11:43.268450 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.268450 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268450 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.268450
[ReorderMembersFix] 2025-09-27T13:11:43.268725 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.268725 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268725 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.268725
[ReorderMembersFix] 2025-09-27T13:11:43.268877 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.268877 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268877 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.268877
[ReorderMembersFix] 2025-09-27T13:11:43.268969 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.268969 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.268969 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.268969
[ReorderMembersFix] 2025-09-27T13:11:43.269062 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.269062 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.269062 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.269062
[ReorderMembersFix] 2025-09-27T13:11:43.269150 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.269150 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.269150 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.269150
[ReorderMembersFix] 2025-09-27T13:11:43.269232 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.269232 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.269232 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.269232
[ReorderMembersFix] 2025-09-27T13:11:43.271164 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.271164 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.271164 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.271164
[ReorderMembersFix] 2025-09-27T13:11:43.271396 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.271396 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.271396 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.271396
[ReorderMembersFix] 2025-09-27T13:11:43.271469 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.271469 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.271469 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.271469
[ReorderMembersFix] 2025-09-27T13:11:43.272028 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.272028 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272028 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.272028
[ReorderMembersFix] 2025-09-27T13:11:43.272121 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.272121 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272121 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.272121
[ReorderMembersFix] 2025-09-27T13:11:43.272195 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.272195 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272195 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.272195
[ReorderMembersFix] 2025-09-27T13:11:43.272266 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.272266 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272266 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.272266
[ReorderMembersFix] 2025-09-27T13:11:43.272342 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.272342 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272342 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.272342
[ReorderMembersFix] 2025-09-27T13:11:43.272417 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.272417 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272417 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.272417
[ReorderMembersFix] 2025-09-27T13:11:43.272499 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.272499 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.272499 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.272499
[ReorderMembersFix] 2025-09-27T13:11:43.274924 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.274924 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.274924 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.274924
[ReorderMembersFix] 2025-09-27T13:11:43.275120 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.275120 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.275120 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.275120
[ReorderMembersFix] 2025-09-27T13:11:43.275249 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.275249 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.275249 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.275249
[ReorderMembersFix] 2025-09-27T13:11:43.275886 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.275886 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.275886 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.275886
[ReorderMembersFix] 2025-09-27T13:11:43.276 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.276 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.276 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.276
[ReorderMembersFix] 2025-09-27T13:11:43.276100 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.276100 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276100 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.276100
[ReorderMembersFix] 2025-09-27T13:11:43.276343 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.276343 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276343 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.276343
[ReorderMembersFix] 2025-09-27T13:11:43.276456 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.276456 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276456 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.276456
[ReorderMembersFix] 2025-09-27T13:11:43.276556 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.276556 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276556 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.276556
[ReorderMembersFix] 2025-09-27T13:11:43.276656 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.276656 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.276656 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.276656
[ReorderMembersFix] 2025-09-27T13:11:43.281063 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281063 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281063 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281063
[ReorderMembersFix] 2025-09-27T13:11:43.281317 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281317 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281317 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281317
[ReorderMembersFix] 2025-09-27T13:11:43.281414 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281414 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281414 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281414
[ReorderMembersFix] 2025-09-27T13:11:43.281515 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281515 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281515 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281515
[ReorderMembersFix] 2025-09-27T13:11:43.281628 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281628 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281628 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281628
[ReorderMembersFix] 2025-09-27T13:11:43.281732 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281732 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281732 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281732
[ReorderMembersFix] 2025-09-27T13:11:43.281840 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281840 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281840 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281840
[ReorderMembersFix] 2025-09-27T13:11:43.281952 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.281952 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.281952 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.281952
[ReorderMembersFix] 2025-09-27T13:11:43.282098 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.282098 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.282098 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.282098
[ReorderMembersFix] 2025-09-27T13:11:43.282202 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:43.282202 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:43.282202 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:43.282202
[ReorderMembersFix] 2025-09-27T13:11:44.895183 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.895183 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.895183 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.895183
[ReorderMembersFix] 2025-09-27T13:11:44.895368 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.895368 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.895368 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.895368
[ReorderMembersFix] 2025-09-27T13:11:44.896110 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896110 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896110 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896110
[ReorderMembersFix] 2025-09-27T13:11:44.896226 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896226 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896226 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896226
[ReorderMembersFix] 2025-09-27T13:11:44.896321 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896321 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896321 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896321
[ReorderMembersFix] 2025-09-27T13:11:44.896414 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896414 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896414 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896414
[ReorderMembersFix] 2025-09-27T13:11:44.896507 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896507 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896507 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896507
[ReorderMembersFix] 2025-09-27T13:11:44.896602 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896602 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896602 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896602
[ReorderMembersFix] 2025-09-27T13:11:44.896702 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896702 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896702 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896702
[ReorderMembersFix] 2025-09-27T13:11:44.896805 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.896805 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.896805 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.896805
[ReorderMembersFix] 2025-09-27T13:11:44.898901 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.898901 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.898901 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.898901
[ReorderMembersFix] 2025-09-27T13:11:44.899033 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.899033 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899033 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.899033
[ReorderMembersFix] 2025-09-27T13:11:44.899133 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.899133 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899133 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.899133
[ReorderMembersFix] 2025-09-27T13:11:44.899229 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.899229 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899229 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.899229
[ReorderMembersFix] 2025-09-27T13:11:44.899321 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.899321 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899321 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.899321
[ReorderMembersFix] 2025-09-27T13:11:44.899876 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.899876 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899876 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.899876
[ReorderMembersFix] 2025-09-27T13:11:44.899987 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.899987 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.899987 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.899987
[ReorderMembersFix] 2025-09-27T13:11:44.900089 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.900089 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.900089 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.900089
[ReorderMembersFix] 2025-09-27T13:11:44.900192 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.900192 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.900192 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.900192
[ReorderMembersFix] 2025-09-27T13:11:44.900296 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.900296 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.900296 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.900296
[ReorderMembersFix] 2025-09-27T13:11:44.901783 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.901783 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.901783 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.901783
[ReorderMembersFix] 2025-09-27T13:11:44.902368 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.902368 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902368 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.902368
[ReorderMembersFix] 2025-09-27T13:11:44.902497 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.902497 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902497 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.902497
[ReorderMembersFix] 2025-09-27T13:11:44.902616 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.902616 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902616 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.902616
[ReorderMembersFix] 2025-09-27T13:11:44.902750 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.902750 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902750 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.902750
[ReorderMembersFix] 2025-09-27T13:11:44.902908 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.902908 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.902908 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.902908
[ReorderMembersFix] 2025-09-27T13:11:44.903449 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.903449 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903449 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.903449
[ReorderMembersFix] 2025-09-27T13:11:44.903632 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.903632 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903632 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.903632
[ReorderMembersFix] 2025-09-27T13:11:44.903735 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.903735 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903735 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.903735
[ReorderMembersFix] 2025-09-27T13:11:44.903861 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.903861 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.903861 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.903861
[ReorderMembersFix] 2025-09-27T13:11:44.905127 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.905127 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905127 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.905127
[ReorderMembersFix] 2025-09-27T13:11:44.905784 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.905784 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905784 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.905784
[ReorderMembersFix] 2025-09-27T13:11:44.905889 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.905889 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905889 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.905889
[ReorderMembersFix] 2025-09-27T13:11:44.905966 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.905966 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.905966 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.905966
[ReorderMembersFix] 2025-09-27T13:11:44.906047 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.906047 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906047 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.906047
[ReorderMembersFix] 2025-09-27T13:11:44.906131 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.906131 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906131 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.906131
[ReorderMembersFix] 2025-09-27T13:11:44.906214 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.906214 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906214 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.906214
[ReorderMembersFix] 2025-09-27T13:11:44.906573 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.906573 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906573 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.906573
[ReorderMembersFix] 2025-09-27T13:11:44.906665 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.906665 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906665 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.906665
[ReorderMembersFix] 2025-09-27T13:11:44.906749 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.906749 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.906749 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.906749
[ReorderMembersFix] 2025-09-27T13:11:44.908288 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.908288 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.908288 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.908288
[ReorderMembersFix] 2025-09-27T13:11:44.908390 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.908390 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.908390 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.908390
[ReorderMembersFix] 2025-09-27T13:11:44.909053 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.909053 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909053 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.909053
[ReorderMembersFix] 2025-09-27T13:11:44.909187 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.909187 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909187 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.909187
[ReorderMembersFix] 2025-09-27T13:11:44.909303 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.909303 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909303 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.909303
[ReorderMembersFix] 2025-09-27T13:11:44.909405 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.909405 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909405 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.909405
[ReorderMembersFix] 2025-09-27T13:11:44.909509 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.909509 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909509 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.909509
[ReorderMembersFix] 2025-09-27T13:11:44.909623 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.909623 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909623 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.909623
[ReorderMembersFix] 2025-09-27T13:11:44.909740 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.909740 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.909740 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.909740
[ReorderMembersFix] 2025-09-27T13:11:44.910048 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.910048 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.910048 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.910048
[ReorderMembersFix] 2025-09-27T13:11:44.911525 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.911525 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.911525 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.911525
[ReorderMembersFix] 2025-09-27T13:11:44.911637 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.911637 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.911637 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.911637
[ReorderMembersFix] 2025-09-27T13:11:44.912335 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.912335 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912335 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.912335
[ReorderMembersFix] 2025-09-27T13:11:44.912441 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.912441 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912441 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.912441
[ReorderMembersFix] 2025-09-27T13:11:44.912526 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.912526 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912526 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.912526
[ReorderMembersFix] 2025-09-27T13:11:44.912599 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.912599 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912599 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.912599
[ReorderMembersFix] 2025-09-27T13:11:44.912680 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.912680 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912680 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.912680
[ReorderMembersFix] 2025-09-27T13:11:44.912782 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.912782 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912782 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.912782
[ReorderMembersFix] 2025-09-27T13:11:44.912897 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.912897 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.912897 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.912897
[ReorderMembersFix] 2025-09-27T13:11:44.913128 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.913128 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.913128 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.913128
[ReorderMembersFix] 2025-09-27T13:11:44.915009 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.915009 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.915009 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.915009
[ReorderMembersFix] 2025-09-27T13:11:44.915722 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.915722 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.915722 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.915722
[ReorderMembersFix] 2025-09-27T13:11:44.915878 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.915878 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.915878 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.915878
[ReorderMembersFix] 2025-09-27T13:11:44.916026 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.916026 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916026 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.916026
[ReorderMembersFix] 2025-09-27T13:11:44.916161 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.916161 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916161 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.916161
[ReorderMembersFix] 2025-09-27T13:11:44.916251 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.916251 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916251 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.916251
[ReorderMembersFix] 2025-09-27T13:11:44.916753 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.916753 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916753 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.916753
[ReorderMembersFix] 2025-09-27T13:11:44.916861 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.916861 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916861 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.916861
[ReorderMembersFix] 2025-09-27T13:11:44.916951 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.916951 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.916951 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.916951
[ReorderMembersFix] 2025-09-27T13:11:44.917050 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.917050 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.917050 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.917050
[ReorderMembersFix] 2025-09-27T13:11:44.918849 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.918849 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.918849 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.918849
[ReorderMembersFix] 2025-09-27T13:11:44.919516 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.919516 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919516 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.919516
[ReorderMembersFix] 2025-09-27T13:11:44.919640 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.919640 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919640 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.919640
[ReorderMembersFix] 2025-09-27T13:11:44.919744 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.919744 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919744 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.919744
[ReorderMembersFix] 2025-09-27T13:11:44.919926 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.919926 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.919926 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.919926
[ReorderMembersFix] 2025-09-27T13:11:44.920061 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.920061 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920061 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.920061
[ReorderMembersFix] 2025-09-27T13:11:44.920143 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.920143 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920143 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.920143
[ReorderMembersFix] 2025-09-27T13:11:44.920523 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.920523 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920523 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.920523
[ReorderMembersFix] 2025-09-27T13:11:44.920615 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.920615 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920615 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.920615
[ReorderMembersFix] 2025-09-27T13:11:44.920719 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.920719 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.920719 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.920719
[ReorderMembersFix] 2025-09-27T13:11:44.922327 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.922327 ConflictingEditException: {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25508,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.922327 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.922327
[ReorderMembersFix] 2025-09-27T13:11:44.922979 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.922979 ConflictingEditException: {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14343,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.922979 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.922979
[ReorderMembersFix] 2025-09-27T13:11:44.923113 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.923113 ConflictingEditException: {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14903,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923113 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.923113
[ReorderMembersFix] 2025-09-27T13:11:44.923220 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.923220 ConflictingEditException: {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17501,"length":1265,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const int either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const int ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const int ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923220 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.923220
[ReorderMembersFix] 2025-09-27T13:11:44.923336 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.923336 ConflictingEditException: {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18893,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923336 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.923336
[ReorderMembersFix] 2025-09-27T13:11:44.923439 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.923439 ConflictingEditException: {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19585,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923439 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.923439
[ReorderMembersFix] 2025-09-27T13:11:44.923539 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.923539 ConflictingEditException: {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20293,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.923539 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.923539
[ReorderMembersFix] 2025-09-27T13:11:44.924774 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.924774 ConflictingEditException: {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20889,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.924774 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.924774
[ReorderMembersFix] 2025-09-27T13:11:44.924936 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.924936 ConflictingEditException: {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22260,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.924936 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.924936
[ReorderMembersFix] 2025-09-27T13:11:44.925062 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:44.925062 ConflictingEditException: {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23912,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:44.925062 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:44.925062
[ReorderMembersFix] 2025-09-27T13:11:55.296874 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.296874 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.296874 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.296874
[ReorderMembersFix] 2025-09-27T13:11:55.297137 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.297137 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.297137 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.297137
[ReorderMembersFix] 2025-09-27T13:11:55.298386 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.298386 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298386 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.298386
[ReorderMembersFix] 2025-09-27T13:11:55.298565 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.298565 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298565 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.298565
[ReorderMembersFix] 2025-09-27T13:11:55.298707 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.298707 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298707 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.298707
[ReorderMembersFix] 2025-09-27T13:11:55.298926 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.298926 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.298926 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.298926
[ReorderMembersFix] 2025-09-27T13:11:55.299138 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.299138 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299138 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.299138
[ReorderMembersFix] 2025-09-27T13:11:55.299345 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.299345 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299345 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.299345
[ReorderMembersFix] 2025-09-27T13:11:55.299546 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.299546 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299546 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.299546
[ReorderMembersFix] 2025-09-27T13:11:55.299725 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.299725 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.299725 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.299725
[ReorderMembersFix] 2025-09-27T13:11:55.300994 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.300994 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.300994 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.300994
[ReorderMembersFix] 2025-09-27T13:11:55.301167 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.301167 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301167 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.301167
[ReorderMembersFix] 2025-09-27T13:11:55.301340 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.301340 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301340 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.301340
[ReorderMembersFix] 2025-09-27T13:11:55.301514 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.301514 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301514 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.301514
[ReorderMembersFix] 2025-09-27T13:11:55.301688 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.301688 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301688 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.301688
[ReorderMembersFix] 2025-09-27T13:11:55.301871 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.301871 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.301871 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.301871
[ReorderMembersFix] 2025-09-27T13:11:55.302089 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.302089 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302089 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.302089
[ReorderMembersFix] 2025-09-27T13:11:55.302267 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.302267 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302267 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.302267
[ReorderMembersFix] 2025-09-27T13:11:55.302449 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.302449 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302449 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.302449
[ReorderMembersFix] 2025-09-27T13:11:55.302635 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.302635 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.302635 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.302635
[ReorderMembersFix] 2025-09-27T13:11:55.304202 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.304202 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304202 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.304202
[ReorderMembersFix] 2025-09-27T13:11:55.304381 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.304381 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304381 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.304381
[ReorderMembersFix] 2025-09-27T13:11:55.304524 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.304524 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304524 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.304524
[ReorderMembersFix] 2025-09-27T13:11:55.304668 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.304668 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304668 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.304668
[ReorderMembersFix] 2025-09-27T13:11:55.304820 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.304820 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304820 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.304820
[ReorderMembersFix] 2025-09-27T13:11:55.304999 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.304999 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.304999 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.304999
[ReorderMembersFix] 2025-09-27T13:11:55.305170 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.305170 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305170 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.305170
[ReorderMembersFix] 2025-09-27T13:11:55.305366 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.305366 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305366 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.305366
[ReorderMembersFix] 2025-09-27T13:11:55.305523 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.305523 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305523 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.305523
[ReorderMembersFix] 2025-09-27T13:11:55.305683 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.305683 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.305683 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.305683
[ReorderMembersFix] 2025-09-27T13:11:55.307117 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.307117 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307117 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.307117
[ReorderMembersFix] 2025-09-27T13:11:55.307290 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.307290 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307290 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.307290
[ReorderMembersFix] 2025-09-27T13:11:55.307462 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.307462 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307462 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.307462
[ReorderMembersFix] 2025-09-27T13:11:55.307648 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.307648 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307648 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.307648
[ReorderMembersFix] 2025-09-27T13:11:55.307850 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.307850 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.307850 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.307850
[ReorderMembersFix] 2025-09-27T13:11:55.308029 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.308029 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308029 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.308029
[ReorderMembersFix] 2025-09-27T13:11:55.308203 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.308203 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308203 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.308203
[ReorderMembersFix] 2025-09-27T13:11:55.308381 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.308381 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308381 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.308381
[ReorderMembersFix] 2025-09-27T13:11:55.308563 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.308563 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308563 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.308563
[ReorderMembersFix] 2025-09-27T13:11:55.308750 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.308750 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.308750 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.308750
[ReorderMembersFix] 2025-09-27T13:11:55.310090 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.310090 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310090 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.310090
[ReorderMembersFix] 2025-09-27T13:11:55.310278 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.310278 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310278 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.310278
[ReorderMembersFix] 2025-09-27T13:11:55.310480 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.310480 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310480 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.310480
[ReorderMembersFix] 2025-09-27T13:11:55.310699 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.310699 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310699 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.310699
[ReorderMembersFix] 2025-09-27T13:11:55.310902 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.310902 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.310902 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.310902
[ReorderMembersFix] 2025-09-27T13:11:55.311081 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.311081 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311081 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.311081
[ReorderMembersFix] 2025-09-27T13:11:55.311257 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.311257 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311257 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.311257
[ReorderMembersFix] 2025-09-27T13:11:55.311435 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.311435 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311435 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.311435
[ReorderMembersFix] 2025-09-27T13:11:55.311615 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.311615 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311615 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.311615
[ReorderMembersFix] 2025-09-27T13:11:55.311804 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.311804 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.311804 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.311804
[ReorderMembersFix] 2025-09-27T13:11:55.313123 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.313123 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313123 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.313123
[ReorderMembersFix] 2025-09-27T13:11:55.313296 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.313296 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313296 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.313296
[ReorderMembersFix] 2025-09-27T13:11:55.313471 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.313471 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313471 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.313471
[ReorderMembersFix] 2025-09-27T13:11:55.313647 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.313647 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313647 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.313647
[ReorderMembersFix] 2025-09-27T13:11:55.313844 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.313844 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.313844 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.313844
[ReorderMembersFix] 2025-09-27T13:11:55.314022 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.314022 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314022 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.314022
[ReorderMembersFix] 2025-09-27T13:11:55.314200 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.314200 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314200 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.314200
[ReorderMembersFix] 2025-09-27T13:11:55.314356 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.314356 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314356 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.314356
[ReorderMembersFix] 2025-09-27T13:11:55.314514 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.314514 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314514 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.314514
[ReorderMembersFix] 2025-09-27T13:11:55.314672 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.314672 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.314672 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.314672
[ReorderMembersFix] 2025-09-27T13:11:55.315989 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.315989 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.315989 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.315989
[ReorderMembersFix] 2025-09-27T13:11:55.316168 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.316168 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316168 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.316168
[ReorderMembersFix] 2025-09-27T13:11:55.316314 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.316314 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316314 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.316314
[ReorderMembersFix] 2025-09-27T13:11:55.316460 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.316460 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316460 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.316460
[ReorderMembersFix] 2025-09-27T13:11:55.316614 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.316614 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316614 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.316614
[ReorderMembersFix] 2025-09-27T13:11:55.316748 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.316748 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316748 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.316748
[ReorderMembersFix] 2025-09-27T13:11:55.316889 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.316889 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.316889 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.316889
[ReorderMembersFix] 2025-09-27T13:11:55.317039 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.317039 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.317039 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.317039
[ReorderMembersFix] 2025-09-27T13:11:55.317192 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.317192 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.317192 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.317192
[ReorderMembersFix] 2025-09-27T13:11:55.317392 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.317392 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.317392 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.317392
[ReorderMembersFix] 2025-09-27T13:11:55.318694 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.318694 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.318694 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.318694
[ReorderMembersFix] 2025-09-27T13:11:55.318957 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.318957 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.318957 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.318957
[ReorderMembersFix] 2025-09-27T13:11:55.319108 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.319108 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319108 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.319108
[ReorderMembersFix] 2025-09-27T13:11:55.319256 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.319256 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319256 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.319256
[ReorderMembersFix] 2025-09-27T13:11:55.319412 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.319412 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319412 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.319412
[ReorderMembersFix] 2025-09-27T13:11:55.319562 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.319562 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319562 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.319562
[ReorderMembersFix] 2025-09-27T13:11:55.319705 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.319705 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319705 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.319705
[ReorderMembersFix] 2025-09-27T13:11:55.319860 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.319860 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.319860 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.319860
[ReorderMembersFix] 2025-09-27T13:11:55.320014 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.320014 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.320014 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.320014
[ReorderMembersFix] 2025-09-27T13:11:55.320169 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.320169 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.320169 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.320169
[ReorderMembersFix] 2025-09-27T13:11:55.322448 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.322448 ConflictingEditException: {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":25484,"length":1015,"replacement":"  /// The list of allowed values.\n  final List<Object> validItems;\n\n  final bool caseSensitive;\n\n  /// Checks that the input matches one of the\n  /// provided [validItems].\n  /// If the validator fails it prints out the\n  /// list of available inputs.\n  /// By default [caseSensitive] matches are off.\n  _AskValidatorList(this.validItems, {this.caseSensitive = false});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    if (caseSensitive) {\n      finalline = finalline.toLowerCase();\n    }\n    var found = false;\n    for (final item in validItems) {\n      var itemValue = item.toString();\n      if (caseSensitive) {\n        itemValue = itemValue.toLowerCase();\n      }\n\n      if (finalline == itemValue) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The valid responses are ${validItems.join(' | ')}.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322448 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.322448
[ReorderMembersFix] 2025-09-27T13:11:55.322629 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.322629 ConflictingEditException: {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14331,"length":372,"replacement":"  final List<String> protocols;\n\n  const _AskURL({this.protocols = const ['https']});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim().toLowerCase();\n\n    if (!isURL(finalLine, protocols: protocols)) {\n      throw AskValidatorException(red(customErrorMessage ?? 'Invalid URL.'));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322629 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.322629
[ReorderMembersFix] 2025-09-27T13:11:55.322783 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.322783 ConflictingEditException: {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"} conflicts with {"offset":14891,"length":596,"replacement":"  final String regexp;\n\n  late final RegExp _regexp;\n\n  late final String _error;\n\n  /// Creates a regular expression based validator.\n  /// You can customise the error message by providing a value for [error].\n  _AskRegExp(this.regexp, {String? error}) {\n    _regexp = RegExp(regexp);\n    _error = error ?? 'Input does not match: $regexp';\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalLine = line.trim();\n\n    if (!_regexp.hasMatch(finalLine)) {\n      throw AskValidatorException(red(customErrorMessage ?? _error));\n    }\n    return finalLine;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322783 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.322783
[ReorderMembersFix] 2025-09-27T13:11:55.322950 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.322950 ConflictingEditException: {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"} conflicts with {"offset":17489,"length":1253,"replacement":"  /// The ip address may be either [ipv4] or [ipv6].\n  static const either = 0;\n\n  /// The ip address must be an ipv4 address.\n  static const ipv4 = 4;\n\n  /// The ip address must be an ipv6 address.\n  static const ipv6 = 6;\n\n  /// IP version (on 4 and 6 are valid versions.)\n  final int version;\n\n  /// Validates that input is a IP address\n  /// By default both v4 and v6 addresses are valid\n  /// Pass a [version] to limit the input to one or the\n  /// other. If passed [version] must be 4 or 6.\n  const AskValidatorIPAddress({this.version = either});\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    assert(\n      version == either || version == ipv4 || version == ipv6,\n      'The version must be AskValidatorIPAddress.either or '\n      'AskValidatorIPAddress.ipv4 or AskValidatorIPAddress.ipv6',\n    );\n\n    final finalline = line.trim();\n\n    var validatorsVersion = IPVersion.any;\n    switch (version) {\n      case ipv4:\n        validatorsVersion = IPVersion.ipV4;\n      case ipv6:\n        validatorsVersion = IPVersion.ipV6;\n    }\n\n    if (!isIP(finalline, version: validatorsVersion)) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Invalid IP Address.'));\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.322950 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.322950
[ReorderMembersFix] 2025-09-27T13:11:55.323114 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.323114 ConflictingEditException: {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":18869,"length":566,"replacement":"  /// the maximum allows length for the entered string.\n  final int maxLength;\n\n  /// Validates that the entered line is no longer\n  /// than [maxLength].\n  const _AskValidatorMaxLength(this.maxLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length > maxLength) {\n      throw AskValidatorException(\n        red(\n          customErrorMessage ??\n              'You have exceeded the maximum length of $maxLength characters.',\n        ),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323114 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.323114
[ReorderMembersFix] 2025-09-27T13:11:55.323274 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.323274 ConflictingEditException: {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"} conflicts with {"offset":19561,"length":517,"replacement":"  /// the minimum allows length of the string.\n  final int minLength;\n\n  /// Validates that the entered line is not less\n  /// than [minLength].\n  const _AskValidatorMinLength(this.minLength);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    if (finalline.length < minLength) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'You must enter at least $minLength characters.'),\n      );\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323274 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.323274
[ReorderMembersFix] 2025-09-27T13:11:55.323426 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.323426 ConflictingEditException: {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"} conflicts with {"offset":20269,"length":539,"replacement":"  late _AskValidatorAll _validator;\n\n  /// Validates that the length of the entered text\n  /// as at least [minLength] but no more than [maxLength].\n  _AskValidatorLength(int minLength, int maxLength) {\n    _validator = _AskValidatorAll([\n      _AskValidatorMinLength(minLength),\n      _AskValidatorMaxLength(maxLength),\n    ]);\n  }\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    return _validator.validate(finalline,\n        customErrorMessage: customErrorMessage);\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323426 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.323426
[ReorderMembersFix] 2025-09-27T13:11:55.323575 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.323575 ConflictingEditException: {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"} conflicts with {"offset":20865,"length":779,"replacement":"  final num minValue;\n\n  final num maxValue;\n\n  const _AskValidatorValueRange(this.minValue, this.maxValue);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    final finalline = line.trim();\n\n    final value = num.tryParse(finalline);\n    if (value == null) {\n      throw AskValidatorException(\n          red(customErrorMessage ?? 'Must be a number.'));\n    }\n\n    if (value < minValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be greater than or equal to $minValue.'),\n      );\n    }\n\n    if (value > maxValue) {\n      throw AskValidatorException(\n        red(customErrorMessage ??\n            'The number must be less than or equal to $maxValue.'),\n      );\n    }\n\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323575 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.323575
[ReorderMembersFix] 2025-09-27T13:11:55.323726 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.323726 ConflictingEditException: {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"} conflicts with {"offset":22236,"length":932,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid only if\n  /// everyone of the validators pass.\n  ///\n  /// The validators are processed in order from left to right.\n  ///\n  /// The error from the first validator that failes is returned.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and the validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all validators that appear earlier\n  /// in the list.\n  _AskValidatorAll(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    for (final validator in _validators) {\n      finalline =\n          validator.validate(finalline, customErrorMessage: customErrorMessage);\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323726 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.323726
[ReorderMembersFix] 2025-09-27T13:11:55.323893 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/ask.dart:
[ReorderMembersFix] 2025-09-27T13:11:55.323893 ConflictingEditException: {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"} conflicts with {"offset":23888,"length":1398,"replacement":"  final List<AskValidator> _validators;\n\n  /// Takes an array of validators. The input is considered valid if any one\n  /// of the validators returns true.\n  /// The validators are processed in order from left to right.\n  /// If none of the validators pass then the error from the first validator\n  /// that failed is returned. The implications is that the user will only\n  /// ever see the error from the first validator.\n  ///\n  /// It should be noted that the user input is passed to each validator in turn\n  /// and each validator has the opportunity to modify the input. As a result\n  /// a validators will be operating on a version of the input\n  /// that has been processed  by all successful validators\n  /// that appear earlier in the list.\n  ///\n  /// Validators that fail don't get an opportunity to modify the input.\n  _AskValidatorAny(this._validators);\n\n  @override\n  String validate(String line, {String? customErrorMessage}) {\n    var finalline = line.trim();\n\n    AskValidatorException? firstFailure;\n\n    var onePassed = false;\n\n    for (final validator in _validators) {\n      try {\n        finalline = validator.validate(finalline,\n            customErrorMessage: customErrorMessage);\n        onePassed = true;\n      } on AskValidatorException catch (e) {\n        firstFailure ??= e;\n      }\n    }\n    if (!onePassed) {\n      throw firstFailure!;\n    }\n    return finalline;\n  }"}
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:11:55.323893 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:11:55.323893
[ReorderMembersFix] 2025-09-27T13:17:03.379220 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.379220 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.379220 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.379220
[ReorderMembersFix] 2025-09-27T13:17:03.379527 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.379527 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.379527 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.379527
[ReorderMembersFix] 2025-09-27T13:17:03.379770 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.379770 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.379770 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.379770
[ReorderMembersFix] 2025-09-27T13:17:03.380193 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.380193 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380193 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.380193
[ReorderMembersFix] 2025-09-27T13:17:03.380400 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.380400 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380400 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.380400
[ReorderMembersFix] 2025-09-27T13:17:03.380582 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.380582 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380582 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.380582
[ReorderMembersFix] 2025-09-27T13:17:03.380958 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.380958 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.380958 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.380958
[ReorderMembersFix] 2025-09-27T13:17:03.381216 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.381216 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.381216 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.381216
[ReorderMembersFix] 2025-09-27T13:17:03.381485 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.381485 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.381485 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.381485
[ReorderMembersFix] 2025-09-27T13:17:03.384781 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.384781 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.384781 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.384781
[ReorderMembersFix] 2025-09-27T13:17:03.384971 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.384971 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.384971 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.384971
[ReorderMembersFix] 2025-09-27T13:17:03.385102 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.385102 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385102 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.385102
[ReorderMembersFix] 2025-09-27T13:17:03.385268 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.385268 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385268 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.385268
[ReorderMembersFix] 2025-09-27T13:17:03.385410 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.385410 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385410 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.385410
[ReorderMembersFix] 2025-09-27T13:17:03.385637 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.385637 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385637 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.385637
[ReorderMembersFix] 2025-09-27T13:17:03.385766 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.385766 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385766 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.385766
[ReorderMembersFix] 2025-09-27T13:17:03.385909 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.385909 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.385909 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.385909
[ReorderMembersFix] 2025-09-27T13:17:03.386582 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.386582 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.386582 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.386582
[ReorderMembersFix] 2025-09-27T13:17:03.386809 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.386809 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.386809 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.386809
[ReorderMembersFix] 2025-09-27T13:17:03.422606 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.422606 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.422606 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.422606
[ReorderMembersFix] 2025-09-27T13:17:03.733240 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.733240 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.733240 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.733240
[ReorderMembersFix] 2025-09-27T13:17:03.733613 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.733613 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.733613 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.733613
[ReorderMembersFix] 2025-09-27T13:17:03.733917 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.733917 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.733917 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.733917
[ReorderMembersFix] 2025-09-27T13:17:03.734309 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.734309 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.734309 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.734309
[ReorderMembersFix] 2025-09-27T13:17:03.734492 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.734492 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.734492 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.734492
[ReorderMembersFix] 2025-09-27T13:17:03.734710 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.734710 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.734710 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.734710
[ReorderMembersFix] 2025-09-27T13:17:03.735389 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.735389 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.735389 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.735389
[ReorderMembersFix] 2025-09-27T13:17:03.735634 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.735634 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.735634 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.735634
[ReorderMembersFix] 2025-09-27T13:17:03.735864 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.735864 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.735864 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.735864
[ReorderMembersFix] 2025-09-27T13:17:03.736047 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.736047 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.736047 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.736047
[ReorderMembersFix] 2025-09-27T13:17:03.741371 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.741371 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741371 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.741371
[ReorderMembersFix] 2025-09-27T13:17:03.741607 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.741607 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741607 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.741607
[ReorderMembersFix] 2025-09-27T13:17:03.741796 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.741796 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741796 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.741796
[ReorderMembersFix] 2025-09-27T13:17:03.741970 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.741970 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.741970 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.741970
[ReorderMembersFix] 2025-09-27T13:17:03.742229 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.742229 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742229 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.742229
[ReorderMembersFix] 2025-09-27T13:17:03.742378 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.742378 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742378 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.742378
[ReorderMembersFix] 2025-09-27T13:17:03.742527 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.742527 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742527 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.742527
[ReorderMembersFix] 2025-09-27T13:17:03.742712 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.742712 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742712 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.742712
[ReorderMembersFix] 2025-09-27T13:17:03.742942 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.742942 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.742942 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.742942
[ReorderMembersFix] 2025-09-27T13:17:03.743206 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:03.743206 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:03.743206 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:03.743206
[ReorderMembersFix] 2025-09-27T13:17:05.182379 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.182379 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.182379 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.182379
[ReorderMembersFix] 2025-09-27T13:17:05.183614 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.183614 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.183614 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.183614
[ReorderMembersFix] 2025-09-27T13:17:05.183884 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.183884 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.183884 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.183884
[ReorderMembersFix] 2025-09-27T13:17:05.184156 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.184156 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.184156 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.184156
[ReorderMembersFix] 2025-09-27T13:17:05.184307 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.184307 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.184307 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.184307
[ReorderMembersFix] 2025-09-27T13:17:05.185959 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.185959 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.185959 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.185959
[ReorderMembersFix] 2025-09-27T13:17:05.187029 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.187029 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187029 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.187029
[ReorderMembersFix] 2025-09-27T13:17:05.187165 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.187165 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187165 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.187165
[ReorderMembersFix] 2025-09-27T13:17:05.187248 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.187248 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187248 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.187248
[ReorderMembersFix] 2025-09-27T13:17:05.187324 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.187324 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.187324 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.187324
[ReorderMembersFix] 2025-09-27T13:17:05.188167 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.188167 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.188167 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.188167
[ReorderMembersFix] 2025-09-27T13:17:05.189337 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.189337 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.189337 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.189337
[ReorderMembersFix] 2025-09-27T13:17:05.189553 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.189553 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.189553 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.189553
[ReorderMembersFix] 2025-09-27T13:17:05.189704 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.189704 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.189704 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.189704
[ReorderMembersFix] 2025-09-27T13:17:05.190134 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.190134 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.190134 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.190134
[ReorderMembersFix] 2025-09-27T13:17:05.190861 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.190861 ConflictingEditException: {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"} conflicts with {"offset":21700,"length":554,"replacement":"  /// If this [FetchException] occured due to an [OSError] then\n  /// this contains the underlying error.\n  int? errorCode;\n\n  /// ctor\n  FetchException(super.message) : errorCode = OSError.noErrorCode;\n\n  /// Create an exception from a SocketException\n  FetchException.fromException(SocketException super.cause)\n      : errorCode = cause.osError?.errorCode,\n        super.fromException();\n\n  /// Create a FetchException as the result of a\n  /// HTTP error.\n  FetchException.fromHttpError(this.errorCode, String reasonPhrase)\n      : super(reasonPhrase);"}
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.190861 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.190861
[ReorderMembersFix] 2025-09-27T13:17:05.191978 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.191978 ConflictingEditException: {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"} conflicts with {"offset":4177,"length":2452,"replacement":"  final _FetchDataType _type;\n\n  final String _mimeType;\n\n  String? _string;\n\n  String? _pathToDataFile;\n\n  List<int>? _bytes;\n\n  Stream<List<int>>? _stream;\n\n  /// Use a String as the source of the [FetchData]\n  /// The [mimeType] defaults to text/plain.\n  FetchData.fromString(String string, {String mimeType = 'text/plain'})\n      : _string = string,\n        _type = _FetchDataType.string,\n        _mimeType = mimeType;\n\n  /// Read the [FetchData] from a file where\n  /// [pathToData] is the path to the file\n  /// containing the data to send.\n  /// [pathToData] may be relative or absolute.\n  /// If the mimeType isn't passed then we use the file\n  /// extension to determine the [mimeType] if that fails\n  /// we revert to text/plain.\n  /// throws [FetchException] if the file at [pathToData]\n  /// does not exist or it is not a file.\n  FetchData.fromFile(String pathToData, {String? mimeType})\n      : _pathToDataFile = pathToData,\n        _type = _FetchDataType.path,\n        _mimeType = mimeType ?? lookupMimeType(pathToData) ?? 'text/plain' {\n    if (!exists(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} does not exist');\n    }\n    if (!isFile(pathToData)) {\n      throw FetchException('${core.truepath(pathToData)} is not a file');\n    }\n  }\n\n  /// Use the passed [bytes] as the source\n  /// of the [FetchData].\n  ///\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromBytes(List<int> bytes,\n      {String mimeType = 'application/octet-stream'})\n      : _bytes = bytes,\n        _type = _FetchDataType.bytes,\n        _mimeType = mimeType;\n\n  /// Use the [stream] as the source of the [FetchData]\n  /// to send.\n  /// The [mimeType] defaults to application/octet-stream\n  FetchData.fromStream(Stream<List<int>> stream,\n      {String mimeType = 'application/octet-stream'})\n      : _stream = stream,\n        _type = _FetchDataType.stream,\n        _mimeType = mimeType;\n\n  /// Returns the mime type of the data.\n  String get mimeType => _mimeType;\n\n  Future<void> _write(HttpClientRequest request) async {\n    switch (_type) {\n      case _FetchDataType.string:\n        request.write(_string);\n      case _FetchDataType.path:\n        final file = File(_pathToDataFile!);\n        final stream = file.openRead();\n        await request.addStream(stream);\n      case _FetchDataType.bytes:\n        request.add(_bytes!);\n      case _FetchDataType.stream:\n        await request.addStream(_stream!);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.191978 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.191978
[ReorderMembersFix] 2025-09-27T13:17:05.192179 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.192179 ConflictingEditException: {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"} conflicts with {"offset":13554,"length":1085,"replacement":"  /// the URL of the resource being downloaded\n  final String url;\n\n  /// The path to the file the download will be saved to.\n  final String saveToPath;\n\n  /// If provided this is the callback to allow the caller\n  /// to monitor the download progress.\n  final OnFetchProgress progress;\n\n  /// the HTTP method to use when sending the url\n  /// Defaults to get.\n  final FetchMethod method;\n\n  /// The set of HTTP headers to send with the request.\n  late final Map<String, String> headers;\n\n  /// For [FetchMethod]s that allow you to send data\n  /// such as [FetchMethod.post] this holds the data\n  /// that is to be sent.\n  FetchData? data;\n\n  /// ctor.\n  FetchUrl(\n      {required this.url,\n      required this.saveToPath,\n      Map<String, String>? headers,\n      this.method = FetchMethod.get,\n      this.progress = _devNull,\n      this.data}) {\n    this.headers = headers ?? <String, String>{};\n\n    if (data != null && method != FetchMethod.post) {\n      throw FetchException('FetchData is not supported for the FetchMethod:'\n          '${EnumHelper().getName(method)}');\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.192179 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.192179
[ReorderMembersFix] 2025-09-27T13:17:05.192335 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.192335 ConflictingEditException: {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"} conflicts with {"offset":14753,"length":6692,"replacement":"  /// When the [FetchStatus.headers] event is sent\n  /// this will contain the headers. At all\n  /// other times it will be null.\n  final Map<String, List<String>>? headers;\n\n  /// When the [FetchStatus.response] event is recieved\n  /// this value will containe the response code.\n  final int? responseCode;\n\n  /// The current status of the downloader.\n  final FetchStatus status;\n\n  /// Details of the url that is being fetched\n  final FetchUrl fetch;\n\n  /// The length (in bytes) of the file being downloaded.\n  /// This isn't set until we get the initial response.\n  /// In some cases it still won't be set if the remote server\n  /// doesn't respond with a length.\n  final int length;\n\n  /// The number of bytes downloaded so far.\n  final int downloaded;\n\n  /// a value from 0.0 to 1.0 indicating the percentage progress.\n  /// You are guarneteed to get a final progress event with a value of 1.0\n  final double progress;\n\n  /// The prior [FetchProgress].\n  /// This is provided so you can compare the start between the existing\n  /// and prior state which may be useful when outputting progress\n  /// messages.\n  FetchProgress? prior;\n\n  @visibleForTesting\n\n  /// Fetch is preparing to connect\n  FetchProgress.initialising(this.fetch)\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.initialising,\n        headers = null,\n        responseCode = null,\n        prior = null;\n\n  @visibleForTesting\n\n  /// Fetch is connecting\n  FetchProgress.connecting(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connecting,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch connected\n  FetchProgress.connected(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.connected,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch is downloading. You will get multiples of this event.\n  @visibleForTesting\n  FetchProgress.downloading(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : status = FetchStatus.downloading,\n        progress = length != 0 ? downloaded / length : 0,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fetch completed downloading the file\n  @visibleForTesting\n  FetchProgress.complete(this.fetch, this.length, this.downloaded,\n      {required this.prior})\n      : progress = 1.0,\n        status = FetchStatus.complete,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// An error occured whilst downloading the file.\n  @visibleForTesting\n  FetchProgress.error(this.fetch, {required this.prior})\n      : progress = 0.0,\n        length = 0,\n        downloaded = 0,\n        status = FetchStatus.error,\n        headers = null,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  /// Fech has retrieved the HTTP headers\n  @visibleForTesting\n  FetchProgress.forHeaders(this.fetch, this.headers, {required this.prior})\n      : status = FetchStatus.headers,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        responseCode = null {\n    prior?.prior = null;\n  }\n\n  @visibleForTesting\n\n  /// Fetch has recieved the HTTP response code\n  FetchProgress.response(this.fetch, this.responseCode, {required this.prior})\n      : status = FetchStatus.response,\n        progress = 0,\n        length = 0,\n        downloaded = 0,\n        headers = null {\n    prior?.prior = null;\n  }\n\n  /// Shows the progress by replacing the console existing line with the\n  /// message:\n  /// <Status> XX/YY <url>\n  ///\n  /// Where XX is the bytes downloaded and YY is the total bytes to download.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: FetchProgress.showBytes\n  ///         });\n  /// ```\n  static void showBytes(FetchProgress progress) {\n    final update = formatByteLine(progress);\n    if (update.newline) {\n      print('\\n${update.value}');\n    } else {\n      Terminal()\n        ..column = update.offset\n        ..write(update.value);\n    }\n  }\n\n  /// Formatter for [showBytes]\n  @visibleForTesting\n  // ignore: library_private_types_in_public_api\n  static _ProgressByteUpdate formatByteLine(FetchProgress progress) {\n    _ProgressByteUpdate update;\n    final status = _fixedWidthStatus(progress.status);\n    final downloaded = Format().bytesAsReadable(progress.downloaded);\n    final total = Format().bytesAsReadable(progress.length, pad: false);\n\n    final url = Format().limitString(progress.fetch.url);\n    switch (progress.status) {\n      case FetchStatus.initialising:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n\n      case FetchStatus.connected:\n      case FetchStatus.connecting:\n      case FetchStatus.headers:\n      case FetchStatus.response:\n      case FetchStatus.error:\n        update = _ProgressByteUpdate(0, '$status      ?/?      $url');\n      case FetchStatus.downloading:\n        if (progress.prior?.status == FetchStatus.downloading) {\n          update = _ProgressByteUpdate(14, '$downloaded/$total');\n        } else {\n          update = _ProgressByteUpdate(0, '$status $downloaded/$total');\n        }\n      case FetchStatus.complete:\n        update =\n            _ProgressByteUpdate(0, '$status $downloaded/$total', newline: true);\n    }\n\n    return update;\n  }\n\n  // status right padded to 12 chars\n  static String _fixedWidthStatus(FetchStatus status) =>\n      '${EnumHelper().getName(status)}:'.padRight(13);\n\n  /// Shows the progress by overwritting the existing console line with the\n  /// string returned from [format].\n  /// Once the download is complete a final newline will be sent to the console\n  /// so that subsequent output from your script will go on a separate line.\n  ///\n  /// ```dart\n  ///  fetch(\n  ///      url:\n  ///          'https://some/resource/file.zip',\n  ///     saveToPath: pathToPiImage,\n  ///     fetchProgress: (progress) => 'So far: progress.download')\n  ///         });\n  /// ```\n  static void show(\n    FetchProgress progress, {\n    String Function(FetchProgress progress)? format,\n  }) {\n    final message = format == null ? progress.toString() : format(progress);\n    Terminal().overwriteLine(message);\n    if (progress.status == FetchStatus.complete) {\n      print('');\n    }\n  }\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(status)}: ${Format().bytesAsReadable(downloaded)}/${Format().bytesAsReadable(length)} ${fetch.url}';"}
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.192335 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.192335
[ReorderMembersFix] 2025-09-27T13:17:05.192584 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/fetch.dart:
[ReorderMembersFix] 2025-09-27T13:17:05.192584 ConflictingEditException: {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"} conflicts with {"offset":21477,"length":117,"replacement":"  int offset;\n\n  String value;\n\n  bool newline;\n\n  _ProgressByteUpdate(this.offset, this.value, {this.newline = false});"}
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:17:05.192584 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:17:05.192584
[ReorderMembersFix] 2025-09-27T13:18:06.828124 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/head.dart:
[ReorderMembersFix] 2025-09-27T13:18:06.828124 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[ReorderMembersFix] 2025-09-27T13:18:06.828124
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #6      _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #10     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:18:06.828124 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:18:06.828124
[IgnoreCode] 2025-09-27T13:18:06.830298 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/head.dart:
[IgnoreCode] 2025-09-27T13:18:06.830298 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:18:06.830298
[IgnoreCode] 2025-09-27T13:18:06.830298 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:18:06.830298 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:18:06.830298 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:18:06.830298 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:18:06.830298 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:18:06.830298 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:18:06.830298 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:18:06.830298 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:18:06.830298 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:18:06.830298 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:18:06.830298 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:18:06.830298 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:18:06.830298 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:18:06.830298 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:18:06.830298 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:18:06.830298 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:18:06.830298 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:18:06.830298
[IgnoreCode] 2025-09-27T13:18:06.830520 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/functions/head.dart:
[IgnoreCode] 2025-09-27T13:18:06.830520 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:18:06.830520
[IgnoreCode] 2025-09-27T13:18:06.830520 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:18:06.830520 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:18:06.830520 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:18:06.830520 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:18:06.830520 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:18:06.830520 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:18:06.830520 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:18:06.830520 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:18:06.830520 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:18:06.830520 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:18:06.830520 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:18:06.830520 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:18:06.830520 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:18:06.830520 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:18:06.830520 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:18:06.830520 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:18:06.830520 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:18:06.830520
[ReorderMembersFix] 2025-09-27T13:21:28.167690 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[ReorderMembersFix] 2025-09-27T13:21:28.167690 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[ReorderMembersFix] 2025-09-27T13:21:28.167690
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #6      _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #10     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:28.167690 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:28.167690
[IgnoreCode] 2025-09-27T13:21:28.168274 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[IgnoreCode] 2025-09-27T13:21:28.168274 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:21:28.168274
[IgnoreCode] 2025-09-27T13:21:28.168274 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:21:28.168274 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:21:28.168274 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:21:28.168274 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:21:28.168274 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:21:28.168274 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:21:28.168274 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:21:28.168274 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:28.168274 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:21:28.168274 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:21:28.168274 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:21:28.168274 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:28.168274 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:21:28.168274 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:21:28.168274 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:21:28.168274 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:21:28.168274 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:21:28.168274
[IgnoreCode] 2025-09-27T13:21:28.168440 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[IgnoreCode] 2025-09-27T13:21:28.168440 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:21:28.168440
[IgnoreCode] 2025-09-27T13:21:28.168440 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:21:28.168440 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:21:28.168440 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:21:28.168440 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:21:28.168440 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:21:28.168440 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:21:28.168440 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:21:28.168440 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:28.168440 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:21:28.168440 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:21:28.168440 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:21:28.168440 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:28.168440 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:21:28.168440 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:21:28.168440 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:21:28.168440 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:21:28.168440 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:21:28.168440
[ReorderMembersFix] 2025-09-27T13:21:29.149454 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[ReorderMembersFix] 2025-09-27T13:21:29.149454 ConflictingEditException: {"offset":1021,"length":260,"replacement":"  ProcessSettings process;\n\n  Sendable<Mailbox> toPrimaryIsolate;\n\n  SendPort errorPort;\n\n  SendPort exitPort;\n\n  IsolateChannelSendable({\n    required this.process,\n    required this.toPrimaryIsolate,\n    required this.errorPort,\n    required this.exitPort,\n  });"} conflicts with {"offset":1021,"length":260,"replacement":"  ProcessSettings process;\n\n  Sendable<Mailbox> toPrimaryIsolate;\n\n  SendPort errorPort;\n\n  SendPort exitPort;\n\n  IsolateChannelSendable({\n    required this.process,\n    required this.toPrimaryIsolate,\n    required this.errorPort,\n    required this.exitPort,\n  });"}
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:29.149454 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:29.149454
[ReorderMembersFix] 2025-09-27T13:21:29.149642 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[ReorderMembersFix] 2025-09-27T13:21:29.149642 ConflictingEditException: {"offset":299,"length":687,"replacement":"  /// Settings used when launching the process in the secondary isolate.\n  ProcessSettings process;\n\n  /// Back channel so the secondary isolate can send data to the\n  /// primary isolate.\n  var toPrimaryIsolate = Mailbox();\n\n  /// Report any isolate errors back to the primary isolate.\n  var errorPort = ReceivePort();\n\n  var exitPort = ReceivePort();\n\n  IsolateChannel({\n    required this.process,\n  });\n\n  void close() {\n    errorPort.close();\n    exitPort.close();\n  }\n\n  IsolateChannelSendable asSendable() => IsolateChannelSendable(\n      process: process,\n      toPrimaryIsolate: toPrimaryIsolate.asSendable,\n      errorPort: errorPort.sendPort,\n      exitPort: exitPort.sendPort);"} conflicts with {"offset":299,"length":687,"replacement":"  /// Settings used when launching the process in the secondary isolate.\n  ProcessSettings process;\n\n  /// Back channel so the secondary isolate can send data to the\n  /// primary isolate.\n  var toPrimaryIsolate = Mailbox();\n\n  /// Report any isolate errors back to the primary isolate.\n  var errorPort = ReceivePort();\n\n  var exitPort = ReceivePort();\n\n  IsolateChannel({\n    required this.process,\n  });\n\n  void close() {\n    errorPort.close();\n    exitPort.close();\n  }\n\n  IsolateChannelSendable asSendable() => IsolateChannelSendable(\n      process: process,\n      toPrimaryIsolate: toPrimaryIsolate.asSendable,\n      errorPort: errorPort.sendPort,\n      exitPort: exitPort.sendPort);"}
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:29.149642 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:29.149642
[ReorderMembersFix] 2025-09-27T13:21:29.780996 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[ReorderMembersFix] 2025-09-27T13:21:29.780996 ConflictingEditException: {"offset":1021,"length":260,"replacement":"  ProcessSettings process;\n\n  Sendable<Mailbox> toPrimaryIsolate;\n\n  SendPort errorPort;\n\n  SendPort exitPort;\n\n  IsolateChannelSendable({\n    required this.process,\n    required this.toPrimaryIsolate,\n    required this.errorPort,\n    required this.exitPort,\n  });"} conflicts with {"offset":1021,"length":260,"replacement":"  ProcessSettings process;\n\n  Sendable<Mailbox> toPrimaryIsolate;\n\n  SendPort errorPort;\n\n  SendPort exitPort;\n\n  IsolateChannelSendable({\n    required this.process,\n    required this.toPrimaryIsolate,\n    required this.errorPort,\n    required this.exitPort,\n  });"}
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:29.780996 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:29.780996
[ReorderMembersFix] 2025-09-27T13:21:29.781211 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[ReorderMembersFix] 2025-09-27T13:21:29.781211 ConflictingEditException: {"offset":299,"length":687,"replacement":"  /// Settings used when launching the process in the secondary isolate.\n  ProcessSettings process;\n\n  /// Back channel so the secondary isolate can send data to the\n  /// primary isolate.\n  var toPrimaryIsolate = Mailbox();\n\n  /// Report any isolate errors back to the primary isolate.\n  var errorPort = ReceivePort();\n\n  var exitPort = ReceivePort();\n\n  IsolateChannel({\n    required this.process,\n  });\n\n  void close() {\n    errorPort.close();\n    exitPort.close();\n  }\n\n  IsolateChannelSendable asSendable() => IsolateChannelSendable(\n      process: process,\n      toPrimaryIsolate: toPrimaryIsolate.asSendable,\n      errorPort: errorPort.sendPort,\n      exitPort: exitPort.sendPort);"} conflicts with {"offset":299,"length":687,"replacement":"  /// Settings used when launching the process in the secondary isolate.\n  ProcessSettings process;\n\n  /// Back channel so the secondary isolate can send data to the\n  /// primary isolate.\n  var toPrimaryIsolate = Mailbox();\n\n  /// Report any isolate errors back to the primary isolate.\n  var errorPort = ReceivePort();\n\n  var exitPort = ReceivePort();\n\n  IsolateChannel({\n    required this.process,\n  });\n\n  void close() {\n    errorPort.close();\n    exitPort.close();\n  }\n\n  IsolateChannelSendable asSendable() => IsolateChannelSendable(\n      process: process,\n      toPrimaryIsolate: toPrimaryIsolate.asSendable,\n      errorPort: errorPort.sendPort,\n      exitPort: exitPort.sendPort);"}
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:29.781211 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:29.781211
[ReorderMembersFix] 2025-09-27T13:21:30.431389 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[ReorderMembersFix] 2025-09-27T13:21:30.431389 ConflictingEditException: {"offset":1021,"length":260,"replacement":"  ProcessSettings process;\n\n  Sendable<Mailbox> toPrimaryIsolate;\n\n  SendPort errorPort;\n\n  SendPort exitPort;\n\n  IsolateChannelSendable({\n    required this.process,\n    required this.toPrimaryIsolate,\n    required this.errorPort,\n    required this.exitPort,\n  });"} conflicts with {"offset":1021,"length":260,"replacement":"  ProcessSettings process;\n\n  Sendable<Mailbox> toPrimaryIsolate;\n\n  SendPort errorPort;\n\n  SendPort exitPort;\n\n  IsolateChannelSendable({\n    required this.process,\n    required this.toPrimaryIsolate,\n    required this.errorPort,\n    required this.exitPort,\n  });"}
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:30.431389 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:30.431389
[ReorderMembersFix] 2025-09-27T13:21:30.431643 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/isolate_channel.dart:
[ReorderMembersFix] 2025-09-27T13:21:30.431643 ConflictingEditException: {"offset":299,"length":687,"replacement":"  /// Settings used when launching the process in the secondary isolate.\n  ProcessSettings process;\n\n  /// Back channel so the secondary isolate can send data to the\n  /// primary isolate.\n  var toPrimaryIsolate = Mailbox();\n\n  /// Report any isolate errors back to the primary isolate.\n  var errorPort = ReceivePort();\n\n  var exitPort = ReceivePort();\n\n  IsolateChannel({\n    required this.process,\n  });\n\n  void close() {\n    errorPort.close();\n    exitPort.close();\n  }\n\n  IsolateChannelSendable asSendable() => IsolateChannelSendable(\n      process: process,\n      toPrimaryIsolate: toPrimaryIsolate.asSendable,\n      errorPort: errorPort.sendPort,\n      exitPort: exitPort.sendPort);"} conflicts with {"offset":299,"length":687,"replacement":"  /// Settings used when launching the process in the secondary isolate.\n  ProcessSettings process;\n\n  /// Back channel so the secondary isolate can send data to the\n  /// primary isolate.\n  var toPrimaryIsolate = Mailbox();\n\n  /// Report any isolate errors back to the primary isolate.\n  var errorPort = ReceivePort();\n\n  var exitPort = ReceivePort();\n\n  IsolateChannel({\n    required this.process,\n  });\n\n  void close() {\n    errorPort.close();\n    exitPort.close();\n  }\n\n  IsolateChannelSendable asSendable() => IsolateChannelSendable(\n      process: process,\n      toPrimaryIsolate: toPrimaryIsolate.asSendable,\n      errorPort: errorPort.sendPort,\n      exitPort: exitPort.sendPort);"}
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:30.431643 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:30.431643
[ReorderMembersFix] 2025-09-27T13:21:32.870727 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/message_response.dart:
[ReorderMembersFix] 2025-09-27T13:21:32.870727 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[ReorderMembersFix] 2025-09-27T13:21:32.870727
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #6      _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #10     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:32.870727 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:32.870727
[IgnoreCode] 2025-09-27T13:21:32.870987 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/message_response.dart:
[IgnoreCode] 2025-09-27T13:21:32.870987 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:21:32.870987
[IgnoreCode] 2025-09-27T13:21:32.870987 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:21:32.870987 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:21:32.870987 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:21:32.870987 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:21:32.870987 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:21:32.870987 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:21:32.870987 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:21:32.870987 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:32.870987 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:21:32.870987 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:21:32.870987 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:21:32.870987 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:32.870987 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:21:32.870987 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:21:32.870987 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:21:32.870987 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:21:32.870987 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:21:32.870987
[IgnoreCode] 2025-09-27T13:21:32.871113 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/message_response.dart:
[IgnoreCode] 2025-09-27T13:21:32.871113 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:21:32.871113
[IgnoreCode] 2025-09-27T13:21:32.871113 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:21:32.871113 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:21:32.871113 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:21:32.871113 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:21:32.871113 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:21:32.871113 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:21:32.871113 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:21:32.871113 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:32.871113 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:21:32.871113 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:21:32.871113 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:21:32.871113 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:32.871113 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:21:32.871113 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:21:32.871113 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:21:32.871113 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:21:32.871113 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:21:32.871113
[ReorderMembersFix] 2025-09-27T13:21:47.764269 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/pipe_sync.dart:
[ReorderMembersFix] 2025-09-27T13:21:47.764269 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[ReorderMembersFix] 2025-09-27T13:21:47.764269
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #6      _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #10     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:21:47.764269 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:21:47.764269
[IgnoreCode] 2025-09-27T13:21:47.764443 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/pipe_sync.dart:
[IgnoreCode] 2025-09-27T13:21:47.764443 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:21:47.764443
[IgnoreCode] 2025-09-27T13:21:47.764443 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:21:47.764443 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:21:47.764443 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:21:47.764443 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:21:47.764443 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:21:47.764443 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:21:47.764443 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:21:47.764443 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:47.764443 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:21:47.764443 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:21:47.764443 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:21:47.764443 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:47.764443 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:21:47.764443 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:21:47.764443 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:21:47.764443 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:21:47.764443 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:21:47.764443
[IgnoreCode] 2025-09-27T13:21:47.764542 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/process/process/pipe_sync.dart:
[IgnoreCode] 2025-09-27T13:21:47.764542 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:21:47.764542
[IgnoreCode] 2025-09-27T13:21:47.764542 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:21:47.764542 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:21:47.764542 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:21:47.764542 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:21:47.764542 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:21:47.764542 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:21:47.764542 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:21:47.764542 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:47.764542 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:21:47.764542 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:21:47.764542 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:21:47.764542 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:21:47.764542 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:21:47.764542 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:21:47.764542 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:21:47.764542 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:21:47.764542 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:21:47.764542
[ReorderMembersFix] 2025-09-27T13:22:43.706679 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/progress/progress_line_splitter.dart:
[ReorderMembersFix] 2025-09-27T13:22:43.706679 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[ReorderMembersFix] 2025-09-27T13:22:43.706679
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #6      _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #10     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:22:43.706679 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:22:43.706679
[IgnoreCode] 2025-09-27T13:22:43.707857 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/progress/progress_line_splitter.dart:
[IgnoreCode] 2025-09-27T13:22:43.707857 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:22:43.707857
[IgnoreCode] 2025-09-27T13:22:43.707857 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:22:43.707857 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:22:43.707857 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:22:43.707857 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:22:43.707857 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:22:43.707857 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:22:43.707857 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:22:43.707857 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:22:43.707857 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:22:43.707857 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:22:43.707857 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:22:43.707857 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:22:43.707857 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:22:43.707857 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:22:43.707857 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:22:43.707857 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:22:43.707857 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:22:43.707857
[IgnoreCode] 2025-09-27T13:22:43.708007 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/progress/progress_line_splitter.dart:
[IgnoreCode] 2025-09-27T13:22:43.708007 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:22:43.708007
[IgnoreCode] 2025-09-27T13:22:43.708007 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:22:43.708007 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:22:43.708007 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:22:43.708007 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:22:43.708007 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:22:43.708007 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:22:43.708007 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:22:43.708007 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:22:43.708007 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:22:43.708007 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:22:43.708007 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:22:43.708007 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:22:43.708007 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:22:43.708007 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:22:43.708007 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:22:43.708007 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:22:43.708007 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:22:43.708007
[ReorderMembersFix] 2025-09-27T13:25:33.664714 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:33.664714 ConflictingEditException: {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:33.664714 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:33.664714
[ReorderMembersFix] 2025-09-27T13:25:33.664928 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:33.664928 ConflictingEditException: {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"} conflicts with {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:33.664928 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:33.664928
[ReorderMembersFix] 2025-09-27T13:25:33.665014 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:33.665014 ConflictingEditException: {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"} conflicts with {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"}
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665014 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:33.665014
[ReorderMembersFix] 2025-09-27T13:25:33.665089 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:33.665089 ConflictingEditException: {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"} conflicts with {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"}
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665089 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:33.665089
[ReorderMembersFix] 2025-09-27T13:25:33.665177 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:33.665177 ConflictingEditException: {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"} conflicts with {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665177 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:33.665177
[ReorderMembersFix] 2025-09-27T13:25:33.665282 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:33.665282 ConflictingEditException: {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:33.665282 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:33.665282
[ReorderMembersFix] 2025-09-27T13:25:34.018668 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:34.018668 ConflictingEditException: {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:34.018668 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:34.018668
[ReorderMembersFix] 2025-09-27T13:25:34.018941 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:34.018941 ConflictingEditException: {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"} conflicts with {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:34.018941 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:34.018941
[ReorderMembersFix] 2025-09-27T13:25:34.019109 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:34.019109 ConflictingEditException: {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"} conflicts with {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"}
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019109 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:34.019109
[ReorderMembersFix] 2025-09-27T13:25:34.019249 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:34.019249 ConflictingEditException: {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"} conflicts with {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"}
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019249 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:34.019249
[ReorderMembersFix] 2025-09-27T13:25:34.019384 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:34.019384 ConflictingEditException: {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"} conflicts with {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019384 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:34.019384
[ReorderMembersFix] 2025-09-27T13:25:34.019536 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:34.019536 ConflictingEditException: {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:34.019536 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:34.019536
[ReorderMembersFix] 2025-09-27T13:25:38.789565 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:38.789565 ConflictingEditException: {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:38.789565 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:38.789565
[ReorderMembersFix] 2025-09-27T13:25:38.789777 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:38.789777 ConflictingEditException: {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"} conflicts with {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:38.789777 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:38.789777
[ReorderMembersFix] 2025-09-27T13:25:38.791061 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:38.791061 ConflictingEditException: {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"} conflicts with {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"}
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791061 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:38.791061
[ReorderMembersFix] 2025-09-27T13:25:38.791144 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:38.791144 ConflictingEditException: {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"} conflicts with {"offset":1879,"length":123,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubGetException(this.exitCode) : super('dart pub get failed');"}
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791144 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:38.791144
[ReorderMembersFix] 2025-09-27T13:25:38.791209 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:38.791209 ConflictingEditException: {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"} conflicts with {"offset":332,"length":765,"replacement":"  final DartProject _project;\n\n  ///\n  PubGet(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubGetResult run({bool compileExecutables = true}) {\n    final result = PubGetResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _printerr),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub get exeception: $e');\n      throw PubGetException(e.exitCode);\n    }\n  }\n\n  void _printerr(String? line) {\n    verbose(() => 'pub get: $line');\n    printerr(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791209 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:38.791209
[ReorderMembersFix] 2025-09-27T13:25:38.791278 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_get.dart:
[ReorderMembersFix] 2025-09-27T13:25:38.791278 ConflictingEditException: {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1188,"length":636,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubGetResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:38.791278 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:38.791278
[ReorderMembersFix] 2025-09-27T13:25:44.944127 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:44.944127 ConflictingEditException: {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944127 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:44.944127
[ReorderMembersFix] 2025-09-27T13:25:44.944312 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:44.944312 ConflictingEditException: {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"} conflicts with {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944312 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:44.944312
[ReorderMembersFix] 2025-09-27T13:25:44.944389 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:44.944389 ConflictingEditException: {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"} conflicts with {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"}
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944389 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:44.944389
[ReorderMembersFix] 2025-09-27T13:25:44.944460 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:44.944460 ConflictingEditException: {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"} conflicts with {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"}
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944460 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:44.944460
[ReorderMembersFix] 2025-09-27T13:25:44.944528 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:44.944528 ConflictingEditException: {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"} conflicts with {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944528 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:44.944528
[ReorderMembersFix] 2025-09-27T13:25:44.944605 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:44.944605 ConflictingEditException: {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:44.944605 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:44.944605
[ReorderMembersFix] 2025-09-27T13:25:45.397058 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:45.397058 ConflictingEditException: {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397058 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:45.397058
[ReorderMembersFix] 2025-09-27T13:25:45.397302 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:45.397302 ConflictingEditException: {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"} conflicts with {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397302 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:45.397302
[ReorderMembersFix] 2025-09-27T13:25:45.397429 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:45.397429 ConflictingEditException: {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"} conflicts with {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"}
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397429 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:45.397429
[ReorderMembersFix] 2025-09-27T13:25:45.397540 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:45.397540 ConflictingEditException: {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"} conflicts with {"offset":1914,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"}
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397540 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:45.397540
[ReorderMembersFix] 2025-09-27T13:25:45.397650 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:45.397650 ConflictingEditException: {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"} conflicts with {"offset":340,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397650 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:45.397650
[ReorderMembersFix] 2025-09-27T13:25:45.397788 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:45.397788 ConflictingEditException: {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1215,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:45.397788 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:45.397788
[ReorderMembersFix] 2025-09-27T13:25:49.237587 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:49.237587 ConflictingEditException: {"offset":1219,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1219,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:49.237587 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:49.237587
[ReorderMembersFix] 2025-09-27T13:25:49.243320 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:49.243320 ConflictingEditException: {"offset":344,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"} conflicts with {"offset":344,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243320 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:49.243320
[ReorderMembersFix] 2025-09-27T13:25:49.243555 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:49.243555 ConflictingEditException: {"offset":1918,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"} conflicts with {"offset":1918,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"}
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243555 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:49.243555
[ReorderMembersFix] 2025-09-27T13:25:49.243714 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:49.243714 ConflictingEditException: {"offset":1918,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"} conflicts with {"offset":1918,"length":131,"replacement":"  /// the pub get exit code.\n  final int? exitCode;\n\n  ///\n  PubUpgradeException(this.exitCode) : super('dart pub upgrade failed');"}
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243714 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:49.243714
[ReorderMembersFix] 2025-09-27T13:25:49.243891 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:49.243891 ConflictingEditException: {"offset":344,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"} conflicts with {"offset":344,"length":780,"replacement":"  final DartProject _project;\n\n  ///\n  PubUpgrade(this._project);\n\n  /// Runs the pub get command against\n  /// the project working dir.\n  PubUpgradeResult run({bool compileExecutables = true}) {\n    final result = PubUpgradeResult();\n    try {\n      // pub get MUST be run from the directory which contains\n      //  the pubspec.yaml file.\n      DartSdk().runPubGet(\n        _project.pathToProjectRoot,\n        compileExecutables: compileExecutables,\n        progress: Progress(result._processLine, stderr: _println),\n      );\n\n      return result;\n    } on RunException catch (e) {\n      verbose(() => 'pub upgrade exeception: $e');\n      throw PubUpgradeException(e.exitCode);\n    }\n  }\n\n  void _println(String? line) {\n    verbose(() => 'pub get: $line');\n    print(line);\n  }"}
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:49.243891 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:49.243891
[ReorderMembersFix] 2025-09-27T13:25:49.244066 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/script/pub_upgrade.dart:
[ReorderMembersFix] 2025-09-27T13:25:49.244066 ConflictingEditException: {"offset":1219,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"} conflicts with {"offset":1219,"length":640,"replacement":"  final _added = <DependencyLine>[];\n\n  final _removed = <DependencyLine>[];\n\n  ///\n  PubUpgradeResult();\n\n  void _processLine(String line) {\n    print(line);\n    if (line.startsWith('+ ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _added.add(dep);\n      }\n    }\n\n    if (line.startsWith('- ')) {\n      final dep = DependencyLine.fromLine(line);\n      if (dep != null) {\n        _removed.add(dep);\n      }\n    }\n  }\n\n  /// list of dependency that pub get added\n  List<DependencyLine> get added => _added;\n\n  /// list of dependency that pub get removed\n  List<DependencyLine> get removed => _removed;"}
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:25:49.244066 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:25:49.244066
[ReorderMembersFix] 2025-09-27T13:26:05.901724 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/settings.dart:
[ReorderMembersFix] 2025-09-27T13:26:05.901724 ConflictingEditException: {"offset":4895,"length":611,"replacement":"  static final _self = InternalSettings._internal();\n\n  final _directoryStack = core.StackList<Directory>();\n\n  ///\n  factory InternalSettings() => _self;\n\n  InternalSettings._internal();\n\n  bool get _isStackEmpty => _directoryStack.isEmpty;\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [push] command.\n  void push(Directory current) => _directoryStack.push(current);\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [pop] command.\n  Directory pop() => _directoryStack.pop();"} conflicts with {"offset":4895,"length":611,"replacement":"  static final _self = InternalSettings._internal();\n\n  final _directoryStack = core.StackList<Directory>();\n\n  ///\n  factory InternalSettings() => _self;\n\n  InternalSettings._internal();\n\n  bool get _isStackEmpty => _directoryStack.isEmpty;\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [push] command.\n  void push(Directory current) => _directoryStack.push(current);\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [pop] command.\n  Directory pop() => _directoryStack.pop();"}
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:26:05.901724 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:26:05.901724
[ReorderMembersFix] 2025-09-27T13:26:05.901997 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/settings.dart:
[ReorderMembersFix] 2025-09-27T13:26:05.901997 ConflictingEditException: {"offset":612,"length":4137,"replacement":"  static var scopeKey = const ScopeKey<Settings>();\n\n  static Settings? _self;\n\n  /// The directory name of the DCli templates.\n  static const templateDir = 'template';\n\n  final _settings = InternalSettings();\n\n  /// The name of the DCli app. This will\n  /// always be 'dcli'.\n  static const dcliAppName = 'dcli';\n\n  /// The DCli version you are running\n  String? version;\n\n  String? _dcliPath;\n\n  /// The name of the dcli settings directory.\n  /// This is .dcli.\n  var dcliDir = '.dcli';\n\n  String? _dcliBinPath;\n\n  String? _scriptPath;\n\n  /// Returns a singleton providing\n  /// access to DCli settings.\n  factory Settings() {\n    if (Scope.hasScopeKey(scopeKey)) {\n      return Scope.use(scopeKey);\n    } else {\n      return _self ??= Settings._internal();\n    }\n  }\n\n  /// To use this method create a [Scope] and inject this\n  /// as a value into the scope.\n  factory Settings.forScope() => Settings._internal();\n\n  Settings._internal() {\n    version = packageVersion;\n  }\n\n  /// True if you are running on a Mac.\n  bool get isMacOS => core.Settings().isMacOS;\n\n  /// True if you are running on a Linux system.\n  bool get isLinux => core.Settings().isLinux;\n\n  /// True if you are running on a Window system.\n  bool get isWindows => core.Settings().isWindows;\n\n  /// The absolute path to the dcli script which\n  /// is currently running.\n  @Deprecated('Use Script.current.pathToScript')\n  String get pathToScript {\n    _scriptPath ??= DartScript.current.pathToScript;\n    return _scriptPath!;\n  }\n\n  /// The directory where we store all of dcli's\n  /// configuration files.\n  /// This will normally be ~/.dcli\n  String get pathToDCli => _dcliPath ??= truepath(p.join(HOME, dcliDir));\n\n  /// When you run dcli compile -i `<script>` the compiled exe\n  /// is moved to this path.\n  ///\n  /// The dcliBinPath is added to the OS's path\n  /// allowing the installed scripts to be run from anywhere.\n  /// This will normally be ~/.dcli/bin\n  String get pathToDCliBin =>\n      _dcliBinPath ??= truepath(p.join(HOME, dcliDir, 'bin'));\n\n  /// path to the dcli template directory.\n  @Deprecated('Use pathToTemplateScript or pathToTemplateProject')\n  String get pathToTemplate => p.join(pathToDCli, templateDir);\n\n  /// path to the dcli template directory.\n  String get pathToTemplateProject =>\n      p.join(pathToDCli, templateDir, 'project');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateProjectCustom =>\n      p.join(pathToDCli, templateDir, 'project', 'custom');\n\n  /// path to the dcli template directory.\n  String get pathToTemplateScript => p.join(pathToDCli, templateDir, 'script');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateScriptCustom =>\n      p.join(pathToDCli, templateDir, 'script', 'custom');\n\n  /// returns true if the -v (verbose) flag was set on the\n  /// dcli command line.\n  /// e.g.\n  /// dcli -v clean\n  bool get isVerbose => core.Settings().isVerbose;\n\n  Logger get logger => Logger('dcli');\n\n  /// Turns on verbose logging.\n  void setVerbose({required bool enabled}) {\n    // ignore: discarded_futures\n    core.Settings().setVerbose(enabled: enabled);\n  }\n\n  /// Logs a message to the console if the verbose\n  /// settings are on.\n  void verbose(String? string) {\n    final frame = Trace.current().frames[1];\n    core.Settings().verbose(string, frame: frame);\n  }\n\n  /// we consider dcli installed if the ~/.dcli directory\n  /// exists.\n  bool get isInstalled => exists(installCompletedIndicator);\n\n  /// returns the path to the file that we use to indicated\n  /// that the install completed succesfully.\n  String get installCompletedIndicator => join(pathToDCli, 'install_completed');\n\n  /// Returns true if the directory stack\n  /// maintained by push and pop has\n  /// is currently empty.\n  /// ```dart\n  /// Settings().isStackEmpty\n  /// ```\n  @Deprecated('use join')\n  bool get isStackEmpty => _settings._isStackEmpty;\n\n  /// Used for unit testing dcli.\n  /// Please look away.\n  // ignore: avoid_setters_without_getters\n  static set mock(Settings mockSettings) {\n    _self = mockSettings;\n  }"} conflicts with {"offset":612,"length":4137,"replacement":"  static var scopeKey = const ScopeKey<Settings>();\n\n  static Settings? _self;\n\n  /// The directory name of the DCli templates.\n  static const templateDir = 'template';\n\n  final _settings = InternalSettings();\n\n  /// The name of the DCli app. This will\n  /// always be 'dcli'.\n  static const dcliAppName = 'dcli';\n\n  /// The DCli version you are running\n  String? version;\n\n  String? _dcliPath;\n\n  /// The name of the dcli settings directory.\n  /// This is .dcli.\n  var dcliDir = '.dcli';\n\n  String? _dcliBinPath;\n\n  String? _scriptPath;\n\n  /// Returns a singleton providing\n  /// access to DCli settings.\n  factory Settings() {\n    if (Scope.hasScopeKey(scopeKey)) {\n      return Scope.use(scopeKey);\n    } else {\n      return _self ??= Settings._internal();\n    }\n  }\n\n  /// To use this method create a [Scope] and inject this\n  /// as a value into the scope.\n  factory Settings.forScope() => Settings._internal();\n\n  Settings._internal() {\n    version = packageVersion;\n  }\n\n  /// True if you are running on a Mac.\n  bool get isMacOS => core.Settings().isMacOS;\n\n  /// True if you are running on a Linux system.\n  bool get isLinux => core.Settings().isLinux;\n\n  /// True if you are running on a Window system.\n  bool get isWindows => core.Settings().isWindows;\n\n  /// The absolute path to the dcli script which\n  /// is currently running.\n  @Deprecated('Use Script.current.pathToScript')\n  String get pathToScript {\n    _scriptPath ??= DartScript.current.pathToScript;\n    return _scriptPath!;\n  }\n\n  /// The directory where we store all of dcli's\n  /// configuration files.\n  /// This will normally be ~/.dcli\n  String get pathToDCli => _dcliPath ??= truepath(p.join(HOME, dcliDir));\n\n  /// When you run dcli compile -i `<script>` the compiled exe\n  /// is moved to this path.\n  ///\n  /// The dcliBinPath is added to the OS's path\n  /// allowing the installed scripts to be run from anywhere.\n  /// This will normally be ~/.dcli/bin\n  String get pathToDCliBin =>\n      _dcliBinPath ??= truepath(p.join(HOME, dcliDir, 'bin'));\n\n  /// path to the dcli template directory.\n  @Deprecated('Use pathToTemplateScript or pathToTemplateProject')\n  String get pathToTemplate => p.join(pathToDCli, templateDir);\n\n  /// path to the dcli template directory.\n  String get pathToTemplateProject =>\n      p.join(pathToDCli, templateDir, 'project');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateProjectCustom =>\n      p.join(pathToDCli, templateDir, 'project', 'custom');\n\n  /// path to the dcli template directory.\n  String get pathToTemplateScript => p.join(pathToDCli, templateDir, 'script');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateScriptCustom =>\n      p.join(pathToDCli, templateDir, 'script', 'custom');\n\n  /// returns true if the -v (verbose) flag was set on the\n  /// dcli command line.\n  /// e.g.\n  /// dcli -v clean\n  bool get isVerbose => core.Settings().isVerbose;\n\n  Logger get logger => Logger('dcli');\n\n  /// Turns on verbose logging.\n  void setVerbose({required bool enabled}) {\n    // ignore: discarded_futures\n    core.Settings().setVerbose(enabled: enabled);\n  }\n\n  /// Logs a message to the console if the verbose\n  /// settings are on.\n  void verbose(String? string) {\n    final frame = Trace.current().frames[1];\n    core.Settings().verbose(string, frame: frame);\n  }\n\n  /// we consider dcli installed if the ~/.dcli directory\n  /// exists.\n  bool get isInstalled => exists(installCompletedIndicator);\n\n  /// returns the path to the file that we use to indicated\n  /// that the install completed succesfully.\n  String get installCompletedIndicator => join(pathToDCli, 'install_completed');\n\n  /// Returns true if the directory stack\n  /// maintained by push and pop has\n  /// is currently empty.\n  /// ```dart\n  /// Settings().isStackEmpty\n  /// ```\n  @Deprecated('use join')\n  bool get isStackEmpty => _settings._isStackEmpty;\n\n  /// Used for unit testing dcli.\n  /// Please look away.\n  // ignore: avoid_setters_without_getters\n  static set mock(Settings mockSettings) {\n    _self = mockSettings;\n  }"}
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:26:05.901997 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:26:05.901997
[ReorderMembersFix] 2025-09-27T13:26:06.250677 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/settings.dart:
[ReorderMembersFix] 2025-09-27T13:26:06.250677 ConflictingEditException: {"offset":4895,"length":611,"replacement":"  static final _self = InternalSettings._internal();\n\n  final _directoryStack = core.StackList<Directory>();\n\n  ///\n  factory InternalSettings() => _self;\n\n  InternalSettings._internal();\n\n  bool get _isStackEmpty => _directoryStack.isEmpty;\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [push] command.\n  void push(Directory current) => _directoryStack.push(current);\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [pop] command.\n  Directory pop() => _directoryStack.pop();"} conflicts with {"offset":4895,"length":611,"replacement":"  static final _self = InternalSettings._internal();\n\n  final _directoryStack = core.StackList<Directory>();\n\n  ///\n  factory InternalSettings() => _self;\n\n  InternalSettings._internal();\n\n  bool get _isStackEmpty => _directoryStack.isEmpty;\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [push] command.\n  void push(Directory current) => _directoryStack.push(current);\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [pop] command.\n  Directory pop() => _directoryStack.pop();"}
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:26:06.250677 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:26:06.250677
[ReorderMembersFix] 2025-09-27T13:26:06.250993 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/settings.dart:
[ReorderMembersFix] 2025-09-27T13:26:06.250993 ConflictingEditException: {"offset":612,"length":4137,"replacement":"  static var scopeKey = const ScopeKey<Settings>();\n\n  static Settings? _self;\n\n  /// The directory name of the DCli templates.\n  static const templateDir = 'template';\n\n  final _settings = InternalSettings();\n\n  /// The name of the DCli app. This will\n  /// always be 'dcli'.\n  static const dcliAppName = 'dcli';\n\n  /// The DCli version you are running\n  String? version;\n\n  String? _dcliPath;\n\n  /// The name of the dcli settings directory.\n  /// This is .dcli.\n  var dcliDir = '.dcli';\n\n  String? _dcliBinPath;\n\n  String? _scriptPath;\n\n  /// Returns a singleton providing\n  /// access to DCli settings.\n  factory Settings() {\n    if (Scope.hasScopeKey(scopeKey)) {\n      return Scope.use(scopeKey);\n    } else {\n      return _self ??= Settings._internal();\n    }\n  }\n\n  /// To use this method create a [Scope] and inject this\n  /// as a value into the scope.\n  factory Settings.forScope() => Settings._internal();\n\n  Settings._internal() {\n    version = packageVersion;\n  }\n\n  /// True if you are running on a Mac.\n  bool get isMacOS => core.Settings().isMacOS;\n\n  /// True if you are running on a Linux system.\n  bool get isLinux => core.Settings().isLinux;\n\n  /// True if you are running on a Window system.\n  bool get isWindows => core.Settings().isWindows;\n\n  /// The absolute path to the dcli script which\n  /// is currently running.\n  @Deprecated('Use Script.current.pathToScript')\n  String get pathToScript {\n    _scriptPath ??= DartScript.current.pathToScript;\n    return _scriptPath!;\n  }\n\n  /// The directory where we store all of dcli's\n  /// configuration files.\n  /// This will normally be ~/.dcli\n  String get pathToDCli => _dcliPath ??= truepath(p.join(HOME, dcliDir));\n\n  /// When you run dcli compile -i `<script>` the compiled exe\n  /// is moved to this path.\n  ///\n  /// The dcliBinPath is added to the OS's path\n  /// allowing the installed scripts to be run from anywhere.\n  /// This will normally be ~/.dcli/bin\n  String get pathToDCliBin =>\n      _dcliBinPath ??= truepath(p.join(HOME, dcliDir, 'bin'));\n\n  /// path to the dcli template directory.\n  @Deprecated('Use pathToTemplateScript or pathToTemplateProject')\n  String get pathToTemplate => p.join(pathToDCli, templateDir);\n\n  /// path to the dcli template directory.\n  String get pathToTemplateProject =>\n      p.join(pathToDCli, templateDir, 'project');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateProjectCustom =>\n      p.join(pathToDCli, templateDir, 'project', 'custom');\n\n  /// path to the dcli template directory.\n  String get pathToTemplateScript => p.join(pathToDCli, templateDir, 'script');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateScriptCustom =>\n      p.join(pathToDCli, templateDir, 'script', 'custom');\n\n  /// returns true if the -v (verbose) flag was set on the\n  /// dcli command line.\n  /// e.g.\n  /// dcli -v clean\n  bool get isVerbose => core.Settings().isVerbose;\n\n  Logger get logger => Logger('dcli');\n\n  /// Turns on verbose logging.\n  void setVerbose({required bool enabled}) {\n    // ignore: discarded_futures\n    core.Settings().setVerbose(enabled: enabled);\n  }\n\n  /// Logs a message to the console if the verbose\n  /// settings are on.\n  void verbose(String? string) {\n    final frame = Trace.current().frames[1];\n    core.Settings().verbose(string, frame: frame);\n  }\n\n  /// we consider dcli installed if the ~/.dcli directory\n  /// exists.\n  bool get isInstalled => exists(installCompletedIndicator);\n\n  /// returns the path to the file that we use to indicated\n  /// that the install completed succesfully.\n  String get installCompletedIndicator => join(pathToDCli, 'install_completed');\n\n  /// Returns true if the directory stack\n  /// maintained by push and pop has\n  /// is currently empty.\n  /// ```dart\n  /// Settings().isStackEmpty\n  /// ```\n  @Deprecated('use join')\n  bool get isStackEmpty => _settings._isStackEmpty;\n\n  /// Used for unit testing dcli.\n  /// Please look away.\n  // ignore: avoid_setters_without_getters\n  static set mock(Settings mockSettings) {\n    _self = mockSettings;\n  }"} conflicts with {"offset":612,"length":4137,"replacement":"  static var scopeKey = const ScopeKey<Settings>();\n\n  static Settings? _self;\n\n  /// The directory name of the DCli templates.\n  static const templateDir = 'template';\n\n  final _settings = InternalSettings();\n\n  /// The name of the DCli app. This will\n  /// always be 'dcli'.\n  static const dcliAppName = 'dcli';\n\n  /// The DCli version you are running\n  String? version;\n\n  String? _dcliPath;\n\n  /// The name of the dcli settings directory.\n  /// This is .dcli.\n  var dcliDir = '.dcli';\n\n  String? _dcliBinPath;\n\n  String? _scriptPath;\n\n  /// Returns a singleton providing\n  /// access to DCli settings.\n  factory Settings() {\n    if (Scope.hasScopeKey(scopeKey)) {\n      return Scope.use(scopeKey);\n    } else {\n      return _self ??= Settings._internal();\n    }\n  }\n\n  /// To use this method create a [Scope] and inject this\n  /// as a value into the scope.\n  factory Settings.forScope() => Settings._internal();\n\n  Settings._internal() {\n    version = packageVersion;\n  }\n\n  /// True if you are running on a Mac.\n  bool get isMacOS => core.Settings().isMacOS;\n\n  /// True if you are running on a Linux system.\n  bool get isLinux => core.Settings().isLinux;\n\n  /// True if you are running on a Window system.\n  bool get isWindows => core.Settings().isWindows;\n\n  /// The absolute path to the dcli script which\n  /// is currently running.\n  @Deprecated('Use Script.current.pathToScript')\n  String get pathToScript {\n    _scriptPath ??= DartScript.current.pathToScript;\n    return _scriptPath!;\n  }\n\n  /// The directory where we store all of dcli's\n  /// configuration files.\n  /// This will normally be ~/.dcli\n  String get pathToDCli => _dcliPath ??= truepath(p.join(HOME, dcliDir));\n\n  /// When you run dcli compile -i `<script>` the compiled exe\n  /// is moved to this path.\n  ///\n  /// The dcliBinPath is added to the OS's path\n  /// allowing the installed scripts to be run from anywhere.\n  /// This will normally be ~/.dcli/bin\n  String get pathToDCliBin =>\n      _dcliBinPath ??= truepath(p.join(HOME, dcliDir, 'bin'));\n\n  /// path to the dcli template directory.\n  @Deprecated('Use pathToTemplateScript or pathToTemplateProject')\n  String get pathToTemplate => p.join(pathToDCli, templateDir);\n\n  /// path to the dcli template directory.\n  String get pathToTemplateProject =>\n      p.join(pathToDCli, templateDir, 'project');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateProjectCustom =>\n      p.join(pathToDCli, templateDir, 'project', 'custom');\n\n  /// path to the dcli template directory.\n  String get pathToTemplateScript => p.join(pathToDCli, templateDir, 'script');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateScriptCustom =>\n      p.join(pathToDCli, templateDir, 'script', 'custom');\n\n  /// returns true if the -v (verbose) flag was set on the\n  /// dcli command line.\n  /// e.g.\n  /// dcli -v clean\n  bool get isVerbose => core.Settings().isVerbose;\n\n  Logger get logger => Logger('dcli');\n\n  /// Turns on verbose logging.\n  void setVerbose({required bool enabled}) {\n    // ignore: discarded_futures\n    core.Settings().setVerbose(enabled: enabled);\n  }\n\n  /// Logs a message to the console if the verbose\n  /// settings are on.\n  void verbose(String? string) {\n    final frame = Trace.current().frames[1];\n    core.Settings().verbose(string, frame: frame);\n  }\n\n  /// we consider dcli installed if the ~/.dcli directory\n  /// exists.\n  bool get isInstalled => exists(installCompletedIndicator);\n\n  /// returns the path to the file that we use to indicated\n  /// that the install completed succesfully.\n  String get installCompletedIndicator => join(pathToDCli, 'install_completed');\n\n  /// Returns true if the directory stack\n  /// maintained by push and pop has\n  /// is currently empty.\n  /// ```dart\n  /// Settings().isStackEmpty\n  /// ```\n  @Deprecated('use join')\n  bool get isStackEmpty => _settings._isStackEmpty;\n\n  /// Used for unit testing dcli.\n  /// Please look away.\n  // ignore: avoid_setters_without_getters\n  static set mock(Settings mockSettings) {\n    _self = mockSettings;\n  }"}
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:26:06.250993 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:26:06.250993
[ReorderMembersFix] 2025-09-27T13:26:07.134950 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/settings.dart:
[ReorderMembersFix] 2025-09-27T13:26:07.134950 ConflictingEditException: {"offset":4895,"length":611,"replacement":"  static final _self = InternalSettings._internal();\n\n  final _directoryStack = core.StackList<Directory>();\n\n  ///\n  factory InternalSettings() => _self;\n\n  InternalSettings._internal();\n\n  bool get _isStackEmpty => _directoryStack.isEmpty;\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [push] command.\n  void push(Directory current) => _directoryStack.push(current);\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [pop] command.\n  Directory pop() => _directoryStack.pop();"} conflicts with {"offset":4895,"length":611,"replacement":"  static final _self = InternalSettings._internal();\n\n  final _directoryStack = core.StackList<Directory>();\n\n  ///\n  factory InternalSettings() => _self;\n\n  InternalSettings._internal();\n\n  bool get _isStackEmpty => _directoryStack.isEmpty;\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [push] command.\n  void push(Directory current) => _directoryStack.push(current);\n\n  /// Internal methods used to maintain the directory stack\n  /// DO NOT use this method directly instead use the [pop] command.\n  Directory pop() => _directoryStack.pop();"}
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:26:07.134950 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:26:07.134950
[ReorderMembersFix] 2025-09-27T13:26:07.137732 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/settings.dart:
[ReorderMembersFix] 2025-09-27T13:26:07.137732 ConflictingEditException: {"offset":612,"length":4137,"replacement":"  static var scopeKey = const ScopeKey<Settings>();\n\n  static Settings? _self;\n\n  /// The directory name of the DCli templates.\n  static const templateDir = 'template';\n\n  final _settings = InternalSettings();\n\n  /// The name of the DCli app. This will\n  /// always be 'dcli'.\n  static const dcliAppName = 'dcli';\n\n  /// The DCli version you are running\n  String? version;\n\n  String? _dcliPath;\n\n  /// The name of the dcli settings directory.\n  /// This is .dcli.\n  var dcliDir = '.dcli';\n\n  String? _dcliBinPath;\n\n  String? _scriptPath;\n\n  /// Returns a singleton providing\n  /// access to DCli settings.\n  factory Settings() {\n    if (Scope.hasScopeKey(scopeKey)) {\n      return Scope.use(scopeKey);\n    } else {\n      return _self ??= Settings._internal();\n    }\n  }\n\n  /// To use this method create a [Scope] and inject this\n  /// as a value into the scope.\n  factory Settings.forScope() => Settings._internal();\n\n  Settings._internal() {\n    version = packageVersion;\n  }\n\n  /// True if you are running on a Mac.\n  bool get isMacOS => core.Settings().isMacOS;\n\n  /// True if you are running on a Linux system.\n  bool get isLinux => core.Settings().isLinux;\n\n  /// True if you are running on a Window system.\n  bool get isWindows => core.Settings().isWindows;\n\n  /// The absolute path to the dcli script which\n  /// is currently running.\n  @Deprecated('Use Script.current.pathToScript')\n  String get pathToScript {\n    _scriptPath ??= DartScript.current.pathToScript;\n    return _scriptPath!;\n  }\n\n  /// The directory where we store all of dcli's\n  /// configuration files.\n  /// This will normally be ~/.dcli\n  String get pathToDCli => _dcliPath ??= truepath(p.join(HOME, dcliDir));\n\n  /// When you run dcli compile -i `<script>` the compiled exe\n  /// is moved to this path.\n  ///\n  /// The dcliBinPath is added to the OS's path\n  /// allowing the installed scripts to be run from anywhere.\n  /// This will normally be ~/.dcli/bin\n  String get pathToDCliBin =>\n      _dcliBinPath ??= truepath(p.join(HOME, dcliDir, 'bin'));\n\n  /// path to the dcli template directory.\n  @Deprecated('Use pathToTemplateScript or pathToTemplateProject')\n  String get pathToTemplate => p.join(pathToDCli, templateDir);\n\n  /// path to the dcli template directory.\n  String get pathToTemplateProject =>\n      p.join(pathToDCli, templateDir, 'project');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateProjectCustom =>\n      p.join(pathToDCli, templateDir, 'project', 'custom');\n\n  /// path to the dcli template directory.\n  String get pathToTemplateScript => p.join(pathToDCli, templateDir, 'script');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateScriptCustom =>\n      p.join(pathToDCli, templateDir, 'script', 'custom');\n\n  /// returns true if the -v (verbose) flag was set on the\n  /// dcli command line.\n  /// e.g.\n  /// dcli -v clean\n  bool get isVerbose => core.Settings().isVerbose;\n\n  Logger get logger => Logger('dcli');\n\n  /// Turns on verbose logging.\n  void setVerbose({required bool enabled}) {\n    // ignore: discarded_futures\n    core.Settings().setVerbose(enabled: enabled);\n  }\n\n  /// Logs a message to the console if the verbose\n  /// settings are on.\n  void verbose(String? string) {\n    final frame = Trace.current().frames[1];\n    core.Settings().verbose(string, frame: frame);\n  }\n\n  /// we consider dcli installed if the ~/.dcli directory\n  /// exists.\n  bool get isInstalled => exists(installCompletedIndicator);\n\n  /// returns the path to the file that we use to indicated\n  /// that the install completed succesfully.\n  String get installCompletedIndicator => join(pathToDCli, 'install_completed');\n\n  /// Returns true if the directory stack\n  /// maintained by push and pop has\n  /// is currently empty.\n  /// ```dart\n  /// Settings().isStackEmpty\n  /// ```\n  @Deprecated('use join')\n  bool get isStackEmpty => _settings._isStackEmpty;\n\n  /// Used for unit testing dcli.\n  /// Please look away.\n  // ignore: avoid_setters_without_getters\n  static set mock(Settings mockSettings) {\n    _self = mockSettings;\n  }"} conflicts with {"offset":612,"length":4137,"replacement":"  static var scopeKey = const ScopeKey<Settings>();\n\n  static Settings? _self;\n\n  /// The directory name of the DCli templates.\n  static const templateDir = 'template';\n\n  final _settings = InternalSettings();\n\n  /// The name of the DCli app. This will\n  /// always be 'dcli'.\n  static const dcliAppName = 'dcli';\n\n  /// The DCli version you are running\n  String? version;\n\n  String? _dcliPath;\n\n  /// The name of the dcli settings directory.\n  /// This is .dcli.\n  var dcliDir = '.dcli';\n\n  String? _dcliBinPath;\n\n  String? _scriptPath;\n\n  /// Returns a singleton providing\n  /// access to DCli settings.\n  factory Settings() {\n    if (Scope.hasScopeKey(scopeKey)) {\n      return Scope.use(scopeKey);\n    } else {\n      return _self ??= Settings._internal();\n    }\n  }\n\n  /// To use this method create a [Scope] and inject this\n  /// as a value into the scope.\n  factory Settings.forScope() => Settings._internal();\n\n  Settings._internal() {\n    version = packageVersion;\n  }\n\n  /// True if you are running on a Mac.\n  bool get isMacOS => core.Settings().isMacOS;\n\n  /// True if you are running on a Linux system.\n  bool get isLinux => core.Settings().isLinux;\n\n  /// True if you are running on a Window system.\n  bool get isWindows => core.Settings().isWindows;\n\n  /// The absolute path to the dcli script which\n  /// is currently running.\n  @Deprecated('Use Script.current.pathToScript')\n  String get pathToScript {\n    _scriptPath ??= DartScript.current.pathToScript;\n    return _scriptPath!;\n  }\n\n  /// The directory where we store all of dcli's\n  /// configuration files.\n  /// This will normally be ~/.dcli\n  String get pathToDCli => _dcliPath ??= truepath(p.join(HOME, dcliDir));\n\n  /// When you run dcli compile -i `<script>` the compiled exe\n  /// is moved to this path.\n  ///\n  /// The dcliBinPath is added to the OS's path\n  /// allowing the installed scripts to be run from anywhere.\n  /// This will normally be ~/.dcli/bin\n  String get pathToDCliBin =>\n      _dcliBinPath ??= truepath(p.join(HOME, dcliDir, 'bin'));\n\n  /// path to the dcli template directory.\n  @Deprecated('Use pathToTemplateScript or pathToTemplateProject')\n  String get pathToTemplate => p.join(pathToDCli, templateDir);\n\n  /// path to the dcli template directory.\n  String get pathToTemplateProject =>\n      p.join(pathToDCli, templateDir, 'project');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateProjectCustom =>\n      p.join(pathToDCli, templateDir, 'project', 'custom');\n\n  /// path to the dcli template directory.\n  String get pathToTemplateScript => p.join(pathToDCli, templateDir, 'script');\n\n  /// Path to the directory where users can store their own custom templates\n  String get pathToTemplateScriptCustom =>\n      p.join(pathToDCli, templateDir, 'script', 'custom');\n\n  /// returns true if the -v (verbose) flag was set on the\n  /// dcli command line.\n  /// e.g.\n  /// dcli -v clean\n  bool get isVerbose => core.Settings().isVerbose;\n\n  Logger get logger => Logger('dcli');\n\n  /// Turns on verbose logging.\n  void setVerbose({required bool enabled}) {\n    // ignore: discarded_futures\n    core.Settings().setVerbose(enabled: enabled);\n  }\n\n  /// Logs a message to the console if the verbose\n  /// settings are on.\n  void verbose(String? string) {\n    final frame = Trace.current().frames[1];\n    core.Settings().verbose(string, frame: frame);\n  }\n\n  /// we consider dcli installed if the ~/.dcli directory\n  /// exists.\n  bool get isInstalled => exists(installCompletedIndicator);\n\n  /// returns the path to the file that we use to indicated\n  /// that the install completed succesfully.\n  String get installCompletedIndicator => join(pathToDCli, 'install_completed');\n\n  /// Returns true if the directory stack\n  /// maintained by push and pop has\n  /// is currently empty.\n  /// ```dart\n  /// Settings().isStackEmpty\n  /// ```\n  @Deprecated('use join')\n  bool get isStackEmpty => _settings._isStackEmpty;\n\n  /// Used for unit testing dcli.\n  /// Please look away.\n  // ignore: avoid_setters_without_getters\n  static set mock(Settings mockSettings) {\n    _self = mockSettings;\n  }"}
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:26:07.137732 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:26:07.137732
[ReorderMembersFix] 2025-09-27T13:30:21.918342 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/shell/posix_shell.dart:
[ReorderMembersFix] 2025-09-27T13:30:21.918342 ConflictingEditException: {"offset":10195,"length":424,"replacement":"  T? _wrapped;\n\n  Immutable();\n\n  T? get wrapped => _wrapped;\n\n  // stores [wrapped] if [setIf] hasn't already been called\n  void setIf(T Function() wrapped) {\n    _wrapped ??= wrapped();\n  }\n\n  /// Runs [action] if [setIf] has been called\n  void runIf(void Function(T wrapped) action) {\n    final stack = Trace.current();\n    verbose(() => 'runIf $stack');\n    if (_wrapped != null) {\n      action(_wrapped as T);\n    }\n  }"} conflicts with {"offset":10195,"length":424,"replacement":"  T? _wrapped;\n\n  Immutable();\n\n  T? get wrapped => _wrapped;\n\n  // stores [wrapped] if [setIf] hasn't already been called\n  void setIf(T Function() wrapped) {\n    _wrapped ??= wrapped();\n  }\n\n  /// Runs [action] if [setIf] has been called\n  void runIf(void Function(T wrapped) action) {\n    final stack = Trace.current();\n    verbose(() => 'runIf $stack');\n    if (_wrapped != null) {\n      action(_wrapped as T);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:30:21.918342 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:30:21.918342
[ReorderMembersFix] 2025-09-27T13:30:21.920990 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/shell/posix_shell.dart:
[ReorderMembersFix] 2025-09-27T13:30:21.920990 ConflictingEditException: {"offset":7078,"length":2624,"replacement":"  late final String username;\n\n  /// we cache the real uid and gid\n  /// when we release privileges so we can restore them.\n  late final int gid;\n\n  late final int uid;\n\n  /// The path to the original privileged users home dir.\n  late final String pathToHome;\n\n  // path to the active shell e.g. /bin/bash\n  late final String? pathToShell;\n\n  // Save the details of the current user environment\n  UserEnvironment.save() {\n    username = _whoami();\n    gid = getgid();\n    uid = getuid();\n    pathToHome = HOME;\n    pathToShell = env['SHELL'];\n  }\n\n  /// Creates a [UserEnvironment] from the SUDO env args\n  /// that describe the pre-sudo user.\n  UserEnvironment.preSudo({required this.pathToHome}) {\n    // get the details of the user, pre-sudo starting.\n    final sUID = env['SUDO_UID'];\n    final gUID = env['SUDO_GID'];\n\n    // convert id's to integers.\n    gid = gUID != null ? int.tryParse(gUID) ?? 0 : 0;\n    uid = sUID != null ? int.tryParse(sUID) ?? 0 : 0;\n\n    // CONSIDER: throw an exception if we can't determine the opre-sudo\n    // user?\n    username = env['SUDO_USER'] ?? env['USER'] ?? '';\n\n    pathToShell = env['SHELL'];\n  }\n\n  /// Build the user environment\n  void build() {\n    // // [initgroups] can only be called when we are root\n    // // so depending on which direction we are moving the\n    // // users privilieges we need to call this before\n    // // or after changing the uid.\n    // if (uid == 0) {\n    //   initgroups(username);\n    // }\n\n    // shells like bash/zsh reset the euid to the uid\n    // to descalate priviliges.\n    // This results in the euid being reset to sudo (0)\n    // so to stop this we need to ensure a real uid/gid\n    // are actually the original user not sudo.\n    // This fits nicely with our principle that when a user\n    // calls [releasePrivileges] the script should fully\n    // appear to not have been run as sudo.\n    verbose(() => '''\nBuilding user enviroment\nusername: $username\nHOME: $pathToHome\nUSER: $username\nLOGNAME: $username\nSHELL: ${env['SHELL']}\ngid:  $gid\nuid:  $uid''');\n\n    // reorder(() => uid == 0, () => setuid(uid), () => setgid(gid));\n\n    reorder(() => uid == 0, () => seteuid(uid), () => setegid(gid));\n\n    env['HOME'] = pathToHome;\n    env['USER'] = username;\n    env['LOGNAME'] = username;\n    env['SHELL'] = pathToShell;\n  }\n\n  /// If [condition] is true then we call [one] then [two].\n  /// If [condition] is false then we call [two] then [one].\n  void reorder(\n      bool Function() condition, void Function() one, void Function() two) {\n    if (condition()) {\n      one();\n      two();\n    } else {\n      two();\n      one();\n    }\n  }"} conflicts with {"offset":7078,"length":2624,"replacement":"  late final String username;\n\n  /// we cache the real uid and gid\n  /// when we release privileges so we can restore them.\n  late final int gid;\n\n  late final int uid;\n\n  /// The path to the original privileged users home dir.\n  late final String pathToHome;\n\n  // path to the active shell e.g. /bin/bash\n  late final String? pathToShell;\n\n  // Save the details of the current user environment\n  UserEnvironment.save() {\n    username = _whoami();\n    gid = getgid();\n    uid = getuid();\n    pathToHome = HOME;\n    pathToShell = env['SHELL'];\n  }\n\n  /// Creates a [UserEnvironment] from the SUDO env args\n  /// that describe the pre-sudo user.\n  UserEnvironment.preSudo({required this.pathToHome}) {\n    // get the details of the user, pre-sudo starting.\n    final sUID = env['SUDO_UID'];\n    final gUID = env['SUDO_GID'];\n\n    // convert id's to integers.\n    gid = gUID != null ? int.tryParse(gUID) ?? 0 : 0;\n    uid = sUID != null ? int.tryParse(sUID) ?? 0 : 0;\n\n    // CONSIDER: throw an exception if we can't determine the opre-sudo\n    // user?\n    username = env['SUDO_USER'] ?? env['USER'] ?? '';\n\n    pathToShell = env['SHELL'];\n  }\n\n  /// Build the user environment\n  void build() {\n    // // [initgroups] can only be called when we are root\n    // // so depending on which direction we are moving the\n    // // users privilieges we need to call this before\n    // // or after changing the uid.\n    // if (uid == 0) {\n    //   initgroups(username);\n    // }\n\n    // shells like bash/zsh reset the euid to the uid\n    // to descalate priviliges.\n    // This results in the euid being reset to sudo (0)\n    // so to stop this we need to ensure a real uid/gid\n    // are actually the original user not sudo.\n    // This fits nicely with our principle that when a user\n    // calls [releasePrivileges] the script should fully\n    // appear to not have been run as sudo.\n    verbose(() => '''\nBuilding user enviroment\nusername: $username\nHOME: $pathToHome\nUSER: $username\nLOGNAME: $username\nSHELL: ${env['SHELL']}\ngid:  $gid\nuid:  $uid''');\n\n    // reorder(() => uid == 0, () => setuid(uid), () => setgid(gid));\n\n    reorder(() => uid == 0, () => seteuid(uid), () => setegid(gid));\n\n    env['HOME'] = pathToHome;\n    env['USER'] = username;\n    env['LOGNAME'] = username;\n    env['SHELL'] = pathToShell;\n  }\n\n  /// If [condition] is true then we call [one] then [two].\n  /// If [condition] is false then we call [two] then [one].\n  void reorder(\n      bool Function() condition, void Function() one, void Function() two) {\n    if (condition()) {\n      one();\n      two();\n    } else {\n      two();\n      one();\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:30:21.920990 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:30:21.920990
[ReorderMembersFix] 2025-09-27T13:30:22.291182 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/shell/posix_shell.dart:
[ReorderMembersFix] 2025-09-27T13:30:22.291182 ConflictingEditException: {"offset":10195,"length":424,"replacement":"  T? _wrapped;\n\n  Immutable();\n\n  T? get wrapped => _wrapped;\n\n  // stores [wrapped] if [setIf] hasn't already been called\n  void setIf(T Function() wrapped) {\n    _wrapped ??= wrapped();\n  }\n\n  /// Runs [action] if [setIf] has been called\n  void runIf(void Function(T wrapped) action) {\n    final stack = Trace.current();\n    verbose(() => 'runIf $stack');\n    if (_wrapped != null) {\n      action(_wrapped as T);\n    }\n  }"} conflicts with {"offset":10195,"length":424,"replacement":"  T? _wrapped;\n\n  Immutable();\n\n  T? get wrapped => _wrapped;\n\n  // stores [wrapped] if [setIf] hasn't already been called\n  void setIf(T Function() wrapped) {\n    _wrapped ??= wrapped();\n  }\n\n  /// Runs [action] if [setIf] has been called\n  void runIf(void Function(T wrapped) action) {\n    final stack = Trace.current();\n    verbose(() => 'runIf $stack');\n    if (_wrapped != null) {\n      action(_wrapped as T);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:30:22.291182 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:30:22.291182
[ReorderMembersFix] 2025-09-27T13:30:22.291431 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/shell/posix_shell.dart:
[ReorderMembersFix] 2025-09-27T13:30:22.291431 ConflictingEditException: {"offset":7078,"length":2624,"replacement":"  late final String username;\n\n  /// we cache the real uid and gid\n  /// when we release privileges so we can restore them.\n  late final int gid;\n\n  late final int uid;\n\n  /// The path to the original privileged users home dir.\n  late final String pathToHome;\n\n  // path to the active shell e.g. /bin/bash\n  late final String? pathToShell;\n\n  // Save the details of the current user environment\n  UserEnvironment.save() {\n    username = _whoami();\n    gid = getgid();\n    uid = getuid();\n    pathToHome = HOME;\n    pathToShell = env['SHELL'];\n  }\n\n  /// Creates a [UserEnvironment] from the SUDO env args\n  /// that describe the pre-sudo user.\n  UserEnvironment.preSudo({required this.pathToHome}) {\n    // get the details of the user, pre-sudo starting.\n    final sUID = env['SUDO_UID'];\n    final gUID = env['SUDO_GID'];\n\n    // convert id's to integers.\n    gid = gUID != null ? int.tryParse(gUID) ?? 0 : 0;\n    uid = sUID != null ? int.tryParse(sUID) ?? 0 : 0;\n\n    // CONSIDER: throw an exception if we can't determine the opre-sudo\n    // user?\n    username = env['SUDO_USER'] ?? env['USER'] ?? '';\n\n    pathToShell = env['SHELL'];\n  }\n\n  /// Build the user environment\n  void build() {\n    // // [initgroups] can only be called when we are root\n    // // so depending on which direction we are moving the\n    // // users privilieges we need to call this before\n    // // or after changing the uid.\n    // if (uid == 0) {\n    //   initgroups(username);\n    // }\n\n    // shells like bash/zsh reset the euid to the uid\n    // to descalate priviliges.\n    // This results in the euid being reset to sudo (0)\n    // so to stop this we need to ensure a real uid/gid\n    // are actually the original user not sudo.\n    // This fits nicely with our principle that when a user\n    // calls [releasePrivileges] the script should fully\n    // appear to not have been run as sudo.\n    verbose(() => '''\nBuilding user enviroment\nusername: $username\nHOME: $pathToHome\nUSER: $username\nLOGNAME: $username\nSHELL: ${env['SHELL']}\ngid:  $gid\nuid:  $uid''');\n\n    // reorder(() => uid == 0, () => setuid(uid), () => setgid(gid));\n\n    reorder(() => uid == 0, () => seteuid(uid), () => setegid(gid));\n\n    env['HOME'] = pathToHome;\n    env['USER'] = username;\n    env['LOGNAME'] = username;\n    env['SHELL'] = pathToShell;\n  }\n\n  /// If [condition] is true then we call [one] then [two].\n  /// If [condition] is false then we call [two] then [one].\n  void reorder(\n      bool Function() condition, void Function() one, void Function() two) {\n    if (condition()) {\n      one();\n      two();\n    } else {\n      two();\n      one();\n    }\n  }"} conflicts with {"offset":7078,"length":2624,"replacement":"  late final String username;\n\n  /// we cache the real uid and gid\n  /// when we release privileges so we can restore them.\n  late final int gid;\n\n  late final int uid;\n\n  /// The path to the original privileged users home dir.\n  late final String pathToHome;\n\n  // path to the active shell e.g. /bin/bash\n  late final String? pathToShell;\n\n  // Save the details of the current user environment\n  UserEnvironment.save() {\n    username = _whoami();\n    gid = getgid();\n    uid = getuid();\n    pathToHome = HOME;\n    pathToShell = env['SHELL'];\n  }\n\n  /// Creates a [UserEnvironment] from the SUDO env args\n  /// that describe the pre-sudo user.\n  UserEnvironment.preSudo({required this.pathToHome}) {\n    // get the details of the user, pre-sudo starting.\n    final sUID = env['SUDO_UID'];\n    final gUID = env['SUDO_GID'];\n\n    // convert id's to integers.\n    gid = gUID != null ? int.tryParse(gUID) ?? 0 : 0;\n    uid = sUID != null ? int.tryParse(sUID) ?? 0 : 0;\n\n    // CONSIDER: throw an exception if we can't determine the opre-sudo\n    // user?\n    username = env['SUDO_USER'] ?? env['USER'] ?? '';\n\n    pathToShell = env['SHELL'];\n  }\n\n  /// Build the user environment\n  void build() {\n    // // [initgroups] can only be called when we are root\n    // // so depending on which direction we are moving the\n    // // users privilieges we need to call this before\n    // // or after changing the uid.\n    // if (uid == 0) {\n    //   initgroups(username);\n    // }\n\n    // shells like bash/zsh reset the euid to the uid\n    // to descalate priviliges.\n    // This results in the euid being reset to sudo (0)\n    // so to stop this we need to ensure a real uid/gid\n    // are actually the original user not sudo.\n    // This fits nicely with our principle that when a user\n    // calls [releasePrivileges] the script should fully\n    // appear to not have been run as sudo.\n    verbose(() => '''\nBuilding user enviroment\nusername: $username\nHOME: $pathToHome\nUSER: $username\nLOGNAME: $username\nSHELL: ${env['SHELL']}\ngid:  $gid\nuid:  $uid''');\n\n    // reorder(() => uid == 0, () => setuid(uid), () => setgid(gid));\n\n    reorder(() => uid == 0, () => seteuid(uid), () => setegid(gid));\n\n    env['HOME'] = pathToHome;\n    env['USER'] = username;\n    env['LOGNAME'] = username;\n    env['SHELL'] = pathToShell;\n  }\n\n  /// If [condition] is true then we call [one] then [two].\n  /// If [condition] is false then we call [two] then [one].\n  void reorder(\n      bool Function() condition, void Function() one, void Function() two) {\n    if (condition()) {\n      one();\n      two();\n    } else {\n      two();\n      one();\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:30:22.291431 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:30:22.291431
[ReorderMembersFix] 2025-09-27T13:30:26.158562 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/shell/posix_shell.dart:
[ReorderMembersFix] 2025-09-27T13:30:26.158562 ConflictingEditException: {"offset":10195,"length":424,"replacement":"  T? _wrapped;\n\n  Immutable();\n\n  T? get wrapped => _wrapped;\n\n  // stores [wrapped] if [setIf] hasn't already been called\n  void setIf(T Function() wrapped) {\n    _wrapped ??= wrapped();\n  }\n\n  /// Runs [action] if [setIf] has been called\n  void runIf(void Function(T wrapped) action) {\n    final stack = Trace.current();\n    verbose(() => 'runIf $stack');\n    if (_wrapped != null) {\n      action(_wrapped as T);\n    }\n  }"} conflicts with {"offset":10195,"length":424,"replacement":"  T? _wrapped;\n\n  Immutable();\n\n  T? get wrapped => _wrapped;\n\n  // stores [wrapped] if [setIf] hasn't already been called\n  void setIf(T Function() wrapped) {\n    _wrapped ??= wrapped();\n  }\n\n  /// Runs [action] if [setIf] has been called\n  void runIf(void Function(T wrapped) action) {\n    final stack = Trace.current();\n    verbose(() => 'runIf $stack');\n    if (_wrapped != null) {\n      action(_wrapped as T);\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:30:26.158562 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:30:26.158562
[ReorderMembersFix] 2025-09-27T13:30:26.160261 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/shell/posix_shell.dart:
[ReorderMembersFix] 2025-09-27T13:30:26.160261 ConflictingEditException: {"offset":7078,"length":2624,"replacement":"  late final String username;\n\n  /// we cache the real uid and gid\n  /// when we release privileges so we can restore them.\n  late final int gid;\n\n  late final int uid;\n\n  /// The path to the original privileged users home dir.\n  late final String pathToHome;\n\n  // path to the active shell e.g. /bin/bash\n  late final String? pathToShell;\n\n  // Save the details of the current user environment\n  UserEnvironment.save() {\n    username = _whoami();\n    gid = getgid();\n    uid = getuid();\n    pathToHome = HOME;\n    pathToShell = env['SHELL'];\n  }\n\n  /// Creates a [UserEnvironment] from the SUDO env args\n  /// that describe the pre-sudo user.\n  UserEnvironment.preSudo({required this.pathToHome}) {\n    // get the details of the user, pre-sudo starting.\n    final sUID = env['SUDO_UID'];\n    final gUID = env['SUDO_GID'];\n\n    // convert id's to integers.\n    gid = gUID != null ? int.tryParse(gUID) ?? 0 : 0;\n    uid = sUID != null ? int.tryParse(sUID) ?? 0 : 0;\n\n    // CONSIDER: throw an exception if we can't determine the opre-sudo\n    // user?\n    username = env['SUDO_USER'] ?? env['USER'] ?? '';\n\n    pathToShell = env['SHELL'];\n  }\n\n  /// Build the user environment\n  void build() {\n    // // [initgroups] can only be called when we are root\n    // // so depending on which direction we are moving the\n    // // users privilieges we need to call this before\n    // // or after changing the uid.\n    // if (uid == 0) {\n    //   initgroups(username);\n    // }\n\n    // shells like bash/zsh reset the euid to the uid\n    // to descalate priviliges.\n    // This results in the euid being reset to sudo (0)\n    // so to stop this we need to ensure a real uid/gid\n    // are actually the original user not sudo.\n    // This fits nicely with our principle that when a user\n    // calls [releasePrivileges] the script should fully\n    // appear to not have been run as sudo.\n    verbose(() => '''\nBuilding user enviroment\nusername: $username\nHOME: $pathToHome\nUSER: $username\nLOGNAME: $username\nSHELL: ${env['SHELL']}\ngid:  $gid\nuid:  $uid''');\n\n    // reorder(() => uid == 0, () => setuid(uid), () => setgid(gid));\n\n    reorder(() => uid == 0, () => seteuid(uid), () => setegid(gid));\n\n    env['HOME'] = pathToHome;\n    env['USER'] = username;\n    env['LOGNAME'] = username;\n    env['SHELL'] = pathToShell;\n  }\n\n  /// If [condition] is true then we call [one] then [two].\n  /// If [condition] is false then we call [two] then [one].\n  void reorder(\n      bool Function() condition, void Function() one, void Function() two) {\n    if (condition()) {\n      one();\n      two();\n    } else {\n      two();\n      one();\n    }\n  }"} conflicts with {"offset":7078,"length":2624,"replacement":"  late final String username;\n\n  /// we cache the real uid and gid\n  /// when we release privileges so we can restore them.\n  late final int gid;\n\n  late final int uid;\n\n  /// The path to the original privileged users home dir.\n  late final String pathToHome;\n\n  // path to the active shell e.g. /bin/bash\n  late final String? pathToShell;\n\n  // Save the details of the current user environment\n  UserEnvironment.save() {\n    username = _whoami();\n    gid = getgid();\n    uid = getuid();\n    pathToHome = HOME;\n    pathToShell = env['SHELL'];\n  }\n\n  /// Creates a [UserEnvironment] from the SUDO env args\n  /// that describe the pre-sudo user.\n  UserEnvironment.preSudo({required this.pathToHome}) {\n    // get the details of the user, pre-sudo starting.\n    final sUID = env['SUDO_UID'];\n    final gUID = env['SUDO_GID'];\n\n    // convert id's to integers.\n    gid = gUID != null ? int.tryParse(gUID) ?? 0 : 0;\n    uid = sUID != null ? int.tryParse(sUID) ?? 0 : 0;\n\n    // CONSIDER: throw an exception if we can't determine the opre-sudo\n    // user?\n    username = env['SUDO_USER'] ?? env['USER'] ?? '';\n\n    pathToShell = env['SHELL'];\n  }\n\n  /// Build the user environment\n  void build() {\n    // // [initgroups] can only be called when we are root\n    // // so depending on which direction we are moving the\n    // // users privilieges we need to call this before\n    // // or after changing the uid.\n    // if (uid == 0) {\n    //   initgroups(username);\n    // }\n\n    // shells like bash/zsh reset the euid to the uid\n    // to descalate priviliges.\n    // This results in the euid being reset to sudo (0)\n    // so to stop this we need to ensure a real uid/gid\n    // are actually the original user not sudo.\n    // This fits nicely with our principle that when a user\n    // calls [releasePrivileges] the script should fully\n    // appear to not have been run as sudo.\n    verbose(() => '''\nBuilding user enviroment\nusername: $username\nHOME: $pathToHome\nUSER: $username\nLOGNAME: $username\nSHELL: ${env['SHELL']}\ngid:  $gid\nuid:  $uid''');\n\n    // reorder(() => uid == 0, () => setuid(uid), () => setgid(gid));\n\n    reorder(() => uid == 0, () => seteuid(uid), () => setegid(gid));\n\n    env['HOME'] = pathToHome;\n    env['USER'] = username;\n    env['LOGNAME'] = username;\n    env['SHELL'] = pathToShell;\n  }\n\n  /// If [condition] is true then we call [one] then [two].\n  /// If [condition] is false then we call [two] then [one].\n  void reorder(\n      bool Function() condition, void Function() one, void Function() two) {\n    if (condition()) {\n      one();\n      two();\n    } else {\n      two();\n      one();\n    }\n  }"}
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:30:26.160261 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:30:26.160261
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:Invalid overlay change: no content to change
null
at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[ReorderMembersFix] 2025-09-27T13:32:22.377312 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/enum_helper.dart:
[ReorderMembersFix] 2025-09-27T13:32:22.377312 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[ReorderMembersFix] 2025-09-27T13:32:22.377312
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #6      _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #10     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:22.377312 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:22.377312
[IgnoreCode] 2025-09-27T13:32:22.377535 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/enum_helper.dart:
[IgnoreCode] 2025-09-27T13:32:22.377535 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:32:22.377535
[IgnoreCode] 2025-09-27T13:32:22.377535 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:32:22.377535 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:32:22.377535 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:32:22.377535 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:32:22.377535 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:32:22.377535 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:32:22.377535 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:32:22.377535 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:32:22.377535 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:32:22.377535 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:32:22.377535 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:32:22.377535 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:32:22.377535 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:32:22.377535 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:32:22.377535 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:32:22.377535 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:32:22.377535 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:32:22.377535
[IgnoreCode] 2025-09-27T13:32:22.377627 Plugin IgnoreCode threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/enum_helper.dart:
[IgnoreCode] 2025-09-27T13:32:22.377627 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[IgnoreCode] 2025-09-27T13:32:22.377627
[IgnoreCode] 2025-09-27T13:32:22.377627 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[IgnoreCode] 2025-09-27T13:32:22.377627 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[IgnoreCode] 2025-09-27T13:32:22.377627 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[IgnoreCode] 2025-09-27T13:32:22.377627 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[IgnoreCode] 2025-09-27T13:32:22.377627 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[IgnoreCode] 2025-09-27T13:32:22.377627 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[IgnoreCode] 2025-09-27T13:32:22.377627 #6      _rootRun (dart:async/zone.dart:1517:47)
[IgnoreCode] 2025-09-27T13:32:22.377627 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:32:22.377627 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[IgnoreCode] 2025-09-27T13:32:22.377627 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[IgnoreCode] 2025-09-27T13:32:22.377627 #10     _rootRun (dart:async/zone.dart:1525:13)
[IgnoreCode] 2025-09-27T13:32:22.377627 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[IgnoreCode] 2025-09-27T13:32:22.377627 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[IgnoreCode] 2025-09-27T13:32:22.377627 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[IgnoreCode] 2025-09-27T13:32:22.377627 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[IgnoreCode] 2025-09-27T13:32:22.377627 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[IgnoreCode] 2025-09-27T13:32:22.377627 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[IgnoreCode] 2025-09-27T13:32:22.377627
[ReorderMembersFix] 2025-09-27T13:32:28.391176 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.391176 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.391176 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.391176
[ReorderMembersFix] 2025-09-27T13:32:28.392255 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.392255 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.392255 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.392255
[ReorderMembersFix] 2025-09-27T13:32:28.392486 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.392486 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.392486 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.392486
[ReorderMembersFix] 2025-09-27T13:32:28.392829 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.392829 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.392829 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.392829
[ReorderMembersFix] 2025-09-27T13:32:28.393094 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.393094 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.393094 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.393094
[ReorderMembersFix] 2025-09-27T13:32:28.394598 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.394598 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.394598 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.394598
[ReorderMembersFix] 2025-09-27T13:32:28.394943 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.394943 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.394943 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.394943
[ReorderMembersFix] 2025-09-27T13:32:28.396175 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.396175 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.396175 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.396175
[ReorderMembersFix] 2025-09-27T13:32:28.396405 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.396405 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.396405 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.396405
[ReorderMembersFix] 2025-09-27T13:32:28.399584 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.399584 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.399584 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.399584
[ReorderMembersFix] 2025-09-27T13:32:28.399846 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.399846 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.399846 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.399846
[ReorderMembersFix] 2025-09-27T13:32:28.399922 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.399922 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.399922 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.399922
[ReorderMembersFix] 2025-09-27T13:32:28.678276 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.678276 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.678276 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.678276
[ReorderMembersFix] 2025-09-27T13:32:28.679802 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.679802 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.679802 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.679802
[ReorderMembersFix] 2025-09-27T13:32:28.680062 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.680062 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.680062 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.680062
[ReorderMembersFix] 2025-09-27T13:32:28.680187 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.680187 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.680187 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.680187
[ReorderMembersFix] 2025-09-27T13:32:28.680546 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.680546 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.680546 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.680546
[ReorderMembersFix] 2025-09-27T13:32:28.682002 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.682002 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682002 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.682002
[ReorderMembersFix] 2025-09-27T13:32:28.682292 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.682292 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682292 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.682292
[ReorderMembersFix] 2025-09-27T13:32:28.682376 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.682376 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682376 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.682376
[ReorderMembersFix] 2025-09-27T13:32:28.682736 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.682736 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.682736 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.682736
[ReorderMembersFix] 2025-09-27T13:32:28.683514 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.683514 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.683514 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.683514
[ReorderMembersFix] 2025-09-27T13:32:28.683688 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.683688 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.683688 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.683688
[ReorderMembersFix] 2025-09-27T13:32:28.685537 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.685537 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.685537 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.685537
[ReorderMembersFix] 2025-09-27T13:32:28.917828 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.917828 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.917828 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.917828
[ReorderMembersFix] 2025-09-27T13:32:28.919808 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.919808 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.919808 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.919808
[ReorderMembersFix] 2025-09-27T13:32:28.920106 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.920106 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.920106 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.920106
[ReorderMembersFix] 2025-09-27T13:32:28.920251 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.920251 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.920251 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.920251
[ReorderMembersFix] 2025-09-27T13:32:28.922117 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.922117 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922117 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.922117
[ReorderMembersFix] 2025-09-27T13:32:28.922232 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.922232 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922232 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.922232
[ReorderMembersFix] 2025-09-27T13:32:28.922434 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.922434 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922434 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.922434
[ReorderMembersFix] 2025-09-27T13:32:28.922540 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.922540 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.922540 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.922540
[ReorderMembersFix] 2025-09-27T13:32:28.925265 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.925265 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.925265 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.925265
[ReorderMembersFix] 2025-09-27T13:32:28.925530 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.925530 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.925530 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.925530
[ReorderMembersFix] 2025-09-27T13:32:28.926023 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.926023 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.926023 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.926023
[ReorderMembersFix] 2025-09-27T13:32:28.926189 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:28.926189 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:28.926189 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:28.926189
[ReorderMembersFix] 2025-09-27T13:32:29.695611 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.695611 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.695611 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.695611
[ReorderMembersFix] 2025-09-27T13:32:29.697222 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.697222 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.697222 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.697222
[ReorderMembersFix] 2025-09-27T13:32:29.697506 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.697506 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.697506 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.697506
[ReorderMembersFix] 2025-09-27T13:32:29.697658 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.697658 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.697658 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.697658
[ReorderMembersFix] 2025-09-27T13:32:29.699330 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.699330 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.699330 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.699330
[ReorderMembersFix] 2025-09-27T13:32:29.699504 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.699504 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.699504 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.699504
[ReorderMembersFix] 2025-09-27T13:32:29.699913 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.699913 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.699913 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.699913
[ReorderMembersFix] 2025-09-27T13:32:29.700072 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.700072 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.700072 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.700072
[ReorderMembersFix] 2025-09-27T13:32:29.703889 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.703889 ConflictingEditException: {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"} conflicts with {"offset":11639,"length":2637,"replacement":"  static const _typeMap = {\n    's': CaseInsensitiveSort(),\n    'S': CaseSensitiveSort(),\n    'n': NumericSort(),\n    'm': MonthSort(),\n  };\n\n  static const _directionMap = {\n    'a': SortDirection.ascending,\n    'd': SortDirection.descending\n  };\n\n  /// [ordinal] is the column index using base 1\n  /// An ordinal of 0 means that we are treating the entire\n  /// line as a single column.\n  int? ordinal;\n\n  ColumnComparator? _comparator;\n\n  SortDirection? _sortDirection;\n\n  /// [ordinal] the (base 1) index of the column.\n  /// The [_comparator] we will used to compare\n  /// to lines when sorting.\n  /// The [_sortDirection] is either ascending or decending.\n  Column(this.ordinal, this._comparator, this._sortDirection);\n\n  /// A column string is formed as:\n  ///\n  /// ```\n  /// [ordinal]<type><direction>\n  ///\n  /// [ordinal] - the column no. base 1\n  /// <type>=<s|S|n|m>\n  /// s - case sensitive string sort - the default\n  /// S - case insensitive string sort\n  /// n - numeric sort\n  /// m - month name sort\n  ///\n  /// If the [direction] is specified then you must also specifiy the type\n  /// [direction]=<a|d>\n  /// a - ascending - the default\n  /// d - descending\n  /// ```\n  ///\n  Column.parse(String column, {bool ordinalOnly = false}) {\n    final digits = _countDigits(column);\n\n    ordinal = int.parse(column.substring(0, digits));\n\n    if (ordinalOnly && digits < column.length) {\n      throw InvalidArgumentException(\n          'Expected only a column no but found: $column');\n    }\n\n    var type = 's';\n\n    if (column.length > digits) {\n      type = column.substring(digits, digits + 1);\n    }\n\n    _comparator = _typeMap[type];\n\n    if (_comparator == null) {\n      throw InvalidArgumentException('The sort type $type is not valid');\n    }\n\n    var direction = 'a';\n\n    if (column.length > digits + 1) {\n      direction = column.substring(digits + 1, digits + 2);\n    }\n    _sortDirection = _directionMap[direction];\n\n    if (_sortDirection == null) {\n      throw InvalidArgumentException(\n          'The sort direction $direction is not valid');\n    }\n  }\n\n  @override\n  String toString() =>\n      'ordinal: $ordinal, comparator: ${_comparator.runtimeType}, '\n      ' sortDirection: $_sortDirection';\n\n  int _countDigits(String column) {\n    var digits = 0;\n\n    for (var i = 0; i < column.length; i++) {\n      if (!_isDigit(column[i])) {\n        break;\n      }\n      digits++;\n    }\n    return digits;\n  }\n\n  bool _isDigit(String c) =>\n      c == '0' ||\n      c == '1' ||\n      c == '2' ||\n      c == '3' ||\n      c == '4' ||\n      c == '5' ||\n      c == '6' ||\n      c == '7' ||\n      c == '8' ||\n      c == '9';"}
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.703889 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.703889
[ReorderMembersFix] 2025-09-27T13:32:29.704089 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.704089 ConflictingEditException: {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"} conflicts with {"offset":822,"length":8074,"replacement":"  final String _inputPath;\n\n  final String _outputPath;\n\n  final List<Column> _columns;\n\n  final String? _fieldDelimiter;\n\n  final String? _lineDelimiter;\n\n  ///\n  final bool? verbose;\n\n  int? _maxColumn = -1;\n\n  static const _mergeSize = 1000;\n\n  /// Sort the file at [inputPath] and save the results to [outputPath]\n  /// [_inputPath] is the path to the file to be sorted\n  /// [_outputPath] is the path to write the sorted file to.\n  /// [_columns] is used to describe the sort order to be\n  /// applied to the selected columns.\n  /// [_fieldDelimiter] is the delimiter to be used to separate each\n  /// line of the file into columns.\n  /// [_lineDelimiter] is the delimiter to be used to separate each line.\n  /// [verbose] caused FileSort to log debug level information as it sorts.\n  FileSort(\n    String inputPath,\n    String outputPath,\n    List<Column> columns,\n    String? fieldDelimiter,\n    String? lineDelimiter, {\n    this.verbose = false,\n  })  : _inputPath = inputPath,\n        _outputPath = outputPath,\n        _columns = columns,\n        _fieldDelimiter = fieldDelimiter,\n        _lineDelimiter = lineDelimiter {\n    for (final column in _columns) {\n      if (_maxColumn! < column.ordinal!) {\n        _maxColumn = column.ordinal;\n      }\n    }\n  }\n\n  ///\n  /// call this method to start the sort.\n  void sort() {\n    // ignore: discarded_futures\n    _sort();\n  }\n\n  void _sort() {\n    var instance = 0;\n    var lineCount = _mergeSize;\n\n    final phaseDirectory = Directory.systemTemp.createTempSync();\n\n    var list = <_Line>[];\n\n    var sentToPhase = false;\n\n    d.FileSync(_inputPath).read((l) {\n      list.add(_Line.fromString(_inputPath, l));\n      lineCount--;\n\n      if (lineCount == 0) {\n        lineCount = _mergeSize;\n        final phaseList = list;\n        list = [];\n        instance++;\n        sentToPhase = true;\n\n        _savePhase(phaseDirectory, 1, instance, phaseList, _lineDelimiter!);\n      }\n      return true;\n    });\n\n    if (!sentToPhase) {\n      _sortList(list);\n      _replaceFileWithSortedList(list);\n    } else {\n      if (list.isNotEmpty && list.length < _mergeSize) {\n        _savePhase(phaseDirectory, 1, ++instance, list, _lineDelimiter!);\n      }\n      _mergeSort(phaseDirectory);\n    }\n  }\n\n  void _replaceFileWithSortedList(List<_Line> sorted) {\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n      d.delete('$_inputPath.bak');\n    } else {\n      _saveSortedList(_outputPath, sorted, _lineDelimiter);\n    }\n  }\n\n  /// Performs an insitu sort of the passed list.\n  void _sortList(List<_Line> list) {\n    list.sort((lhs, rhs) {\n      final lhsColumns = lhs.line!.split(_fieldDelimiter!);\n      final rhsColumns = rhs.line!.split(_fieldDelimiter);\n\n      if (_maxColumn! > lhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $lhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      if (_maxColumn! > rhsColumns.length) {\n        throw InvalidArgumentException(\n          'Line $rhs does not have enough columns. '\n          'Expected $_maxColumn, found ${lhsColumns.length}',\n        );\n      }\n\n      var result = 0;\n\n      if (_maxColumn == 0) {\n        // just compare the whole line.\n        result =\n            _columns[0]._comparator!.compareTo(_columns[0], lhs.line, rhs.line);\n      } else {\n        // compare the defined columns\n        for (final column in _columns) {\n          final direction =\n              column._sortDirection == SortDirection.ascending ? 1 : -1;\n\n          result = column._comparator!.compareTo(\n                column,\n                lhsColumns[column.ordinal! - 1],\n                rhsColumns[column.ordinal! - 1],\n              ) *\n              direction;\n          if (result != 0) {\n            break;\n          }\n        }\n      }\n      return result;\n    });\n  }\n\n  void _savePhase(\n    Directory phaseDirectory,\n    int phase,\n    int instance,\n    List<_Line> list,\n    String lineDelimiter,\n  ) {\n    final instanceFile =\n        File(join(phaseDirectory.path, 'phase$phase-$instance'));\n\n    _sortList(list);\n\n    final lines = list.map((line) => line.line).toList();\n\n    instanceFile.writeAsStringSync(\n      lines.join(lineDelimiter) + lineDelimiter,\n      flush: true,\n    );\n  }\n\n  void _saveSortedList(\n    String filename,\n    List<_Line> list,\n    String? lineDelimiter,\n  ) {\n    withOpenFile(filename, (saveTo) {\n      saveTo.truncate();\n      for (final line in list) {\n        saveTo.append(line.line!, newline: lineDelimiter);\n      }\n    });\n  }\n\n  /// Expands an list of columns defined as per [Column.parse]\n  /// into a list of [Column]s.\n  ///\n  static List<Column> expandColumns(List<String> values) {\n    final columns = <Column>[];\n\n    for (final value in values) {\n      final parts = value.split('-');\n\n      if (parts.length == 1) {\n        columns.add(Column.parse(parts[0]));\n      } else if (parts.length == 2) {\n        // We have been passed a column range 1-4\n        // The type and sort direction MUST ONLY be present on the end ordinal\n        // e.g. 1-4Sa\n\n        final end = Column.parse(parts[1]);\n\n        final comparator = end._comparator;\n        final sortDirection = end._sortDirection;\n\n        final start = Column.parse(parts[0], ordinalOnly: true)\n          .._comparator = comparator\n          .._sortDirection = sortDirection;\n\n        int index;\n        if (end.ordinal! > start.ordinal!) {\n          index = 1;\n        } else {\n          index = -1;\n        }\n        columns.add(start);\n\n        for (var i = start.ordinal! + index; i != end.ordinal; i += index) {\n          final column = Column(i, comparator, sortDirection);\n          columns.add(column);\n        }\n\n        columns.add(end);\n      } else {\n        throw InvalidArgumentException('The column format is invalid: $value');\n      }\n    }\n\n    return columns;\n  }\n\n  /// Performs a merge sort\n  /// We open every file in the phase directory\n  /// and then read the first line from each file.\n  /// We then sort the list of the first lines.\n  /// We write the first line from the resulting sort\n  /// to the merge file noting what file the line\n  /// was read from.\n  /// We then read another line from the noted file\n  /// repeat the sort and the write.\n  /// if noted file is empty when then write\n  /// the first line from the sorted list\n  /// and write that line.\n  /// Rinse and repeat until all files are drained\n  /// and the list is empty.\n  void _mergeSort(Directory phaseDirectory) {\n    final lines = <_Line>[];\n    final files = d.find('*', workingDirectory: phaseDirectory.path).toList();\n\n    // Open and read the first line from each file.\n    for (final file in files) {\n      withOpenFile(\n        file,\n        (fileSync) {\n          lines.add(_Line(fileSync));\n        },\n        fileMode: FileMode.read,\n      );\n    }\n\n    // Sort the set of first lines.\n    _sortList(lines);\n\n    const mergedFilename = 'merged.txt';\n    final mergedPath = join(phaseDirectory.path, mergedFilename);\n    withOpenFile(mergedPath, (resultFile) {\n      while (lines.isNotEmpty) {\n        final line = lines.removeAt(0);\n        resultFile.append(line.line!);\n\n        // a btree might give better performance as we wouldn't\n        // have to resort.\n        // If readNext returns false then the file is drained\n        // so we don't re-added to the list.\n        if (line.readNext()) {\n          lines.add(line);\n          _sortList(lines);\n        } else {\n          line\n            ..close()\n            ..delete();\n        }\n      }\n    });\n\n    if (_inputPath == _outputPath) {\n      final backup = '$_inputPath.bak';\n      if (exists(backup)) {\n        delete(backup);\n      }\n      d.move(_inputPath, backup);\n      d.move(mergedPath, _inputPath);\n      d.delete(backup);\n    } else {\n      d.move(mergedPath, _outputPath);\n    }\n    d.deleteDir(phaseDirectory.path);\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.704089 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.704089
[ReorderMembersFix] 2025-09-27T13:32:29.704397 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.704397 ConflictingEditException: {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"} conflicts with {"offset":8914,"length":446,"replacement":"  FileSync? source;\n\n  late String sourcePath;\n\n  String? line;\n\n  _Line(this.source) {\n    sourcePath = source!.path;\n    line = source!.readLine();\n  }\n\n  _Line.fromString(this.sourcePath, this.line);\n\n  bool readNext() {\n    line = source!.readLine();\n    return line != null;\n  }\n\n  void close() {\n    source!.close();\n  }\n\n  void delete() {\n    d.delete(source!.path);\n  }\n\n  @override\n  String toString() => 'File: $sourcePath : Line: $line';"}
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.704397 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.704397
[ReorderMembersFix] 2025-09-27T13:32:29.704534 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/file_sort.dart:
[ReorderMembersFix] 2025-09-27T13:32:29.704534 ConflictingEditException: {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"} conflicts with {"offset":10511,"length":908,"replacement":"  ///\n  static const months = <String, int>{\n    'jan': 1,\n    'feb': 2,\n    'mar': 3,\n    'apr': 4,\n    'may': 5,\n    'jun': 6,\n    'jul': 7,\n    'aug': 8,\n    'sep': 9,\n    'oct': 10,\n    'nov': 11,\n    'dec': 12,\n  };\n\n  ///\n  const MonthSort();\n\n  @override\n  int compareTo(Column column, String? lhs, String? rhs) {\n    final mLhs = toMonthNo(lhs!)!;\n    final mRhs = toMonthNo(rhs!)!;\n    return mLhs.compareTo(mRhs);\n  }\n\n  /// the month no. (base 1) derived\n  /// from the monthName.\n  /// checks are case insensitive and only the first three\n  /// characters are considered.\n  int? toMonthNo(String monthName) {\n    var finalmonthName = monthName.trim();\n    if (finalmonthName.length < 3) {\n      throw InvalidArgumentException(\n          'Month in must be at least 3 characters long');\n    }\n    finalmonthName = finalmonthName.substring(0, 3).toLowerCase();\n\n    return months[finalmonthName];\n  }"}
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:32:29.704534 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:32:29.704534
[ReorderMembersFix] 2025-09-27T13:33:28.905238 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/named_lock.dart:
[ReorderMembersFix] 2025-09-27T13:33:28.905238 ConflictingEditException: {"offset":12540,"length":72,"replacement":"  int pid;\n\n  int isolateId;\n\n  _LockFileParts(this.pid, this.isolateId);"} conflicts with {"offset":12540,"length":72,"replacement":"  int pid;\n\n  int isolateId;\n\n  _LockFileParts(this.pid, this.isolateId);"}
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:33:28.905238 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:33:28.905238
[ReorderMembersFix] 2025-09-27T13:33:28.937707 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/named_lock.dart:
[ReorderMembersFix] 2025-09-27T13:33:28.937707 ConflictingEditException: {"offset":1548,"length":10965,"replacement":"  /// The tcp socket  port we use to implement\n  /// a hard lock. A port can only be opened once\n  /// so its the perfect way to create a lock that works\n  /// across processes and isolates.\n  final port = 9003;\n\n  late String _lockPath;\n\n  /// The name of the lock.\n  final String name;\n\n  final String _description;\n\n  /// We use this to allow a lock to be-reentrant within an isolate.\n  /// A non-zero value means we have the lock.\n  /// We maintain a lock count per\n  /// lock suffix to allow each suffix lock to be re-entrant.\n  static final Map<String, int> _lockCounts = {};\n\n  /// The duration to wait for a lock before timing out.\n  final Duration _timeout;\n\n  /// [lockPath] is the path of the directory used\n  /// to store the lock file.\n  /// If no lockPath is given then [Directory.systemTemp]/dcli/locks is used\n  /// to store locks.\n  /// All code that shares the lock MUST use the\n  /// same [lockPath]. It is recommended that you\n  /// pass an absolute path to ensure that the\n  /// same path is used.\n  /// The [name] is used as the suffix of the lockfile.\n  /// The suffix allows multiple locks to share a single\n  /// lockPath.\n  /// The [description], if passed, is used in error messages\n  /// to describe the lock.\n  /// The [timeout] defines how long we will wait for\n  /// a lock to become available. The default [timeout] is\n  /// infinite (null).\n  ///\n  /// ```dart\n  /// NamedLock(name: 'update-catalog').withLock(() {\n  ///   if (!exists('catalog'))\n  ///     createDir('catalog');\n  ///   updateCatalog();\n  /// });\n  /// ```\n  ///\n  NamedLock({\n    required this.name,\n    String? lockPath,\n    String description = '',\n    Duration timeout = const Duration(seconds: 30),\n  })  : _timeout = timeout,\n        _description = description {\n    _lockPath =\n        lockPath ?? join(rootPath, Directory.systemTemp.path, 'dcli', 'locks');\n  }\n\n  @Deprecated('Used withLockAsync')\n  Future<void> withLock(\n    void Function() fn, {\n    String? waiting,\n  }) =>\n      throw UnsupportedError('Use withLockAsync');\n\n  /// creates a lock file and then calls [fn]\n  /// once [fn] returns the lock is released.\n  /// If [waiting] is passed it will be used to write\n  /// a log message to the console.\n  ///\n  /// Throws a [DCliException] if the NamedLock times out.\n  Future<void> withLockAsync(\n    Future<void> Function() fn, {\n    String? waiting,\n  }) async {\n    var lockHeld = false;\n    try {\n      verbose(() => 'lockcount = $_lockCountForName');\n\n      _createLockPath();\n\n      if (_lockCountForName > 0 || (await _takeLock(waiting))) {\n        lockHeld = true;\n        incLockCount;\n\n        await fn();\n      }\n    } finally {\n      if (lockHeld) {\n        await _releaseLock();\n      }\n      // just in case an async exception can be thrown\n      // I'm uncertain if this is a reality.\n      lockHeld = false;\n    }\n  }\n\n  void _createLockPath() {\n    if (!exists(_lockPath)) {\n      try {\n        createDir(_lockPath, recursive: true);\n      } on CreateDirException catch (_) {\n        /// we can get a race condition on the\n        /// create so just ignore it because\n        /// if the path already exists our job\n        /// is down.\n      }\n    }\n  }\n\n  Future<void> _releaseLock() async {\n    if (_lockCountForName > 0) {\n      decLockCount;\n\n      /// decLockCount changes the value of _locakCountForName\n      /// but the static analyser can't see this.\n      // ignore: invariant_booleans\n      if (_lockCountForName == 0) {\n        verbose(() => 'Releasing lock: $_lockFilePath');\n\n        await _withHardLock(fn: () async => delete(_lockFilePath));\n\n        verbose(() => 'Releasing lock: $_lockFilePath');\n      }\n    }\n  }\n\n  int get _lockCountForName {\n    var lockCount = _lockCounts[name];\n    return lockCount ??= 0;\n  }\n\n  /// increments the lock count and returns\n  /// the new lock count.\n  int get incLockCount {\n    var lockCount = _lockCountForName;\n    lockCount++;\n    _lockCounts[name] = lockCount;\n    verbose(() => 'Incremented lock: $lockCount');\n    return lockCount;\n  }\n\n  /// decrements the lock count and returns\n  /// the new lock count.\n  int get decLockCount {\n    var lockCount = _lockCountForName;\n    lockCount--;\n    _lockCounts[name] = lockCount;\n\n    verbose(() => 'Decremented lock: $_lockCountForName');\n    return lockCount;\n  }\n\n  String get _lockFilePath {\n    // lock file is in the directory above the project\n    // as during preparing we delete the project directory.\n\n    final isolate = isolateID;\n\n    return join(_lockPath, '.$pid.$isolate.$name');\n  }\n\n  _LockFileParts? _lockFileParts(String lockfilePath) {\n    final parts = basename(lockfilePath).split('.');\n    // it can't actually be one of our lock files\n    if (parts.length < 3) {\n      return null;\n    }\n\n    final pid = int.tryParse(parts[1]) ?? 0;\n    final isolateId = int.tryParse(parts[2]) ?? 0;\n\n    return _LockFileParts(pid, isolateId);\n  }\n\n  /// Attempts to take a project lock.\n  /// We wait for upto 30 seconds for an existing lock to\n  /// be released and then give up.\n  ///\n  /// We create the lock file in the virtual project directory\n  /// in the form:\n  /// <pid>.warmup.lock\n  ///\n  /// If we find an existing lock file we check if the process\n  /// that owns it is still running. If it isn't we\n  /// take a lock and delete the orphaned lock.\n  Future<bool> _takeLock(String? waiting) async {\n    var taken = false;\n    verbose(() => '_takeLock called');\n\n    var finalwaiting = waiting;\n\n    // wait for the lock to release or the timeout to expire\n    var waitCount = 1;\n\n    // we will be retrying every 100 ms.\n    waitCount = _timeout.inMilliseconds ~/ 100;\n    // ensure at least one retry\n    if (waitCount == 0) {\n      waitCount = 1;\n    }\n\n    /// If a valid lock file exists we don't even try to take\n    /// a hard lock.\n    /// This is to avoid a pseudp race condition under heavy load\n    /// where the lock owner can't get the hardlock as\n    /// all of the contenders constantly have it locked.\n    while (!taken && waitCount > 0) {\n      if (!_validLockFileExists) {\n        verbose(() => 'entering withHardLock waitCount: $waitCount');\n\n        /// Take a hard lock and attempt to create a lock file.\n        await _withHardLock(\n          fn: () async {\n            // check for a lock files again as one may have\n            // been created between checking for their existance\n            // and the hard lock been taken.\n            final locks = find(\n              '*.$name',\n              workingDirectory: _lockPath,\n              includeHidden: true,\n              recursive: false,\n            ).toList();\n            verbose(() => red('found lock files $locks'));\n\n            var lockFiles = locks.length;\n\n            if (lockFiles == 0) {\n              // no other lock exists so we have taken a lock.\n              taken = true;\n            } else {\n              // we have found another lock file so check if it is held\n              // be a running process\n              lockFiles = _clearStaleLocks(locks, lockFiles);\n              if (lockFiles == 0) {\n                taken = true;\n              }\n            }\n\n            if (taken) {\n              Settings().verbose(\n                'Taking lock ${basename(_lockFilePath)} for $isolateID',\n              );\n\n              verbose(\n                () => 'Lock Source: '\n                    // ignore: lines_longer_than_80_chars\n                    '${Trace.current().frames.length > 1 ? Trace.current().frames[min(Trace.current().frames.length - 1, 8)] : 'Unknown'}',\n              );\n              touch(_lockFilePath, create: true);\n            }\n          },\n        );\n      } else {\n        verbose(() => 'existing lock file exist so waiting');\n      }\n\n      /// sleep for 100ms and then we will try again.\n      await Future.delayed(const Duration(milliseconds: 100), () {});\n      if (finalwaiting != null) {\n        // only print waiting message once.\n        finalwaiting = null;\n      }\n\n      waitCount--;\n    }\n\n    if (!taken) {\n      if (waitCount == 0) {\n        throw LockException(\n          'NamedLock timed out on $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      } else {\n        throw LockException(\n          'Unable to lock $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      }\n    }\n\n    return taken;\n  }\n\n  /// Check if there is a valid lock file and if so\n  /// if it has a live owner.\n  bool get _validLockFileExists {\n    // check for other lock files\n    final locks = find(\n      '*.$name',\n      workingDirectory: _lockPath,\n      includeHidden: true,\n      recursive: false,\n    ).toList();\n\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        continue;\n      }\n\n      if (_isOwnerLive(lockFileParts.pid)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _isSelf(int lockPid, int lockIsolateId) =>\n      lockIsolateId == isolateID && lockPid == pid;\n\n  int _clearStaleLocks(List<String> locks, int lockFiles) {\n    var lockFiles0 = lockFiles;\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        // ignore our own lock.\n        lockFiles0--;\n        continue;\n      }\n\n      if (!_isOwnerLive(lockFileParts.pid)) {\n        // If the foreign lock file was left orphaned\n        // then we delete it.\n        if (exists(lock)) {\n          verbose(() => red('Clearing old lock file: $lock'));\n          delete(lock);\n        }\n        lockFiles0--;\n      }\n    }\n    return lockFiles0;\n  }\n\n  bool _isOwnerLive(int lockOwnerPid) =>\n      ProcessHelper().isRunning(lockOwnerPid);\n\n  /// Call [fn] with a hard lock held.\n  Future<void> _withHardLock({\n    required Future<void> Function() fn,\n  }) async {\n    ServerSocket? socket;\n\n    try {\n      verbose(() => 'attempt bindSocket');\n      // ignore: discarded_futures\n      socket = await _bindSocket();\n      if (socket != null) {\n        verbose(() => blue('''\nHardlock taken for $name in ${Service.getIsolateId(Isolate.current)}'''));\n        await fn();\n      }\n    } finally {\n      if (socket != null) {\n        await socket.close();\n        verbose(() => blue('''\nHardlock released  for $name in ${Service.getIsolateId(Isolate.current)}'''));\n      }\n    }\n  }\n\n  Future<ServerSocket?> _bindSocket() async {\n    ServerSocket? socket;\n    try {\n      socket = await ServerSocket.bind(\n        '127.0.0.1',\n        port,\n      );\n    } on SocketException catch (e) {\n      /// no op. We expect this if the hardlock is already held.\n      verbose(e.toString);\n    }\n    return socket;\n  }"} conflicts with {"offset":1548,"length":10965,"replacement":"  /// The tcp socket  port we use to implement\n  /// a hard lock. A port can only be opened once\n  /// so its the perfect way to create a lock that works\n  /// across processes and isolates.\n  final port = 9003;\n\n  late String _lockPath;\n\n  /// The name of the lock.\n  final String name;\n\n  final String _description;\n\n  /// We use this to allow a lock to be-reentrant within an isolate.\n  /// A non-zero value means we have the lock.\n  /// We maintain a lock count per\n  /// lock suffix to allow each suffix lock to be re-entrant.\n  static final Map<String, int> _lockCounts = {};\n\n  /// The duration to wait for a lock before timing out.\n  final Duration _timeout;\n\n  /// [lockPath] is the path of the directory used\n  /// to store the lock file.\n  /// If no lockPath is given then [Directory.systemTemp]/dcli/locks is used\n  /// to store locks.\n  /// All code that shares the lock MUST use the\n  /// same [lockPath]. It is recommended that you\n  /// pass an absolute path to ensure that the\n  /// same path is used.\n  /// The [name] is used as the suffix of the lockfile.\n  /// The suffix allows multiple locks to share a single\n  /// lockPath.\n  /// The [description], if passed, is used in error messages\n  /// to describe the lock.\n  /// The [timeout] defines how long we will wait for\n  /// a lock to become available. The default [timeout] is\n  /// infinite (null).\n  ///\n  /// ```dart\n  /// NamedLock(name: 'update-catalog').withLock(() {\n  ///   if (!exists('catalog'))\n  ///     createDir('catalog');\n  ///   updateCatalog();\n  /// });\n  /// ```\n  ///\n  NamedLock({\n    required this.name,\n    String? lockPath,\n    String description = '',\n    Duration timeout = const Duration(seconds: 30),\n  })  : _timeout = timeout,\n        _description = description {\n    _lockPath =\n        lockPath ?? join(rootPath, Directory.systemTemp.path, 'dcli', 'locks');\n  }\n\n  @Deprecated('Used withLockAsync')\n  Future<void> withLock(\n    void Function() fn, {\n    String? waiting,\n  }) =>\n      throw UnsupportedError('Use withLockAsync');\n\n  /// creates a lock file and then calls [fn]\n  /// once [fn] returns the lock is released.\n  /// If [waiting] is passed it will be used to write\n  /// a log message to the console.\n  ///\n  /// Throws a [DCliException] if the NamedLock times out.\n  Future<void> withLockAsync(\n    Future<void> Function() fn, {\n    String? waiting,\n  }) async {\n    var lockHeld = false;\n    try {\n      verbose(() => 'lockcount = $_lockCountForName');\n\n      _createLockPath();\n\n      if (_lockCountForName > 0 || (await _takeLock(waiting))) {\n        lockHeld = true;\n        incLockCount;\n\n        await fn();\n      }\n    } finally {\n      if (lockHeld) {\n        await _releaseLock();\n      }\n      // just in case an async exception can be thrown\n      // I'm uncertain if this is a reality.\n      lockHeld = false;\n    }\n  }\n\n  void _createLockPath() {\n    if (!exists(_lockPath)) {\n      try {\n        createDir(_lockPath, recursive: true);\n      } on CreateDirException catch (_) {\n        /// we can get a race condition on the\n        /// create so just ignore it because\n        /// if the path already exists our job\n        /// is down.\n      }\n    }\n  }\n\n  Future<void> _releaseLock() async {\n    if (_lockCountForName > 0) {\n      decLockCount;\n\n      /// decLockCount changes the value of _locakCountForName\n      /// but the static analyser can't see this.\n      // ignore: invariant_booleans\n      if (_lockCountForName == 0) {\n        verbose(() => 'Releasing lock: $_lockFilePath');\n\n        await _withHardLock(fn: () async => delete(_lockFilePath));\n\n        verbose(() => 'Releasing lock: $_lockFilePath');\n      }\n    }\n  }\n\n  int get _lockCountForName {\n    var lockCount = _lockCounts[name];\n    return lockCount ??= 0;\n  }\n\n  /// increments the lock count and returns\n  /// the new lock count.\n  int get incLockCount {\n    var lockCount = _lockCountForName;\n    lockCount++;\n    _lockCounts[name] = lockCount;\n    verbose(() => 'Incremented lock: $lockCount');\n    return lockCount;\n  }\n\n  /// decrements the lock count and returns\n  /// the new lock count.\n  int get decLockCount {\n    var lockCount = _lockCountForName;\n    lockCount--;\n    _lockCounts[name] = lockCount;\n\n    verbose(() => 'Decremented lock: $_lockCountForName');\n    return lockCount;\n  }\n\n  String get _lockFilePath {\n    // lock file is in the directory above the project\n    // as during preparing we delete the project directory.\n\n    final isolate = isolateID;\n\n    return join(_lockPath, '.$pid.$isolate.$name');\n  }\n\n  _LockFileParts? _lockFileParts(String lockfilePath) {\n    final parts = basename(lockfilePath).split('.');\n    // it can't actually be one of our lock files\n    if (parts.length < 3) {\n      return null;\n    }\n\n    final pid = int.tryParse(parts[1]) ?? 0;\n    final isolateId = int.tryParse(parts[2]) ?? 0;\n\n    return _LockFileParts(pid, isolateId);\n  }\n\n  /// Attempts to take a project lock.\n  /// We wait for upto 30 seconds for an existing lock to\n  /// be released and then give up.\n  ///\n  /// We create the lock file in the virtual project directory\n  /// in the form:\n  /// <pid>.warmup.lock\n  ///\n  /// If we find an existing lock file we check if the process\n  /// that owns it is still running. If it isn't we\n  /// take a lock and delete the orphaned lock.\n  Future<bool> _takeLock(String? waiting) async {\n    var taken = false;\n    verbose(() => '_takeLock called');\n\n    var finalwaiting = waiting;\n\n    // wait for the lock to release or the timeout to expire\n    var waitCount = 1;\n\n    // we will be retrying every 100 ms.\n    waitCount = _timeout.inMilliseconds ~/ 100;\n    // ensure at least one retry\n    if (waitCount == 0) {\n      waitCount = 1;\n    }\n\n    /// If a valid lock file exists we don't even try to take\n    /// a hard lock.\n    /// This is to avoid a pseudp race condition under heavy load\n    /// where the lock owner can't get the hardlock as\n    /// all of the contenders constantly have it locked.\n    while (!taken && waitCount > 0) {\n      if (!_validLockFileExists) {\n        verbose(() => 'entering withHardLock waitCount: $waitCount');\n\n        /// Take a hard lock and attempt to create a lock file.\n        await _withHardLock(\n          fn: () async {\n            // check for a lock files again as one may have\n            // been created between checking for their existance\n            // and the hard lock been taken.\n            final locks = find(\n              '*.$name',\n              workingDirectory: _lockPath,\n              includeHidden: true,\n              recursive: false,\n            ).toList();\n            verbose(() => red('found lock files $locks'));\n\n            var lockFiles = locks.length;\n\n            if (lockFiles == 0) {\n              // no other lock exists so we have taken a lock.\n              taken = true;\n            } else {\n              // we have found another lock file so check if it is held\n              // be a running process\n              lockFiles = _clearStaleLocks(locks, lockFiles);\n              if (lockFiles == 0) {\n                taken = true;\n              }\n            }\n\n            if (taken) {\n              Settings().verbose(\n                'Taking lock ${basename(_lockFilePath)} for $isolateID',\n              );\n\n              verbose(\n                () => 'Lock Source: '\n                    // ignore: lines_longer_than_80_chars\n                    '${Trace.current().frames.length > 1 ? Trace.current().frames[min(Trace.current().frames.length - 1, 8)] : 'Unknown'}',\n              );\n              touch(_lockFilePath, create: true);\n            }\n          },\n        );\n      } else {\n        verbose(() => 'existing lock file exist so waiting');\n      }\n\n      /// sleep for 100ms and then we will try again.\n      await Future.delayed(const Duration(milliseconds: 100), () {});\n      if (finalwaiting != null) {\n        // only print waiting message once.\n        finalwaiting = null;\n      }\n\n      waitCount--;\n    }\n\n    if (!taken) {\n      if (waitCount == 0) {\n        throw LockException(\n          'NamedLock timed out on $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      } else {\n        throw LockException(\n          'Unable to lock $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      }\n    }\n\n    return taken;\n  }\n\n  /// Check if there is a valid lock file and if so\n  /// if it has a live owner.\n  bool get _validLockFileExists {\n    // check for other lock files\n    final locks = find(\n      '*.$name',\n      workingDirectory: _lockPath,\n      includeHidden: true,\n      recursive: false,\n    ).toList();\n\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        continue;\n      }\n\n      if (_isOwnerLive(lockFileParts.pid)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _isSelf(int lockPid, int lockIsolateId) =>\n      lockIsolateId == isolateID && lockPid == pid;\n\n  int _clearStaleLocks(List<String> locks, int lockFiles) {\n    var lockFiles0 = lockFiles;\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        // ignore our own lock.\n        lockFiles0--;\n        continue;\n      }\n\n      if (!_isOwnerLive(lockFileParts.pid)) {\n        // If the foreign lock file was left orphaned\n        // then we delete it.\n        if (exists(lock)) {\n          verbose(() => red('Clearing old lock file: $lock'));\n          delete(lock);\n        }\n        lockFiles0--;\n      }\n    }\n    return lockFiles0;\n  }\n\n  bool _isOwnerLive(int lockOwnerPid) =>\n      ProcessHelper().isRunning(lockOwnerPid);\n\n  /// Call [fn] with a hard lock held.\n  Future<void> _withHardLock({\n    required Future<void> Function() fn,\n  }) async {\n    ServerSocket? socket;\n\n    try {\n      verbose(() => 'attempt bindSocket');\n      // ignore: discarded_futures\n      socket = await _bindSocket();\n      if (socket != null) {\n        verbose(() => blue('''\nHardlock taken for $name in ${Service.getIsolateId(Isolate.current)}'''));\n        await fn();\n      }\n    } finally {\n      if (socket != null) {\n        await socket.close();\n        verbose(() => blue('''\nHardlock released  for $name in ${Service.getIsolateId(Isolate.current)}'''));\n      }\n    }\n  }\n\n  Future<ServerSocket?> _bindSocket() async {\n    ServerSocket? socket;\n    try {\n      socket = await ServerSocket.bind(\n        '127.0.0.1',\n        port,\n      );\n    } on SocketException catch (e) {\n      /// no op. We expect this if the hardlock is already held.\n      verbose(e.toString);\n    }\n    return socket;\n  }"}
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:33:28.937707 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:33:28.937707
[ReorderMembersFix] 2025-09-27T13:33:29.030328 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/named_lock.dart:
[ReorderMembersFix] 2025-09-27T13:33:29.030328 ConflictingEditException: {"offset":12540,"length":72,"replacement":"  int pid;\n\n  int isolateId;\n\n  _LockFileParts(this.pid, this.isolateId);"} conflicts with {"offset":12540,"length":72,"replacement":"  int pid;\n\n  int isolateId;\n\n  _LockFileParts(this.pid, this.isolateId);"}
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:33:29.030328 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:33:29.030328
[ReorderMembersFix] 2025-09-27T13:33:29.050349 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/named_lock.dart:
[ReorderMembersFix] 2025-09-27T13:33:29.050349 ConflictingEditException: {"offset":1548,"length":10965,"replacement":"  /// The tcp socket  port we use to implement\n  /// a hard lock. A port can only be opened once\n  /// so its the perfect way to create a lock that works\n  /// across processes and isolates.\n  final port = 9003;\n\n  late String _lockPath;\n\n  /// The name of the lock.\n  final String name;\n\n  final String _description;\n\n  /// We use this to allow a lock to be-reentrant within an isolate.\n  /// A non-zero value means we have the lock.\n  /// We maintain a lock count per\n  /// lock suffix to allow each suffix lock to be re-entrant.\n  static final Map<String, int> _lockCounts = {};\n\n  /// The duration to wait for a lock before timing out.\n  final Duration _timeout;\n\n  /// [lockPath] is the path of the directory used\n  /// to store the lock file.\n  /// If no lockPath is given then [Directory.systemTemp]/dcli/locks is used\n  /// to store locks.\n  /// All code that shares the lock MUST use the\n  /// same [lockPath]. It is recommended that you\n  /// pass an absolute path to ensure that the\n  /// same path is used.\n  /// The [name] is used as the suffix of the lockfile.\n  /// The suffix allows multiple locks to share a single\n  /// lockPath.\n  /// The [description], if passed, is used in error messages\n  /// to describe the lock.\n  /// The [timeout] defines how long we will wait for\n  /// a lock to become available. The default [timeout] is\n  /// infinite (null).\n  ///\n  /// ```dart\n  /// NamedLock(name: 'update-catalog').withLock(() {\n  ///   if (!exists('catalog'))\n  ///     createDir('catalog');\n  ///   updateCatalog();\n  /// });\n  /// ```\n  ///\n  NamedLock({\n    required this.name,\n    String? lockPath,\n    String description = '',\n    Duration timeout = const Duration(seconds: 30),\n  })  : _timeout = timeout,\n        _description = description {\n    _lockPath =\n        lockPath ?? join(rootPath, Directory.systemTemp.path, 'dcli', 'locks');\n  }\n\n  @Deprecated('Used withLockAsync')\n  Future<void> withLock(\n    void Function() fn, {\n    String? waiting,\n  }) =>\n      throw UnsupportedError('Use withLockAsync');\n\n  /// creates a lock file and then calls [fn]\n  /// once [fn] returns the lock is released.\n  /// If [waiting] is passed it will be used to write\n  /// a log message to the console.\n  ///\n  /// Throws a [DCliException] if the NamedLock times out.\n  Future<void> withLockAsync(\n    Future<void> Function() fn, {\n    String? waiting,\n  }) async {\n    var lockHeld = false;\n    try {\n      verbose(() => 'lockcount = $_lockCountForName');\n\n      _createLockPath();\n\n      if (_lockCountForName > 0 || (await _takeLock(waiting))) {\n        lockHeld = true;\n        incLockCount;\n\n        await fn();\n      }\n    } finally {\n      if (lockHeld) {\n        await _releaseLock();\n      }\n      // just in case an async exception can be thrown\n      // I'm uncertain if this is a reality.\n      lockHeld = false;\n    }\n  }\n\n  void _createLockPath() {\n    if (!exists(_lockPath)) {\n      try {\n        createDir(_lockPath, recursive: true);\n      } on CreateDirException catch (_) {\n        /// we can get a race condition on the\n        /// create so just ignore it because\n        /// if the path already exists our job\n        /// is down.\n      }\n    }\n  }\n\n  Future<void> _releaseLock() async {\n    if (_lockCountForName > 0) {\n      decLockCount;\n\n      /// decLockCount changes the value of _locakCountForName\n      /// but the static analyser can't see this.\n      // ignore: invariant_booleans\n      if (_lockCountForName == 0) {\n        verbose(() => 'Releasing lock: $_lockFilePath');\n\n        await _withHardLock(fn: () async => delete(_lockFilePath));\n\n        verbose(() => 'Releasing lock: $_lockFilePath');\n      }\n    }\n  }\n\n  int get _lockCountForName {\n    var lockCount = _lockCounts[name];\n    return lockCount ??= 0;\n  }\n\n  /// increments the lock count and returns\n  /// the new lock count.\n  int get incLockCount {\n    var lockCount = _lockCountForName;\n    lockCount++;\n    _lockCounts[name] = lockCount;\n    verbose(() => 'Incremented lock: $lockCount');\n    return lockCount;\n  }\n\n  /// decrements the lock count and returns\n  /// the new lock count.\n  int get decLockCount {\n    var lockCount = _lockCountForName;\n    lockCount--;\n    _lockCounts[name] = lockCount;\n\n    verbose(() => 'Decremented lock: $_lockCountForName');\n    return lockCount;\n  }\n\n  String get _lockFilePath {\n    // lock file is in the directory above the project\n    // as during preparing we delete the project directory.\n\n    final isolate = isolateID;\n\n    return join(_lockPath, '.$pid.$isolate.$name');\n  }\n\n  _LockFileParts? _lockFileParts(String lockfilePath) {\n    final parts = basename(lockfilePath).split('.');\n    // it can't actually be one of our lock files\n    if (parts.length < 3) {\n      return null;\n    }\n\n    final pid = int.tryParse(parts[1]) ?? 0;\n    final isolateId = int.tryParse(parts[2]) ?? 0;\n\n    return _LockFileParts(pid, isolateId);\n  }\n\n  /// Attempts to take a project lock.\n  /// We wait for upto 30 seconds for an existing lock to\n  /// be released and then give up.\n  ///\n  /// We create the lock file in the virtual project directory\n  /// in the form:\n  /// <pid>.warmup.lock\n  ///\n  /// If we find an existing lock file we check if the process\n  /// that owns it is still running. If it isn't we\n  /// take a lock and delete the orphaned lock.\n  Future<bool> _takeLock(String? waiting) async {\n    var taken = false;\n    verbose(() => '_takeLock called');\n\n    var finalwaiting = waiting;\n\n    // wait for the lock to release or the timeout to expire\n    var waitCount = 1;\n\n    // we will be retrying every 100 ms.\n    waitCount = _timeout.inMilliseconds ~/ 100;\n    // ensure at least one retry\n    if (waitCount == 0) {\n      waitCount = 1;\n    }\n\n    /// If a valid lock file exists we don't even try to take\n    /// a hard lock.\n    /// This is to avoid a pseudp race condition under heavy load\n    /// where the lock owner can't get the hardlock as\n    /// all of the contenders constantly have it locked.\n    while (!taken && waitCount > 0) {\n      if (!_validLockFileExists) {\n        verbose(() => 'entering withHardLock waitCount: $waitCount');\n\n        /// Take a hard lock and attempt to create a lock file.\n        await _withHardLock(\n          fn: () async {\n            // check for a lock files again as one may have\n            // been created between checking for their existance\n            // and the hard lock been taken.\n            final locks = find(\n              '*.$name',\n              workingDirectory: _lockPath,\n              includeHidden: true,\n              recursive: false,\n            ).toList();\n            verbose(() => red('found lock files $locks'));\n\n            var lockFiles = locks.length;\n\n            if (lockFiles == 0) {\n              // no other lock exists so we have taken a lock.\n              taken = true;\n            } else {\n              // we have found another lock file so check if it is held\n              // be a running process\n              lockFiles = _clearStaleLocks(locks, lockFiles);\n              if (lockFiles == 0) {\n                taken = true;\n              }\n            }\n\n            if (taken) {\n              Settings().verbose(\n                'Taking lock ${basename(_lockFilePath)} for $isolateID',\n              );\n\n              verbose(\n                () => 'Lock Source: '\n                    // ignore: lines_longer_than_80_chars\n                    '${Trace.current().frames.length > 1 ? Trace.current().frames[min(Trace.current().frames.length - 1, 8)] : 'Unknown'}',\n              );\n              touch(_lockFilePath, create: true);\n            }\n          },\n        );\n      } else {\n        verbose(() => 'existing lock file exist so waiting');\n      }\n\n      /// sleep for 100ms and then we will try again.\n      await Future.delayed(const Duration(milliseconds: 100), () {});\n      if (finalwaiting != null) {\n        // only print waiting message once.\n        finalwaiting = null;\n      }\n\n      waitCount--;\n    }\n\n    if (!taken) {\n      if (waitCount == 0) {\n        throw LockException(\n          'NamedLock timed out on $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      } else {\n        throw LockException(\n          'Unable to lock $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      }\n    }\n\n    return taken;\n  }\n\n  /// Check if there is a valid lock file and if so\n  /// if it has a live owner.\n  bool get _validLockFileExists {\n    // check for other lock files\n    final locks = find(\n      '*.$name',\n      workingDirectory: _lockPath,\n      includeHidden: true,\n      recursive: false,\n    ).toList();\n\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        continue;\n      }\n\n      if (_isOwnerLive(lockFileParts.pid)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _isSelf(int lockPid, int lockIsolateId) =>\n      lockIsolateId == isolateID && lockPid == pid;\n\n  int _clearStaleLocks(List<String> locks, int lockFiles) {\n    var lockFiles0 = lockFiles;\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        // ignore our own lock.\n        lockFiles0--;\n        continue;\n      }\n\n      if (!_isOwnerLive(lockFileParts.pid)) {\n        // If the foreign lock file was left orphaned\n        // then we delete it.\n        if (exists(lock)) {\n          verbose(() => red('Clearing old lock file: $lock'));\n          delete(lock);\n        }\n        lockFiles0--;\n      }\n    }\n    return lockFiles0;\n  }\n\n  bool _isOwnerLive(int lockOwnerPid) =>\n      ProcessHelper().isRunning(lockOwnerPid);\n\n  /// Call [fn] with a hard lock held.\n  Future<void> _withHardLock({\n    required Future<void> Function() fn,\n  }) async {\n    ServerSocket? socket;\n\n    try {\n      verbose(() => 'attempt bindSocket');\n      // ignore: discarded_futures\n      socket = await _bindSocket();\n      if (socket != null) {\n        verbose(() => blue('''\nHardlock taken for $name in ${Service.getIsolateId(Isolate.current)}'''));\n        await fn();\n      }\n    } finally {\n      if (socket != null) {\n        await socket.close();\n        verbose(() => blue('''\nHardlock released  for $name in ${Service.getIsolateId(Isolate.current)}'''));\n      }\n    }\n  }\n\n  Future<ServerSocket?> _bindSocket() async {\n    ServerSocket? socket;\n    try {\n      socket = await ServerSocket.bind(\n        '127.0.0.1',\n        port,\n      );\n    } on SocketException catch (e) {\n      /// no op. We expect this if the hardlock is already held.\n      verbose(e.toString);\n    }\n    return socket;\n  }"} conflicts with {"offset":1548,"length":10965,"replacement":"  /// The tcp socket  port we use to implement\n  /// a hard lock. A port can only be opened once\n  /// so its the perfect way to create a lock that works\n  /// across processes and isolates.\n  final port = 9003;\n\n  late String _lockPath;\n\n  /// The name of the lock.\n  final String name;\n\n  final String _description;\n\n  /// We use this to allow a lock to be-reentrant within an isolate.\n  /// A non-zero value means we have the lock.\n  /// We maintain a lock count per\n  /// lock suffix to allow each suffix lock to be re-entrant.\n  static final Map<String, int> _lockCounts = {};\n\n  /// The duration to wait for a lock before timing out.\n  final Duration _timeout;\n\n  /// [lockPath] is the path of the directory used\n  /// to store the lock file.\n  /// If no lockPath is given then [Directory.systemTemp]/dcli/locks is used\n  /// to store locks.\n  /// All code that shares the lock MUST use the\n  /// same [lockPath]. It is recommended that you\n  /// pass an absolute path to ensure that the\n  /// same path is used.\n  /// The [name] is used as the suffix of the lockfile.\n  /// The suffix allows multiple locks to share a single\n  /// lockPath.\n  /// The [description], if passed, is used in error messages\n  /// to describe the lock.\n  /// The [timeout] defines how long we will wait for\n  /// a lock to become available. The default [timeout] is\n  /// infinite (null).\n  ///\n  /// ```dart\n  /// NamedLock(name: 'update-catalog').withLock(() {\n  ///   if (!exists('catalog'))\n  ///     createDir('catalog');\n  ///   updateCatalog();\n  /// });\n  /// ```\n  ///\n  NamedLock({\n    required this.name,\n    String? lockPath,\n    String description = '',\n    Duration timeout = const Duration(seconds: 30),\n  })  : _timeout = timeout,\n        _description = description {\n    _lockPath =\n        lockPath ?? join(rootPath, Directory.systemTemp.path, 'dcli', 'locks');\n  }\n\n  @Deprecated('Used withLockAsync')\n  Future<void> withLock(\n    void Function() fn, {\n    String? waiting,\n  }) =>\n      throw UnsupportedError('Use withLockAsync');\n\n  /// creates a lock file and then calls [fn]\n  /// once [fn] returns the lock is released.\n  /// If [waiting] is passed it will be used to write\n  /// a log message to the console.\n  ///\n  /// Throws a [DCliException] if the NamedLock times out.\n  Future<void> withLockAsync(\n    Future<void> Function() fn, {\n    String? waiting,\n  }) async {\n    var lockHeld = false;\n    try {\n      verbose(() => 'lockcount = $_lockCountForName');\n\n      _createLockPath();\n\n      if (_lockCountForName > 0 || (await _takeLock(waiting))) {\n        lockHeld = true;\n        incLockCount;\n\n        await fn();\n      }\n    } finally {\n      if (lockHeld) {\n        await _releaseLock();\n      }\n      // just in case an async exception can be thrown\n      // I'm uncertain if this is a reality.\n      lockHeld = false;\n    }\n  }\n\n  void _createLockPath() {\n    if (!exists(_lockPath)) {\n      try {\n        createDir(_lockPath, recursive: true);\n      } on CreateDirException catch (_) {\n        /// we can get a race condition on the\n        /// create so just ignore it because\n        /// if the path already exists our job\n        /// is down.\n      }\n    }\n  }\n\n  Future<void> _releaseLock() async {\n    if (_lockCountForName > 0) {\n      decLockCount;\n\n      /// decLockCount changes the value of _locakCountForName\n      /// but the static analyser can't see this.\n      // ignore: invariant_booleans\n      if (_lockCountForName == 0) {\n        verbose(() => 'Releasing lock: $_lockFilePath');\n\n        await _withHardLock(fn: () async => delete(_lockFilePath));\n\n        verbose(() => 'Releasing lock: $_lockFilePath');\n      }\n    }\n  }\n\n  int get _lockCountForName {\n    var lockCount = _lockCounts[name];\n    return lockCount ??= 0;\n  }\n\n  /// increments the lock count and returns\n  /// the new lock count.\n  int get incLockCount {\n    var lockCount = _lockCountForName;\n    lockCount++;\n    _lockCounts[name] = lockCount;\n    verbose(() => 'Incremented lock: $lockCount');\n    return lockCount;\n  }\n\n  /// decrements the lock count and returns\n  /// the new lock count.\n  int get decLockCount {\n    var lockCount = _lockCountForName;\n    lockCount--;\n    _lockCounts[name] = lockCount;\n\n    verbose(() => 'Decremented lock: $_lockCountForName');\n    return lockCount;\n  }\n\n  String get _lockFilePath {\n    // lock file is in the directory above the project\n    // as during preparing we delete the project directory.\n\n    final isolate = isolateID;\n\n    return join(_lockPath, '.$pid.$isolate.$name');\n  }\n\n  _LockFileParts? _lockFileParts(String lockfilePath) {\n    final parts = basename(lockfilePath).split('.');\n    // it can't actually be one of our lock files\n    if (parts.length < 3) {\n      return null;\n    }\n\n    final pid = int.tryParse(parts[1]) ?? 0;\n    final isolateId = int.tryParse(parts[2]) ?? 0;\n\n    return _LockFileParts(pid, isolateId);\n  }\n\n  /// Attempts to take a project lock.\n  /// We wait for upto 30 seconds for an existing lock to\n  /// be released and then give up.\n  ///\n  /// We create the lock file in the virtual project directory\n  /// in the form:\n  /// <pid>.warmup.lock\n  ///\n  /// If we find an existing lock file we check if the process\n  /// that owns it is still running. If it isn't we\n  /// take a lock and delete the orphaned lock.\n  Future<bool> _takeLock(String? waiting) async {\n    var taken = false;\n    verbose(() => '_takeLock called');\n\n    var finalwaiting = waiting;\n\n    // wait for the lock to release or the timeout to expire\n    var waitCount = 1;\n\n    // we will be retrying every 100 ms.\n    waitCount = _timeout.inMilliseconds ~/ 100;\n    // ensure at least one retry\n    if (waitCount == 0) {\n      waitCount = 1;\n    }\n\n    /// If a valid lock file exists we don't even try to take\n    /// a hard lock.\n    /// This is to avoid a pseudp race condition under heavy load\n    /// where the lock owner can't get the hardlock as\n    /// all of the contenders constantly have it locked.\n    while (!taken && waitCount > 0) {\n      if (!_validLockFileExists) {\n        verbose(() => 'entering withHardLock waitCount: $waitCount');\n\n        /// Take a hard lock and attempt to create a lock file.\n        await _withHardLock(\n          fn: () async {\n            // check for a lock files again as one may have\n            // been created between checking for their existance\n            // and the hard lock been taken.\n            final locks = find(\n              '*.$name',\n              workingDirectory: _lockPath,\n              includeHidden: true,\n              recursive: false,\n            ).toList();\n            verbose(() => red('found lock files $locks'));\n\n            var lockFiles = locks.length;\n\n            if (lockFiles == 0) {\n              // no other lock exists so we have taken a lock.\n              taken = true;\n            } else {\n              // we have found another lock file so check if it is held\n              // be a running process\n              lockFiles = _clearStaleLocks(locks, lockFiles);\n              if (lockFiles == 0) {\n                taken = true;\n              }\n            }\n\n            if (taken) {\n              Settings().verbose(\n                'Taking lock ${basename(_lockFilePath)} for $isolateID',\n              );\n\n              verbose(\n                () => 'Lock Source: '\n                    // ignore: lines_longer_than_80_chars\n                    '${Trace.current().frames.length > 1 ? Trace.current().frames[min(Trace.current().frames.length - 1, 8)] : 'Unknown'}',\n              );\n              touch(_lockFilePath, create: true);\n            }\n          },\n        );\n      } else {\n        verbose(() => 'existing lock file exist so waiting');\n      }\n\n      /// sleep for 100ms and then we will try again.\n      await Future.delayed(const Duration(milliseconds: 100), () {});\n      if (finalwaiting != null) {\n        // only print waiting message once.\n        finalwaiting = null;\n      }\n\n      waitCount--;\n    }\n\n    if (!taken) {\n      if (waitCount == 0) {\n        throw LockException(\n          'NamedLock timed out on $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      } else {\n        throw LockException(\n          'Unable to lock $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      }\n    }\n\n    return taken;\n  }\n\n  /// Check if there is a valid lock file and if so\n  /// if it has a live owner.\n  bool get _validLockFileExists {\n    // check for other lock files\n    final locks = find(\n      '*.$name',\n      workingDirectory: _lockPath,\n      includeHidden: true,\n      recursive: false,\n    ).toList();\n\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        continue;\n      }\n\n      if (_isOwnerLive(lockFileParts.pid)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _isSelf(int lockPid, int lockIsolateId) =>\n      lockIsolateId == isolateID && lockPid == pid;\n\n  int _clearStaleLocks(List<String> locks, int lockFiles) {\n    var lockFiles0 = lockFiles;\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        // ignore our own lock.\n        lockFiles0--;\n        continue;\n      }\n\n      if (!_isOwnerLive(lockFileParts.pid)) {\n        // If the foreign lock file was left orphaned\n        // then we delete it.\n        if (exists(lock)) {\n          verbose(() => red('Clearing old lock file: $lock'));\n          delete(lock);\n        }\n        lockFiles0--;\n      }\n    }\n    return lockFiles0;\n  }\n\n  bool _isOwnerLive(int lockOwnerPid) =>\n      ProcessHelper().isRunning(lockOwnerPid);\n\n  /// Call [fn] with a hard lock held.\n  Future<void> _withHardLock({\n    required Future<void> Function() fn,\n  }) async {\n    ServerSocket? socket;\n\n    try {\n      verbose(() => 'attempt bindSocket');\n      // ignore: discarded_futures\n      socket = await _bindSocket();\n      if (socket != null) {\n        verbose(() => blue('''\nHardlock taken for $name in ${Service.getIsolateId(Isolate.current)}'''));\n        await fn();\n      }\n    } finally {\n      if (socket != null) {\n        await socket.close();\n        verbose(() => blue('''\nHardlock released  for $name in ${Service.getIsolateId(Isolate.current)}'''));\n      }\n    }\n  }\n\n  Future<ServerSocket?> _bindSocket() async {\n    ServerSocket? socket;\n    try {\n      socket = await ServerSocket.bind(\n        '127.0.0.1',\n        port,\n      );\n    } on SocketException catch (e) {\n      /// no op. We expect this if the hardlock is already held.\n      verbose(e.toString);\n    }\n    return socket;\n  }"}
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:33:29.050349 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:33:29.050349
[ReorderMembersFix] 2025-09-27T13:33:30.292803 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/named_lock.dart:
[ReorderMembersFix] 2025-09-27T13:33:30.292803 ConflictingEditException: {"offset":12540,"length":72,"replacement":"  int pid;\n\n  int isolateId;\n\n  _LockFileParts(this.pid, this.isolateId);"} conflicts with {"offset":12540,"length":72,"replacement":"  int pid;\n\n  int isolateId;\n\n  _LockFileParts(this.pid, this.isolateId);"}
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:33:30.292803 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:33:30.292803
[ReorderMembersFix] 2025-09-27T13:33:30.325207 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/named_lock.dart:
[ReorderMembersFix] 2025-09-27T13:33:30.325207 ConflictingEditException: {"offset":1548,"length":10965,"replacement":"  /// The tcp socket  port we use to implement\n  /// a hard lock. A port can only be opened once\n  /// so its the perfect way to create a lock that works\n  /// across processes and isolates.\n  final port = 9003;\n\n  late String _lockPath;\n\n  /// The name of the lock.\n  final String name;\n\n  final String _description;\n\n  /// We use this to allow a lock to be-reentrant within an isolate.\n  /// A non-zero value means we have the lock.\n  /// We maintain a lock count per\n  /// lock suffix to allow each suffix lock to be re-entrant.\n  static final Map<String, int> _lockCounts = {};\n\n  /// The duration to wait for a lock before timing out.\n  final Duration _timeout;\n\n  /// [lockPath] is the path of the directory used\n  /// to store the lock file.\n  /// If no lockPath is given then [Directory.systemTemp]/dcli/locks is used\n  /// to store locks.\n  /// All code that shares the lock MUST use the\n  /// same [lockPath]. It is recommended that you\n  /// pass an absolute path to ensure that the\n  /// same path is used.\n  /// The [name] is used as the suffix of the lockfile.\n  /// The suffix allows multiple locks to share a single\n  /// lockPath.\n  /// The [description], if passed, is used in error messages\n  /// to describe the lock.\n  /// The [timeout] defines how long we will wait for\n  /// a lock to become available. The default [timeout] is\n  /// infinite (null).\n  ///\n  /// ```dart\n  /// NamedLock(name: 'update-catalog').withLock(() {\n  ///   if (!exists('catalog'))\n  ///     createDir('catalog');\n  ///   updateCatalog();\n  /// });\n  /// ```\n  ///\n  NamedLock({\n    required this.name,\n    String? lockPath,\n    String description = '',\n    Duration timeout = const Duration(seconds: 30),\n  })  : _timeout = timeout,\n        _description = description {\n    _lockPath =\n        lockPath ?? join(rootPath, Directory.systemTemp.path, 'dcli', 'locks');\n  }\n\n  @Deprecated('Used withLockAsync')\n  Future<void> withLock(\n    void Function() fn, {\n    String? waiting,\n  }) =>\n      throw UnsupportedError('Use withLockAsync');\n\n  /// creates a lock file and then calls [fn]\n  /// once [fn] returns the lock is released.\n  /// If [waiting] is passed it will be used to write\n  /// a log message to the console.\n  ///\n  /// Throws a [DCliException] if the NamedLock times out.\n  Future<void> withLockAsync(\n    Future<void> Function() fn, {\n    String? waiting,\n  }) async {\n    var lockHeld = false;\n    try {\n      verbose(() => 'lockcount = $_lockCountForName');\n\n      _createLockPath();\n\n      if (_lockCountForName > 0 || (await _takeLock(waiting))) {\n        lockHeld = true;\n        incLockCount;\n\n        await fn();\n      }\n    } finally {\n      if (lockHeld) {\n        await _releaseLock();\n      }\n      // just in case an async exception can be thrown\n      // I'm uncertain if this is a reality.\n      lockHeld = false;\n    }\n  }\n\n  void _createLockPath() {\n    if (!exists(_lockPath)) {\n      try {\n        createDir(_lockPath, recursive: true);\n      } on CreateDirException catch (_) {\n        /// we can get a race condition on the\n        /// create so just ignore it because\n        /// if the path already exists our job\n        /// is down.\n      }\n    }\n  }\n\n  Future<void> _releaseLock() async {\n    if (_lockCountForName > 0) {\n      decLockCount;\n\n      /// decLockCount changes the value of _locakCountForName\n      /// but the static analyser can't see this.\n      // ignore: invariant_booleans\n      if (_lockCountForName == 0) {\n        verbose(() => 'Releasing lock: $_lockFilePath');\n\n        await _withHardLock(fn: () async => delete(_lockFilePath));\n\n        verbose(() => 'Releasing lock: $_lockFilePath');\n      }\n    }\n  }\n\n  int get _lockCountForName {\n    var lockCount = _lockCounts[name];\n    return lockCount ??= 0;\n  }\n\n  /// increments the lock count and returns\n  /// the new lock count.\n  int get incLockCount {\n    var lockCount = _lockCountForName;\n    lockCount++;\n    _lockCounts[name] = lockCount;\n    verbose(() => 'Incremented lock: $lockCount');\n    return lockCount;\n  }\n\n  /// decrements the lock count and returns\n  /// the new lock count.\n  int get decLockCount {\n    var lockCount = _lockCountForName;\n    lockCount--;\n    _lockCounts[name] = lockCount;\n\n    verbose(() => 'Decremented lock: $_lockCountForName');\n    return lockCount;\n  }\n\n  String get _lockFilePath {\n    // lock file is in the directory above the project\n    // as during preparing we delete the project directory.\n\n    final isolate = isolateID;\n\n    return join(_lockPath, '.$pid.$isolate.$name');\n  }\n\n  _LockFileParts? _lockFileParts(String lockfilePath) {\n    final parts = basename(lockfilePath).split('.');\n    // it can't actually be one of our lock files\n    if (parts.length < 3) {\n      return null;\n    }\n\n    final pid = int.tryParse(parts[1]) ?? 0;\n    final isolateId = int.tryParse(parts[2]) ?? 0;\n\n    return _LockFileParts(pid, isolateId);\n  }\n\n  /// Attempts to take a project lock.\n  /// We wait for upto 30 seconds for an existing lock to\n  /// be released and then give up.\n  ///\n  /// We create the lock file in the virtual project directory\n  /// in the form:\n  /// <pid>.warmup.lock\n  ///\n  /// If we find an existing lock file we check if the process\n  /// that owns it is still running. If it isn't we\n  /// take a lock and delete the orphaned lock.\n  Future<bool> _takeLock(String? waiting) async {\n    var taken = false;\n    verbose(() => '_takeLock called');\n\n    var finalwaiting = waiting;\n\n    // wait for the lock to release or the timeout to expire\n    var waitCount = 1;\n\n    // we will be retrying every 100 ms.\n    waitCount = _timeout.inMilliseconds ~/ 100;\n    // ensure at least one retry\n    if (waitCount == 0) {\n      waitCount = 1;\n    }\n\n    /// If a valid lock file exists we don't even try to take\n    /// a hard lock.\n    /// This is to avoid a pseudp race condition under heavy load\n    /// where the lock owner can't get the hardlock as\n    /// all of the contenders constantly have it locked.\n    while (!taken && waitCount > 0) {\n      if (!_validLockFileExists) {\n        verbose(() => 'entering withHardLock waitCount: $waitCount');\n\n        /// Take a hard lock and attempt to create a lock file.\n        await _withHardLock(\n          fn: () async {\n            // check for a lock files again as one may have\n            // been created between checking for their existance\n            // and the hard lock been taken.\n            final locks = find(\n              '*.$name',\n              workingDirectory: _lockPath,\n              includeHidden: true,\n              recursive: false,\n            ).toList();\n            verbose(() => red('found lock files $locks'));\n\n            var lockFiles = locks.length;\n\n            if (lockFiles == 0) {\n              // no other lock exists so we have taken a lock.\n              taken = true;\n            } else {\n              // we have found another lock file so check if it is held\n              // be a running process\n              lockFiles = _clearStaleLocks(locks, lockFiles);\n              if (lockFiles == 0) {\n                taken = true;\n              }\n            }\n\n            if (taken) {\n              Settings().verbose(\n                'Taking lock ${basename(_lockFilePath)} for $isolateID',\n              );\n\n              verbose(\n                () => 'Lock Source: '\n                    // ignore: lines_longer_than_80_chars\n                    '${Trace.current().frames.length > 1 ? Trace.current().frames[min(Trace.current().frames.length - 1, 8)] : 'Unknown'}',\n              );\n              touch(_lockFilePath, create: true);\n            }\n          },\n        );\n      } else {\n        verbose(() => 'existing lock file exist so waiting');\n      }\n\n      /// sleep for 100ms and then we will try again.\n      await Future.delayed(const Duration(milliseconds: 100), () {});\n      if (finalwaiting != null) {\n        // only print waiting message once.\n        finalwaiting = null;\n      }\n\n      waitCount--;\n    }\n\n    if (!taken) {\n      if (waitCount == 0) {\n        throw LockException(\n          'NamedLock timed out on $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      } else {\n        throw LockException(\n          'Unable to lock $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      }\n    }\n\n    return taken;\n  }\n\n  /// Check if there is a valid lock file and if so\n  /// if it has a live owner.\n  bool get _validLockFileExists {\n    // check for other lock files\n    final locks = find(\n      '*.$name',\n      workingDirectory: _lockPath,\n      includeHidden: true,\n      recursive: false,\n    ).toList();\n\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        continue;\n      }\n\n      if (_isOwnerLive(lockFileParts.pid)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _isSelf(int lockPid, int lockIsolateId) =>\n      lockIsolateId == isolateID && lockPid == pid;\n\n  int _clearStaleLocks(List<String> locks, int lockFiles) {\n    var lockFiles0 = lockFiles;\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        // ignore our own lock.\n        lockFiles0--;\n        continue;\n      }\n\n      if (!_isOwnerLive(lockFileParts.pid)) {\n        // If the foreign lock file was left orphaned\n        // then we delete it.\n        if (exists(lock)) {\n          verbose(() => red('Clearing old lock file: $lock'));\n          delete(lock);\n        }\n        lockFiles0--;\n      }\n    }\n    return lockFiles0;\n  }\n\n  bool _isOwnerLive(int lockOwnerPid) =>\n      ProcessHelper().isRunning(lockOwnerPid);\n\n  /// Call [fn] with a hard lock held.\n  Future<void> _withHardLock({\n    required Future<void> Function() fn,\n  }) async {\n    ServerSocket? socket;\n\n    try {\n      verbose(() => 'attempt bindSocket');\n      // ignore: discarded_futures\n      socket = await _bindSocket();\n      if (socket != null) {\n        verbose(() => blue('''\nHardlock taken for $name in ${Service.getIsolateId(Isolate.current)}'''));\n        await fn();\n      }\n    } finally {\n      if (socket != null) {\n        await socket.close();\n        verbose(() => blue('''\nHardlock released  for $name in ${Service.getIsolateId(Isolate.current)}'''));\n      }\n    }\n  }\n\n  Future<ServerSocket?> _bindSocket() async {\n    ServerSocket? socket;\n    try {\n      socket = await ServerSocket.bind(\n        '127.0.0.1',\n        port,\n      );\n    } on SocketException catch (e) {\n      /// no op. We expect this if the hardlock is already held.\n      verbose(e.toString);\n    }\n    return socket;\n  }"} conflicts with {"offset":1548,"length":10965,"replacement":"  /// The tcp socket  port we use to implement\n  /// a hard lock. A port can only be opened once\n  /// so its the perfect way to create a lock that works\n  /// across processes and isolates.\n  final port = 9003;\n\n  late String _lockPath;\n\n  /// The name of the lock.\n  final String name;\n\n  final String _description;\n\n  /// We use this to allow a lock to be-reentrant within an isolate.\n  /// A non-zero value means we have the lock.\n  /// We maintain a lock count per\n  /// lock suffix to allow each suffix lock to be re-entrant.\n  static final Map<String, int> _lockCounts = {};\n\n  /// The duration to wait for a lock before timing out.\n  final Duration _timeout;\n\n  /// [lockPath] is the path of the directory used\n  /// to store the lock file.\n  /// If no lockPath is given then [Directory.systemTemp]/dcli/locks is used\n  /// to store locks.\n  /// All code that shares the lock MUST use the\n  /// same [lockPath]. It is recommended that you\n  /// pass an absolute path to ensure that the\n  /// same path is used.\n  /// The [name] is used as the suffix of the lockfile.\n  /// The suffix allows multiple locks to share a single\n  /// lockPath.\n  /// The [description], if passed, is used in error messages\n  /// to describe the lock.\n  /// The [timeout] defines how long we will wait for\n  /// a lock to become available. The default [timeout] is\n  /// infinite (null).\n  ///\n  /// ```dart\n  /// NamedLock(name: 'update-catalog').withLock(() {\n  ///   if (!exists('catalog'))\n  ///     createDir('catalog');\n  ///   updateCatalog();\n  /// });\n  /// ```\n  ///\n  NamedLock({\n    required this.name,\n    String? lockPath,\n    String description = '',\n    Duration timeout = const Duration(seconds: 30),\n  })  : _timeout = timeout,\n        _description = description {\n    _lockPath =\n        lockPath ?? join(rootPath, Directory.systemTemp.path, 'dcli', 'locks');\n  }\n\n  @Deprecated('Used withLockAsync')\n  Future<void> withLock(\n    void Function() fn, {\n    String? waiting,\n  }) =>\n      throw UnsupportedError('Use withLockAsync');\n\n  /// creates a lock file and then calls [fn]\n  /// once [fn] returns the lock is released.\n  /// If [waiting] is passed it will be used to write\n  /// a log message to the console.\n  ///\n  /// Throws a [DCliException] if the NamedLock times out.\n  Future<void> withLockAsync(\n    Future<void> Function() fn, {\n    String? waiting,\n  }) async {\n    var lockHeld = false;\n    try {\n      verbose(() => 'lockcount = $_lockCountForName');\n\n      _createLockPath();\n\n      if (_lockCountForName > 0 || (await _takeLock(waiting))) {\n        lockHeld = true;\n        incLockCount;\n\n        await fn();\n      }\n    } finally {\n      if (lockHeld) {\n        await _releaseLock();\n      }\n      // just in case an async exception can be thrown\n      // I'm uncertain if this is a reality.\n      lockHeld = false;\n    }\n  }\n\n  void _createLockPath() {\n    if (!exists(_lockPath)) {\n      try {\n        createDir(_lockPath, recursive: true);\n      } on CreateDirException catch (_) {\n        /// we can get a race condition on the\n        /// create so just ignore it because\n        /// if the path already exists our job\n        /// is down.\n      }\n    }\n  }\n\n  Future<void> _releaseLock() async {\n    if (_lockCountForName > 0) {\n      decLockCount;\n\n      /// decLockCount changes the value of _locakCountForName\n      /// but the static analyser can't see this.\n      // ignore: invariant_booleans\n      if (_lockCountForName == 0) {\n        verbose(() => 'Releasing lock: $_lockFilePath');\n\n        await _withHardLock(fn: () async => delete(_lockFilePath));\n\n        verbose(() => 'Releasing lock: $_lockFilePath');\n      }\n    }\n  }\n\n  int get _lockCountForName {\n    var lockCount = _lockCounts[name];\n    return lockCount ??= 0;\n  }\n\n  /// increments the lock count and returns\n  /// the new lock count.\n  int get incLockCount {\n    var lockCount = _lockCountForName;\n    lockCount++;\n    _lockCounts[name] = lockCount;\n    verbose(() => 'Incremented lock: $lockCount');\n    return lockCount;\n  }\n\n  /// decrements the lock count and returns\n  /// the new lock count.\n  int get decLockCount {\n    var lockCount = _lockCountForName;\n    lockCount--;\n    _lockCounts[name] = lockCount;\n\n    verbose(() => 'Decremented lock: $_lockCountForName');\n    return lockCount;\n  }\n\n  String get _lockFilePath {\n    // lock file is in the directory above the project\n    // as during preparing we delete the project directory.\n\n    final isolate = isolateID;\n\n    return join(_lockPath, '.$pid.$isolate.$name');\n  }\n\n  _LockFileParts? _lockFileParts(String lockfilePath) {\n    final parts = basename(lockfilePath).split('.');\n    // it can't actually be one of our lock files\n    if (parts.length < 3) {\n      return null;\n    }\n\n    final pid = int.tryParse(parts[1]) ?? 0;\n    final isolateId = int.tryParse(parts[2]) ?? 0;\n\n    return _LockFileParts(pid, isolateId);\n  }\n\n  /// Attempts to take a project lock.\n  /// We wait for upto 30 seconds for an existing lock to\n  /// be released and then give up.\n  ///\n  /// We create the lock file in the virtual project directory\n  /// in the form:\n  /// <pid>.warmup.lock\n  ///\n  /// If we find an existing lock file we check if the process\n  /// that owns it is still running. If it isn't we\n  /// take a lock and delete the orphaned lock.\n  Future<bool> _takeLock(String? waiting) async {\n    var taken = false;\n    verbose(() => '_takeLock called');\n\n    var finalwaiting = waiting;\n\n    // wait for the lock to release or the timeout to expire\n    var waitCount = 1;\n\n    // we will be retrying every 100 ms.\n    waitCount = _timeout.inMilliseconds ~/ 100;\n    // ensure at least one retry\n    if (waitCount == 0) {\n      waitCount = 1;\n    }\n\n    /// If a valid lock file exists we don't even try to take\n    /// a hard lock.\n    /// This is to avoid a pseudp race condition under heavy load\n    /// where the lock owner can't get the hardlock as\n    /// all of the contenders constantly have it locked.\n    while (!taken && waitCount > 0) {\n      if (!_validLockFileExists) {\n        verbose(() => 'entering withHardLock waitCount: $waitCount');\n\n        /// Take a hard lock and attempt to create a lock file.\n        await _withHardLock(\n          fn: () async {\n            // check for a lock files again as one may have\n            // been created between checking for their existance\n            // and the hard lock been taken.\n            final locks = find(\n              '*.$name',\n              workingDirectory: _lockPath,\n              includeHidden: true,\n              recursive: false,\n            ).toList();\n            verbose(() => red('found lock files $locks'));\n\n            var lockFiles = locks.length;\n\n            if (lockFiles == 0) {\n              // no other lock exists so we have taken a lock.\n              taken = true;\n            } else {\n              // we have found another lock file so check if it is held\n              // be a running process\n              lockFiles = _clearStaleLocks(locks, lockFiles);\n              if (lockFiles == 0) {\n                taken = true;\n              }\n            }\n\n            if (taken) {\n              Settings().verbose(\n                'Taking lock ${basename(_lockFilePath)} for $isolateID',\n              );\n\n              verbose(\n                () => 'Lock Source: '\n                    // ignore: lines_longer_than_80_chars\n                    '${Trace.current().frames.length > 1 ? Trace.current().frames[min(Trace.current().frames.length - 1, 8)] : 'Unknown'}',\n              );\n              touch(_lockFilePath, create: true);\n            }\n          },\n        );\n      } else {\n        verbose(() => 'existing lock file exist so waiting');\n      }\n\n      /// sleep for 100ms and then we will try again.\n      await Future.delayed(const Duration(milliseconds: 100), () {});\n      if (finalwaiting != null) {\n        // only print waiting message once.\n        finalwaiting = null;\n      }\n\n      waitCount--;\n    }\n\n    if (!taken) {\n      if (waitCount == 0) {\n        throw LockException(\n          'NamedLock timed out on $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      } else {\n        throw LockException(\n          'Unable to lock $_description '\n          '${truepath(_lockPath)} as it is currently held',\n        );\n      }\n    }\n\n    return taken;\n  }\n\n  /// Check if there is a valid lock file and if so\n  /// if it has a live owner.\n  bool get _validLockFileExists {\n    // check for other lock files\n    final locks = find(\n      '*.$name',\n      workingDirectory: _lockPath,\n      includeHidden: true,\n      recursive: false,\n    ).toList();\n\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        continue;\n      }\n\n      if (_isOwnerLive(lockFileParts.pid)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _isSelf(int lockPid, int lockIsolateId) =>\n      lockIsolateId == isolateID && lockPid == pid;\n\n  int _clearStaleLocks(List<String> locks, int lockFiles) {\n    var lockFiles0 = lockFiles;\n    for (final lock in locks) {\n      final lockFileParts = _lockFileParts(lock);\n      if (lockFileParts == null) {\n        /// isn't a valid lock file so ignore.\n        continue;\n      }\n      if (_isSelf(lockFileParts.pid, lockFileParts.isolateId)) {\n        // ignore our own lock.\n        lockFiles0--;\n        continue;\n      }\n\n      if (!_isOwnerLive(lockFileParts.pid)) {\n        // If the foreign lock file was left orphaned\n        // then we delete it.\n        if (exists(lock)) {\n          verbose(() => red('Clearing old lock file: $lock'));\n          delete(lock);\n        }\n        lockFiles0--;\n      }\n    }\n    return lockFiles0;\n  }\n\n  bool _isOwnerLive(int lockOwnerPid) =>\n      ProcessHelper().isRunning(lockOwnerPid);\n\n  /// Call [fn] with a hard lock held.\n  Future<void> _withHardLock({\n    required Future<void> Function() fn,\n  }) async {\n    ServerSocket? socket;\n\n    try {\n      verbose(() => 'attempt bindSocket');\n      // ignore: discarded_futures\n      socket = await _bindSocket();\n      if (socket != null) {\n        verbose(() => blue('''\nHardlock taken for $name in ${Service.getIsolateId(Isolate.current)}'''));\n        await fn();\n      }\n    } finally {\n      if (socket != null) {\n        await socket.close();\n        verbose(() => blue('''\nHardlock released  for $name in ${Service.getIsolateId(Isolate.current)}'''));\n      }\n    }\n  }\n\n  Future<ServerSocket?> _bindSocket() async {\n    ServerSocket? socket;\n    try {\n      socket = await ServerSocket.bind(\n        '127.0.0.1',\n        port,\n      );\n    } on SocketException catch (e) {\n      /// no op. We expect this if the hardlock is already held.\n      verbose(e.toString);\n    }\n    return socket;\n  }"}
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:33:30.325207 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:33:30.325207
[ReorderMembersFix] 2025-09-27T13:33:31.911968 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/named_lock.dart:
[ReorderMembersFix] 2025-09-27T13:33:31.911968 InconsistentAnalysisException: Requested result might be inconsistent with previously returned results
[ReorderMembersFix] 2025-09-27T13:33:31.911968
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #0      AnalysisSessionImpl.checkConsistency (package:analyzer/src/dart/analysis/session.dart:59:7)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #1      AnalysisSessionImpl.getResolvedUnit (package:analyzer/src/dart/analysis/session.dart:160:5)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #2      ChangeBuilderImpl._createDartFileEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:321:33)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #3      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:154:23)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #4      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #5      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #6      _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #7      _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #8      _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #9      _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #10     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #12     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #13     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #14     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #15     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:33:31.911968 #16     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:33:31.911968
[ReorderMembersFix] 2025-09-27T13:34:11.344573 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.344573 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.344573 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.344573
[ReorderMembersFix] 2025-09-27T13:34:11.344908 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.344908 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.344908 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.344908
[ReorderMembersFix] 2025-09-27T13:34:11.345308 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.345308 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.345308 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.345308
[ReorderMembersFix] 2025-09-27T13:34:11.345563 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.345563 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.345563 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.345563
[ReorderMembersFix] 2025-09-27T13:34:11.345821 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.345821 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.345821 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.345821
[ReorderMembersFix] 2025-09-27T13:34:11.346224 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.346224 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.346224 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.346224
[ReorderMembersFix] 2025-09-27T13:34:11.845917 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.845917 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.845917 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.845917
[ReorderMembersFix] 2025-09-27T13:34:11.846178 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.846178 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.846178 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.846178
[ReorderMembersFix] 2025-09-27T13:34:11.846533 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.846533 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.846533 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.846533
[ReorderMembersFix] 2025-09-27T13:34:11.846738 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.846738 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.846738 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.846738
[ReorderMembersFix] 2025-09-27T13:34:11.847158 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.847158 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.847158 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.847158
[ReorderMembersFix] 2025-09-27T13:34:11.847652 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:11.847652 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:11.847652 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:11.847652
[ReorderMembersFix] 2025-09-27T13:34:12.771190 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.771190 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.771190 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.771190
[ReorderMembersFix] 2025-09-27T13:34:12.773909 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.773909 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.773909 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.773909
[ReorderMembersFix] 2025-09-27T13:34:12.774335 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.774335 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.774335 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.774335
[ReorderMembersFix] 2025-09-27T13:34:12.780735 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.780735 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.780735 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.780735
[ReorderMembersFix] 2025-09-27T13:34:12.781025 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.781025 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.781025 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.781025
[ReorderMembersFix] 2025-09-27T13:34:12.781405 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.781405 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.781405 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.781405
[ReorderMembersFix] 2025-09-27T13:34:12.912716 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.912716 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.912716 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.912716
[ReorderMembersFix] 2025-09-27T13:34:12.914778 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.914778 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.914778 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.914778
[ReorderMembersFix] 2025-09-27T13:34:12.915117 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.915117 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.915117 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.915117
[ReorderMembersFix] 2025-09-27T13:34:12.923562 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.923562 ConflictingEditException: {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"} conflicts with {"offset":10702,"length":2618,"replacement":"  bool? wasQuoted;\n\n  late String arg;\n\n  _QArg(String iarg) {\n    wasQuoted = false;\n    arg = iarg.trim();\n\n    if (arg.startsWith('\"') && arg.endsWith('\"')) {\n      wasQuoted = true;\n    }\n    if (arg.startsWith(\"'\") && arg.endsWith(\"'\")) {\n      wasQuoted = true;\n    }\n\n    if (wasQuoted!) {\n      arg = arg.substring(1, arg.length - 1);\n    }\n  }\n\n  _QArg.fromParsed(this.arg, {required this.wasQuoted});\n\n  /// We only do glob expansion if the arg contains at least one of\n  /// *, [, ?\n  ///\n  /// Note: under Windows powershell does perform glob expansion so we need\n  /// to supress glob expansion.\n  bool get needsExpansion =>\n      !Settings().isWindows &&\n      (arg.contains('*') || arg.contains('[') || arg.contains('?'));\n\n  static List<_QArg> translate(List<String?> args) {\n    final qargs = <_QArg>[];\n    for (final arg in args) {\n      final qarg = _QArg(arg!);\n      qargs.add(qarg);\n    }\n    return qargs;\n  }\n\n  Iterable<String> expandGlob(String? workingDirectory) {\n    final expanded = <String>[];\n    if (arg.contains('~')) {\n      arg = arg.replaceAll('~', HOME);\n    }\n    if (needsExpansion) {\n      final files = _expandGlob(workingDirectory!);\n\n      /// translate the files to relative paths if appropriate.\n      for (var file in files) {\n        if (isWithin(workingDirectory, file!)) {\n          file = relative(file, from: workingDirectory);\n        }\n        expanded.add(file);\n      }\n    } else {\n      expanded.add(arg);\n    }\n    return expanded;\n  }\n\n  Iterable<String?> _expandGlob(String workingDirectory) {\n    final glob = Glob(arg);\n\n    /// we are interested in the last part of the arg.\n    /// e.g. of  path/.* we want the .*\n    final includeHidden = basename(arg).startsWith('.');\n\n    var files = <FileSystemEntity>[];\n\n    files = glob.listFileSystemSync(\n      const LocalFileSystem(),\n      root: workingDirectory,\n    );\n\n    if (files.isEmpty) {\n      // if no matches the bash spec says return\n      // the original arg.\n      return [arg];\n    } else {\n      return files\n          .where((f) => includeHidden || !isHidden(workingDirectory, f))\n          .map((f) => f.path);\n    }\n  }\n\n  // check if the entity is a hidden file (.xxx) or\n  // if lives in a hidden directory.\n  bool isHidden(String workingDirectory, FileSystemEntity entity) {\n    final relativePath =\n        truepath(relative(entity.path, from: workingDirectory));\n\n    final parts = relativePath.split(separator);\n\n    var isHidden = false;\n    for (final part in parts) {\n      if (part.startsWith('.')) {\n        isHidden = true;\n        break;\n      }\n    }\n    return isHidden;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.923562 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.923562
[ReorderMembersFix] 2025-09-27T13:34:12.923794 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.923794 ConflictingEditException: {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"} conflicts with {"offset":508,"length":8444,"replacement":"  /// The commdand that we parsed from the command line\n  late String cmd;\n\n  /// The args that we parsed from the command line\n  var args = <String>[];\n\n  /// The escape character use for command lines\n  static const escapeCharacter = '^';\n\n  ///\n  ParsedCliCommand(String command, String? workingDirectory) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        command,\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n    final qargs = _parse(command);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// when passed individual args we respect any quotes that are\n  /// passed as they have been put there with intent.\n  ParsedCliCommand.fromParsed(\n    this.cmd,\n    List<String> rawArgs,\n    String? workingDirectory,\n  ) {\n    workingDirectory ??= pwd;\n    if (!exists(workingDirectory)) {\n      throw RunException(\n        '$cmd ${rawArgs.join(' ')}',\n        -1,\n        \"The workingDirectory ${truepath(workingDirectory)} doesn't exists.\",\n      );\n    }\n\n    final qargs = _QArg.translate(rawArgs);\n    args = _expandGlobs(qargs, workingDirectory);\n  }\n\n  /// parses the given command breaking them done into words\n  List<_QArg> _parse(String commandLine) {\n    final parts = <_QArg>[];\n\n    /// The stack helps us deal with nest quotes.\n    final stateStack = StackList<_ParseFrame>();\n    var currentState = _ParseFrame(_ParseState.searching, -1);\n\n    /// The current word we are adding characters to.\n    var currentWord = '';\n\n    for (var i = 0; i < commandLine.length; i++) {\n      final char = commandLine[i];\n\n      switch (currentState.state) {\n        case _ParseState.searching:\n          // ignore leading space.\n          if (char == ' ') {\n            break;\n          }\n\n          /// single or double quote puts us into inQuote mode\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n            break;\n          }\n\n          /// ^ is our escape character.\n          /// Put us into escape mode to escape the next character.\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// a normal character so must be the start of a word.\n          stateStack.push(currentState);\n          currentState = _ParseFrame(_ParseState.inWord, i);\n\n          currentWord += char;\n\n        /// if we are in escape mode.\n        case _ParseState.escaped:\n          currentState = stateStack.pop();\n\n          /// if we were in searching mode then\n          /// this character indicates the start of a word.\n          if (currentState.state == _ParseState.searching) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.inWord, i);\n          }\n          currentWord += char;\n\n        case _ParseState.inWord:\n\n          /// A space indicates the end of a word.\n          /// If it is inside a quote then we would be inQuote mode.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == ' ') {\n            // a non-escape/non-quoted space means a new part.\n            currentState = stateStack.pop();\n            if (currentState.state == _ParseState.searching) {\n              parts.add(_QArg(currentWord));\n              currentWord = '';\n            } else {\n              currentWord += char;\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          /// quoted text in a word is treated as\n          /// part of the same word but we still\n          /// strip the quotes to match bash\n          if (char == '\"' || char == \"'\") {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          } else {\n            currentWord += char;\n          }\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        ///\n        /// scenarios\n\n        // \"hi\"\n        // We are in a quote, parent is searching so strip quote\n        //\n        // hi=\"one\"\n        // We are in a quote, parent is word so keep the quote\n        //\n        // \"abc 'one'\"\n        // If nested always keep the quote\n        // If last quote if parent searching strip quote.\n        //\n        // hi=\"abc 'one'\"\n        // If parent is quote then keep quote\n        // if parent is word then keep quote\n\n        case _ParseState.inQuote:\n          if (char == currentState.matchingQuote) {\n            currentState = stateStack.pop();\n            final state = currentState.state;\n\n            // If we were searching or inWord then this will end the word\n            if (state == _ParseState.searching || state == _ParseState.inWord) {\n              /// If we are in a word then the quote also ends the word.\n              if (state == _ParseState.inWord) {\n                currentState = stateStack.pop();\n              }\n\n              parts.add(_QArg.fromParsed(currentWord, wasQuoted: true));\n              currentWord = '';\n            }\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          // we just hit a nested quote\n          if (char == \"'\" || char == '\"') {\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n\n          currentWord += char;\n\n        /// we are in a quote so just suck in\n        /// characters until we see a matching quote.\n        case _ParseState.nestedQuote:\n\n          // ignore: invariant_booleans\n          if (char == currentState.matchingQuote) {\n            // We have a matching closing quote\n            currentState = stateStack.pop();\n            currentWord += char;\n            break;\n          }\n\n          /// The escape character so put us into\n          /// escape mode so the escaped character will\n          /// be treated as a normal char.\n          // added ignore as lint has a bug for conditional in a\n          // switch statement #27\n          // ignore: invariant_booleans\n          if (char == escapeCharacter) {\n            stateStack.push(currentState);\n            currentState = _ParseFrame(_ParseState.escaped, i);\n            break;\n          }\n\n          if (char == \"'\" || char == '\"') {\n            // we just hit a nested quote\n            stateStack.push(currentState);\n            currentState = _ParseFrame.forQuote(stateStack, i, char);\n          }\n          currentWord += char;\n      }\n    }\n\n    if (currentWord.isNotEmpty) {\n      parts.add(_QArg.fromParsed(currentWord, wasQuoted: false));\n    }\n\n    if (parts.isEmpty) {\n      throw InvalidArgumentException('The string did not contain a command.');\n    }\n    cmd = parts[0].arg;\n\n    if (parts.length > 1) {\n      return parts.sublist(1);\n    } else {\n      return <_QArg>[];\n    }\n  }\n\n  ///\n  /// to emulate bash and support what most cli apps support we expand\n  /// globs.\n  /// Any argument that contains *, ? or [ will\n  /// be expanded.\n  /// See https://github.com/onepub-dev/dcli/issues/56\n  ///\n  List<String> _expandGlobs(List<_QArg> qargs, String? workingDirectory) {\n    final expanded = <String>[];\n\n    for (final qarg in qargs) {\n      if (qarg.wasQuoted!) {\n        expanded.add(qarg.arg);\n      } else {\n        expanded.addAll(qarg.expandGlob(workingDirectory));\n      }\n    }\n    return expanded;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.923794 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.923794
[ReorderMembersFix] 2025-09-27T13:34:12.924012 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/parse_cli_command.dart:
[ReorderMembersFix] 2025-09-27T13:34:12.924012 ConflictingEditException: {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"} conflicts with {"offset":9432,"length":1113,"replacement":"  /// The state held by this Frame.\n  _ParseState state;\n\n  /// If the state for this [_ParseFrame] is [_ParseState.inQuote]\n  /// then this holds the quote character that created the state.\n  String? matchingQuote;\n\n  /// The character offset from the start of the command line\n  /// that caused us to enter this state.\n  int offset;\n\n  /// Create a [_ParseFrame]\n  _ParseFrame(this.state, this.offset);\n\n  /// Create a [_ParseFrame] when we enter the [_ParseState.inQuote] state.\n  _ParseFrame.forQuote(\n      StackList<_ParseFrame> stack, this.offset, this.matchingQuote)\n      : state = isQuoteActive(stack)\n            ? _ParseState.nestedQuote\n            : _ParseState.inQuote;\n\n  @override\n  String toString() =>\n      '${EnumHelper().getName(state)} offset: $offset quote: $matchingQuote';\n\n  /// Returns true if a quote is already on the stack.\n  static bool isQuoteActive(StackList<_ParseFrame> stack) {\n    for (final frame in stack.asList()) {\n      if (frame.state == _ParseState.inQuote ||\n          frame.state == _ParseState.nestedQuote) {\n        return true;\n      }\n    }\n    return false;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:12.924012 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:12.924012
[ReorderMembersFix] 2025-09-27T13:34:36.778210 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:36.778210 ConflictingEditException: {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"} conflicts with {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"}
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:36.778210 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:36.778210
[ReorderMembersFix] 2025-09-27T13:34:36.778619 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:36.778619 ConflictingEditException: {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"} conflicts with {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:36.778619 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:36.778619
[ReorderMembersFix] 2025-09-27T13:34:36.778927 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:36.778927 ConflictingEditException: {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"} conflicts with {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"}
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:36.778927 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:36.778927
[ReorderMembersFix] 2025-09-27T13:34:36.779030 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:36.779030 ConflictingEditException: {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"} conflicts with {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"}
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:36.779030 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:36.779030
[ReorderMembersFix] 2025-09-27T13:34:36.779130 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:36.779130 ConflictingEditException: {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"} conflicts with {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:36.779130 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:36.779130
[ReorderMembersFix] 2025-09-27T13:34:36.779347 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:36.779347 ConflictingEditException: {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"} conflicts with {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"}
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:36.779347 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:36.779347
[ReorderMembersFix] 2025-09-27T13:34:37.263001 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.263001 ConflictingEditException: {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"} conflicts with {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"}
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263001 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.263001
[ReorderMembersFix] 2025-09-27T13:34:37.263234 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.263234 ConflictingEditException: {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"} conflicts with {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263234 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.263234
[ReorderMembersFix] 2025-09-27T13:34:37.263519 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.263519 ConflictingEditException: {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"} conflicts with {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"}
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263519 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.263519
[ReorderMembersFix] 2025-09-27T13:34:37.263669 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.263669 ConflictingEditException: {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"} conflicts with {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"}
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263669 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.263669
[ReorderMembersFix] 2025-09-27T13:34:37.263930 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.263930 ConflictingEditException: {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"} conflicts with {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.263930 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.263930
[ReorderMembersFix] 2025-09-27T13:34:37.264215 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.264215 ConflictingEditException: {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"} conflicts with {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"}
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.264215 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.264215
[ReorderMembersFix] 2025-09-27T13:34:37.839610 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.839610 ConflictingEditException: {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"} conflicts with {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"}
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.839610 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.839610
[ReorderMembersFix] 2025-09-27T13:34:37.841202 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.841202 ConflictingEditException: {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"} conflicts with {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.841202 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.841202
[ReorderMembersFix] 2025-09-27T13:34:37.841551 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.841551 ConflictingEditException: {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"} conflicts with {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"}
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.841551 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.841551
[ReorderMembersFix] 2025-09-27T13:34:37.845283 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.845283 ConflictingEditException: {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"} conflicts with {"offset":11193,"length":164,"replacement":"  String path;\n\n  int parentPid;\n\n  int processPid;\n\n  _WindowsParentProcess({\n    required this.path,\n    required this.parentPid,\n    required this.processPid,\n  });"}
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.845283 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.845283
[ReorderMembersFix] 2025-09-27T13:34:37.845446 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.845446 ConflictingEditException: {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"} conflicts with {"offset":531,"length":9166,"replacement":"  static final _self = ProcessHelper._internal();\n\n  ///\n  factory ProcessHelper() => _self;\n\n  ProcessHelper._internal();\n\n  /// returns the name of the process for the given pid.\n  String? getProcessName(int pid) {\n    if (Settings().isWindows) {\n      return getWindowsProcessName(pid);\n    } else {\n      return _getLinuxProcessName(pid);\n    }\n  }\n\n  /// Get the process name for the given pid\n  ///\n  /// Throws an RunException exception if the name can't\n  /// be obtained.\n  String? _getLinuxProcessName(int? lpid) {\n    String? line;\n    var processName = 'unknown';\n\n    try {\n      line = 'ps -q $lpid -o comm='.firstLine;\n      verbose(() => 'ps: $line');\n    } on RunException catch (e) {\n      /// the pid is no longer running\n      if (e.exitCode == 1) {\n        verbose(() => 'pid $lpid is no longer running');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n    }\n    if (line != null) {\n      processName = line.trim();\n    }\n\n    verbose(() => '_getLinuxProcessName $lpid $processName');\n\n    return line;\n  }\n\n  /// Get the PID of the parent\n  /// Returns -1 if a parent can't be obtained.\n  int getParentPID(int? childPid) {\n    if (Settings().isWindows) {\n      return _windowsGetParentPid(childPid);\n    } else {\n      return _linuxGetParentPID(childPid);\n    }\n  }\n\n  /// returns true if the given [pid] is still running.\n  /// Throws an [UnsupportedError] if the OS is not supported.\n  /// On Linux this means the 'ps' command isn't available.\n  bool isRunning(int? pid) {\n    if (Settings().isWindows) {\n      return _windowsIsrunning(pid);\n    } else {\n      return _linuxisRunning(pid);\n    }\n  }\n\n  /// Returns true a the process with the given [name]\n  /// is currently running.\n  ///\n  bool isProcessRunning(String name) {\n    for (final pd in getProcesses()) {\n      if (pd.name == name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /// returns the pid of the parent pid or -1 if the\n  /// child doesn't have a parent.\n  int _linuxGetParentPID(int? childPid) {\n    String? line;\n    try {\n      // ignore: flutter_style_todos\n      /// TODO(bsutton): find a way to get the parent of a given pid\n      /// not the current pid.\n      /// The following will work on SOME linux platforms.\n      /// https://gist.github.com/fclairamb/a16a4237c46440bdb172\n      if (isPosixSupported) {\n        line = '${getppid()}';\n      } else {\n        line = 'ps -p $childPid -o ppid='.firstLine;\n        verbose(() => 'ps: $line');\n      }\n    } on ProcessException {\n      // ps not supported on current OS\n      line = '-1';\n    }\n    return int.tryParse(line!.trim()) ?? -1;\n  }\n\n  /// returns the pid of the parent pid of -1 if the\n  /// child doesn't have a parent.\n  int _windowsGetParentPid(int? childPid) {\n    final parents = _windowsParentProcessList();\n\n    for (final parent in parents) {\n      if (parent.processPid == childPid) {\n        return parent.parentPid;\n      }\n    }\n    return -1;\n  }\n\n  List<_WindowsParentProcess> _windowsParentProcessList() {\n    final parents = <_WindowsParentProcess>[];\n\n    final processes =\n        'wmic process get processid,parentprocessid,executablepath'\n            .toList(skipLines: 1);\n\n    for (var process in processes) {\n      // verbose(() => 'wmic: $process');\n      process = process.trim();\n      process = process.replaceAll(RegExp(r'\\s+'), ' ');\n\n      final parts = process.split(' ');\n      if (parts.length < 3) {\n        // a lot of the lines have blank process ames\n        continue;\n      }\n\n      final r = parseWMICLine(process);\n\n      final parent = _WindowsParentProcess(\n        path: r.exe,\n        parentPid: r.parentPid,\n        processPid: r.processPid,\n      );\n      parents.add(parent);\n    }\n    return parents;\n  }\n\n  @visibleForTesting\n  static ({String exe, int parentPid, int processPid}) parseWMICLine(\n      String process) {\n    final parts = process.split(' ');\n    // we have to deal with files that contain spaces in their name.\n    final exe = parts.sublist(0, parts.length - 2).join(' ');\n    final parentPid = int.tryParse(parts[parts.length - 2]) ?? -1;\n    final processPid = int.tryParse(parts[parts.length - 1]) ?? -1;\n\n    return (exe: exe, parentPid: parentPid, processPid: processPid);\n  }\n\n  bool _windowsIsrunning(int? lpid) {\n    for (final details in getWindowsProcesses()) {\n      if (details.pid == lpid) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  bool _linuxisRunning(int? lpid) {\n    var isRunning = false;\n\n    /// https://stackoverflow.com/questions/9152979/check-if-process-exists-given-its-pid\n    // if (isPosixSupported) {\n    //   kill(0);\n    // }\n    final progress = 'ps -q $lpid -o comm='.start(nothrow: true);\n    final exitCode = progress.exitCode;\n    if (exitCode == 0 || exitCode == 1) {\n      isRunning = (progress.exitCode == 0);\n    } else {\n      throw UnsupportedError(\n          \"The 'ps' command is not supported on this platform\");\n    }\n\n    return isRunning;\n  }\n\n  /// Returns a list of running processes.\n  ///\n  /// Currently this is only supported on Windows and Linux.\n  List<ProcessDetails> getProcesses() {\n    if (core.Settings().isWindows) {\n      return getWindowsProcesses();\n    }\n\n    if (core.Settings().isLinux) {\n      return _getLinuxProcesses();\n    }\n\n    throw UnsupportedError('Not supported on ${Platform.operatingSystem}');\n  }\n\n  /// Returns the list of [ProcessDetails] with [name].\n  /// It is quite common for there to be multiple processes\n  /// with the same name running.\n  /// If there are no processes with the given [name] then\n  /// an empty list is returned.\n  /// Remember that a process may shutdown at any moment so\n  /// just because this method returns a process does not\n  /// mean that the process is still running.\n  List<ProcessDetails> getProcessesByName(String name) {\n    final processes = getProcesses();\n    final matching = <ProcessDetails>[];\n    for (final process in processes) {\n      if (process.name == name) {\n        matching.add(process);\n      }\n    }\n    return matching;\n  }\n\n  // ignore: unused_element\n  List<ProcessDetails> _getWindowsProcessesOld() {\n    final pids = <ProcessDetails>[];\n\n    // example:\n    // \"wininit.exe\",\"584\",\"Services\",\"0\",\"5,248 K\"\n    final tasks = 'tasklist /fo csv /nh'.toParagraph();\n\n    final lines = const CsvToListConverter(shouldParseNumbers: false)\n        .convert<String>(tasks);\n    for (final line in lines) {\n      //verbose(() => 'tasklist: $line');\n\n      // verbose(() => '${details.processName} ${details.pid}');\n\n      final memparts = line[4].split(' ');\n\n      final details = ProcessDetails(\n        int.tryParse(line[1]) ?? 0,\n        line[0],\n        memparts[0],\n      );\n      // details.memory can contain 'N/A' in which case their is no units.\n      if (memparts.length == 2) {\n        details.memoryUnits = memparts[1];\n      }\n\n      pids.add(details);\n    }\n\n    return pids;\n  }\n\n  List<ProcessDetails> _getLinuxProcesses() {\n    final entries = find(\n      '[0-9]*',\n      workingDirectory: '/proc',\n      types: [Find.directory],\n      recursive: false,\n    ).toList();\n\n    final processes = <ProcessDetails>[];\n\n    for (final path in entries) {\n      final pid = basename(path);\n      // we are only interested in PID\n      if (RegExp('[0-9]+').stringMatch(pid) == pid) {\n        final pd = _extractProcessFromStatus(path, pid);\n        if (pd != null) {\n          processes.add(pd);\n        }\n      }\n    }\n    return processes;\n  }\n\n  ProcessDetails? _extractProcessFromStatus(String path, String spid) {\n    final pathToStatus = join(path, 'status');\n\n    final pid = int.parse(spid);\n    if (exists(pathToStatus)) {\n      /// this is a process, the directory could be deleted at any moment.\n      try {\n        final lines = read(pathToStatus).toList();\n\n        String? name;\n        var memory = '0';\n        var memoryUnits = 'kB';\n\n        for (final line in lines) {\n          final (key, value) = parseProcessLine(line);\n\n          switch (key) {\n            case 'Name':\n              name = value;\n            case 'VmSize':\n              final args = value.split(' ');\n              if (args.length == 2) {\n                memory = args[0].trim();\n                memoryUnits = args[1].trim();\n              }\n          }\n        }\n        final process = ProcessDetails(pid, name ?? 'Unknown', memory)\n          ..memoryUnits = memoryUnits;\n\n        verbose(() => 'found process ${process.name} with pid: ${process.pid}');\n        return process;\n\n        // ignore: avoid_catches_without_on_clauses\n      } catch (e) {\n        /// no op. The process may have stopped\n      }\n    }\n\n    /// the process probably shutdown between us getting the list\n    /// and trying access its details.\n    return null;\n  }"}
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.845446 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.845446
[ReorderMembersFix] 2025-09-27T13:34:37.845724 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/lib/src/util/process_helper.dart:
[ReorderMembersFix] 2025-09-27T13:34:37.845724 ConflictingEditException: {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"} conflicts with {"offset":10271,"length":888,"replacement":"  /// The process id (pid) of this process\n  final int pid;\n\n  /// The process name.\n  final String name;\n\n  /// The amount of virtual memory the process is currently consuming\n  late final int _memory;\n\n  /// The units the [memory] is defined in the process is currently consuming\n  late final String? memoryUnits;\n\n  /// Create a ProcessDetails object that represents\n  /// a running process.\n  ProcessDetails(this.pid, this.name, String memory) {\n    _memory = int.tryParse(memory) ?? 0;\n  }\n\n  /// Get the virtual memory used by the processes.\n  /// May return zero if we are unable to determine the memory used.\n  int get memory => _memory;\n\n  /// Compares to [ProcessDetails] via their pid.\n  int compareTo(ProcessDetails other) => pid - other.pid;\n\n  @override\n  bool operator ==(covariant ProcessDetails other) => pid == other.pid;\n\n  @override\n  int get hashCode => pid.hashCode;"}
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:34:37.845724 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:34:37.845724
[ReorderMembersFix] 2025-09-27T13:35:55.975429 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/test/src/util/line_file.dart:
[ReorderMembersFix] 2025-09-27T13:35:55.975429 ConflictingEditException: {"offset":4713,"length":171,"replacement":"  final void Function(String) callback;\n\n  CallbackStringSync(this.callback);\n\n  @override\n  void add(String data) {\n    callback(data);\n  }\n\n  @override\n  void close() {}"} conflicts with {"offset":4713,"length":171,"replacement":"  final void Function(String) callback;\n\n  CallbackStringSync(this.callback);\n\n  @override\n  void add(String data) {\n    callback(data);\n  }\n\n  @override\n  void close() {}"}
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:35:55.975429 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:35:55.975429
[ReorderMembersFix] 2025-09-27T13:35:55.975685 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/test/src/util/line_file.dart:
[ReorderMembersFix] 2025-09-27T13:35:55.975685 ConflictingEditException: {"offset":341,"length":3734,"replacement":"  final FileMode _fileMode;\n\n  late final File _file;\n\n  late final RandomAccessFile _raf = _open(_fileMode);\n\n  /// If you instantiate FileSync you MUST call [close].\n  ///\n  /// We rececommend that you use withOpenFile in prefernce to directly\n  /// calling this method.\n  LineFile(String path, {FileMode fileMode = FileMode.writeOnlyAppend})\n      : _fileMode = fileMode {\n    _file = File(path);\n  }\n\n  RandomAccessFile _open(FileMode fileMode) => _file.openSync(mode: fileMode);\n\n  ///\n  /// Flushes the contents of the file to disk.\n  void flush() => _raf.flushSync();\n\n  /// Returns the length of the file in bytes\n  /// The file does NOT have to be open\n  /// to determine its length.\n  int get length => _file.lengthSync();\n\n  /// Close and flushes the file to disk.\n  void close() => _raf.closeSync();\n\n  /// Read file line by line.\n  void readAll(bool Function(String) handleLine) {\n    final stream = _file.openSync();\n    try {\n      final splitter =\n          const LineSplitter().startChunkedConversion(CallbackStringSync((str) {\n        if (!handleLine(str)) {\n          throw const _StopIteration();\n        }\n      }));\n\n      final decoder = const Utf8Decoder().startChunkedConversion(splitter);\n\n      while (true) {\n        final bytes = stream.readSync(16 * 1024);\n        if (bytes.isEmpty) {\n          break;\n        }\n        decoder.add(bytes);\n      }\n      decoder.close();\n    } on _StopIteration catch (_) {\n      // Ignore.\n    } finally {\n      stream.closeSync();\n    }\n  }\n\n  /// Truncates the file to zero bytes and\n  /// then writes the given text to the file.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void write(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n    _raf\n      ..truncateSync(0)\n      ..setPositionSync(0)\n      ..writeStringSync(finalline)\n      ..flushSync();\n  }\n\n  /// Appends the [line] to the file\n  /// Appends [newline] after the line.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void append(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n\n    _raf\n      ..setPositionSync(_raf.lengthSync())\n      ..writeStringSync(finalline);\n  }\n\n  /// Reads a single line from the file.\n  /// [lineDelimiter] the end of line delimiter.\n  /// May be one or two characters long.\n  /// Defaults to the platform specific delimiter as\n  /// defined by  [Platform().eol].\n  ///\n  String? read({String? lineDelimiter}) {\n    lineDelimiter ??= eol;\n    final line = StringBuffer();\n    int byte;\n    var priorChar = '';\n\n    var foundDelimiter = false;\n\n    while ((byte = _raf.readByteSync()) != -1) {\n      final char = utf8.decode([byte]);\n\n      if (_isLineDelimiter(priorChar, char, lineDelimiter)) {\n        foundDelimiter = true;\n        break;\n      }\n\n      line.write(char);\n      priorChar = char;\n    }\n    final endOfFile = line.isEmpty && !foundDelimiter;\n    return endOfFile ? null : line.toString();\n  }\n\n  /// Truncates the file to zero bytes in length.\n  void truncate() => _raf.truncateSync(0);\n\n  bool _isLineDelimiter(String priorChar, String char, String lineDelimiter) {\n    if (lineDelimiter.length == 1) {\n      return char == lineDelimiter;\n    } else {\n      return priorChar + char == lineDelimiter;\n    }\n  }\n\n  /// Opens the file for random access.\n  void open() {\n    /// accessing raf causes the file to open.\n    // ignore: unnecessary_statements\n    _raf;\n  }"} conflicts with {"offset":341,"length":3734,"replacement":"  final FileMode _fileMode;\n\n  late final File _file;\n\n  late final RandomAccessFile _raf = _open(_fileMode);\n\n  /// If you instantiate FileSync you MUST call [close].\n  ///\n  /// We rececommend that you use withOpenFile in prefernce to directly\n  /// calling this method.\n  LineFile(String path, {FileMode fileMode = FileMode.writeOnlyAppend})\n      : _fileMode = fileMode {\n    _file = File(path);\n  }\n\n  RandomAccessFile _open(FileMode fileMode) => _file.openSync(mode: fileMode);\n\n  ///\n  /// Flushes the contents of the file to disk.\n  void flush() => _raf.flushSync();\n\n  /// Returns the length of the file in bytes\n  /// The file does NOT have to be open\n  /// to determine its length.\n  int get length => _file.lengthSync();\n\n  /// Close and flushes the file to disk.\n  void close() => _raf.closeSync();\n\n  /// Read file line by line.\n  void readAll(bool Function(String) handleLine) {\n    final stream = _file.openSync();\n    try {\n      final splitter =\n          const LineSplitter().startChunkedConversion(CallbackStringSync((str) {\n        if (!handleLine(str)) {\n          throw const _StopIteration();\n        }\n      }));\n\n      final decoder = const Utf8Decoder().startChunkedConversion(splitter);\n\n      while (true) {\n        final bytes = stream.readSync(16 * 1024);\n        if (bytes.isEmpty) {\n          break;\n        }\n        decoder.add(bytes);\n      }\n      decoder.close();\n    } on _StopIteration catch (_) {\n      // Ignore.\n    } finally {\n      stream.closeSync();\n    }\n  }\n\n  /// Truncates the file to zero bytes and\n  /// then writes the given text to the file.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void write(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n    _raf\n      ..truncateSync(0)\n      ..setPositionSync(0)\n      ..writeStringSync(finalline)\n      ..flushSync();\n  }\n\n  /// Appends the [line] to the file\n  /// Appends [newline] after the line.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void append(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n\n    _raf\n      ..setPositionSync(_raf.lengthSync())\n      ..writeStringSync(finalline);\n  }\n\n  /// Reads a single line from the file.\n  /// [lineDelimiter] the end of line delimiter.\n  /// May be one or two characters long.\n  /// Defaults to the platform specific delimiter as\n  /// defined by  [Platform().eol].\n  ///\n  String? read({String? lineDelimiter}) {\n    lineDelimiter ??= eol;\n    final line = StringBuffer();\n    int byte;\n    var priorChar = '';\n\n    var foundDelimiter = false;\n\n    while ((byte = _raf.readByteSync()) != -1) {\n      final char = utf8.decode([byte]);\n\n      if (_isLineDelimiter(priorChar, char, lineDelimiter)) {\n        foundDelimiter = true;\n        break;\n      }\n\n      line.write(char);\n      priorChar = char;\n    }\n    final endOfFile = line.isEmpty && !foundDelimiter;\n    return endOfFile ? null : line.toString();\n  }\n\n  /// Truncates the file to zero bytes in length.\n  void truncate() => _raf.truncateSync(0);\n\n  bool _isLineDelimiter(String priorChar, String char, String lineDelimiter) {\n    if (lineDelimiter.length == 1) {\n      return char == lineDelimiter;\n    } else {\n      return priorChar + char == lineDelimiter;\n    }\n  }\n\n  /// Opens the file for random access.\n  void open() {\n    /// accessing raf causes the file to open.\n    // ignore: unnecessary_statements\n    _raf;\n  }"}
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:35:55.975685 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:35:55.975685
[ReorderMembersFix] 2025-09-27T13:35:56.261063 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/test/src/util/line_file.dart:
[ReorderMembersFix] 2025-09-27T13:35:56.261063 ConflictingEditException: {"offset":4713,"length":171,"replacement":"  final void Function(String) callback;\n\n  CallbackStringSync(this.callback);\n\n  @override\n  void add(String data) {\n    callback(data);\n  }\n\n  @override\n  void close() {}"} conflicts with {"offset":4713,"length":171,"replacement":"  final void Function(String) callback;\n\n  CallbackStringSync(this.callback);\n\n  @override\n  void add(String data) {\n    callback(data);\n  }\n\n  @override\n  void close() {}"}
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:35:56.261063 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:35:56.261063
[ReorderMembersFix] 2025-09-27T13:35:56.262920 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/test/src/util/line_file.dart:
[ReorderMembersFix] 2025-09-27T13:35:56.262920 ConflictingEditException: {"offset":341,"length":3734,"replacement":"  final FileMode _fileMode;\n\n  late final File _file;\n\n  late final RandomAccessFile _raf = _open(_fileMode);\n\n  /// If you instantiate FileSync you MUST call [close].\n  ///\n  /// We rececommend that you use withOpenFile in prefernce to directly\n  /// calling this method.\n  LineFile(String path, {FileMode fileMode = FileMode.writeOnlyAppend})\n      : _fileMode = fileMode {\n    _file = File(path);\n  }\n\n  RandomAccessFile _open(FileMode fileMode) => _file.openSync(mode: fileMode);\n\n  ///\n  /// Flushes the contents of the file to disk.\n  void flush() => _raf.flushSync();\n\n  /// Returns the length of the file in bytes\n  /// The file does NOT have to be open\n  /// to determine its length.\n  int get length => _file.lengthSync();\n\n  /// Close and flushes the file to disk.\n  void close() => _raf.closeSync();\n\n  /// Read file line by line.\n  void readAll(bool Function(String) handleLine) {\n    final stream = _file.openSync();\n    try {\n      final splitter =\n          const LineSplitter().startChunkedConversion(CallbackStringSync((str) {\n        if (!handleLine(str)) {\n          throw const _StopIteration();\n        }\n      }));\n\n      final decoder = const Utf8Decoder().startChunkedConversion(splitter);\n\n      while (true) {\n        final bytes = stream.readSync(16 * 1024);\n        if (bytes.isEmpty) {\n          break;\n        }\n        decoder.add(bytes);\n      }\n      decoder.close();\n    } on _StopIteration catch (_) {\n      // Ignore.\n    } finally {\n      stream.closeSync();\n    }\n  }\n\n  /// Truncates the file to zero bytes and\n  /// then writes the given text to the file.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void write(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n    _raf\n      ..truncateSync(0)\n      ..setPositionSync(0)\n      ..writeStringSync(finalline)\n      ..flushSync();\n  }\n\n  /// Appends the [line] to the file\n  /// Appends [newline] after the line.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void append(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n\n    _raf\n      ..setPositionSync(_raf.lengthSync())\n      ..writeStringSync(finalline);\n  }\n\n  /// Reads a single line from the file.\n  /// [lineDelimiter] the end of line delimiter.\n  /// May be one or two characters long.\n  /// Defaults to the platform specific delimiter as\n  /// defined by  [Platform().eol].\n  ///\n  String? read({String? lineDelimiter}) {\n    lineDelimiter ??= eol;\n    final line = StringBuffer();\n    int byte;\n    var priorChar = '';\n\n    var foundDelimiter = false;\n\n    while ((byte = _raf.readByteSync()) != -1) {\n      final char = utf8.decode([byte]);\n\n      if (_isLineDelimiter(priorChar, char, lineDelimiter)) {\n        foundDelimiter = true;\n        break;\n      }\n\n      line.write(char);\n      priorChar = char;\n    }\n    final endOfFile = line.isEmpty && !foundDelimiter;\n    return endOfFile ? null : line.toString();\n  }\n\n  /// Truncates the file to zero bytes in length.\n  void truncate() => _raf.truncateSync(0);\n\n  bool _isLineDelimiter(String priorChar, String char, String lineDelimiter) {\n    if (lineDelimiter.length == 1) {\n      return char == lineDelimiter;\n    } else {\n      return priorChar + char == lineDelimiter;\n    }\n  }\n\n  /// Opens the file for random access.\n  void open() {\n    /// accessing raf causes the file to open.\n    // ignore: unnecessary_statements\n    _raf;\n  }"} conflicts with {"offset":341,"length":3734,"replacement":"  final FileMode _fileMode;\n\n  late final File _file;\n\n  late final RandomAccessFile _raf = _open(_fileMode);\n\n  /// If you instantiate FileSync you MUST call [close].\n  ///\n  /// We rececommend that you use withOpenFile in prefernce to directly\n  /// calling this method.\n  LineFile(String path, {FileMode fileMode = FileMode.writeOnlyAppend})\n      : _fileMode = fileMode {\n    _file = File(path);\n  }\n\n  RandomAccessFile _open(FileMode fileMode) => _file.openSync(mode: fileMode);\n\n  ///\n  /// Flushes the contents of the file to disk.\n  void flush() => _raf.flushSync();\n\n  /// Returns the length of the file in bytes\n  /// The file does NOT have to be open\n  /// to determine its length.\n  int get length => _file.lengthSync();\n\n  /// Close and flushes the file to disk.\n  void close() => _raf.closeSync();\n\n  /// Read file line by line.\n  void readAll(bool Function(String) handleLine) {\n    final stream = _file.openSync();\n    try {\n      final splitter =\n          const LineSplitter().startChunkedConversion(CallbackStringSync((str) {\n        if (!handleLine(str)) {\n          throw const _StopIteration();\n        }\n      }));\n\n      final decoder = const Utf8Decoder().startChunkedConversion(splitter);\n\n      while (true) {\n        final bytes = stream.readSync(16 * 1024);\n        if (bytes.isEmpty) {\n          break;\n        }\n        decoder.add(bytes);\n      }\n      decoder.close();\n    } on _StopIteration catch (_) {\n      // Ignore.\n    } finally {\n      stream.closeSync();\n    }\n  }\n\n  /// Truncates the file to zero bytes and\n  /// then writes the given text to the file.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void write(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n    _raf\n      ..truncateSync(0)\n      ..setPositionSync(0)\n      ..writeStringSync(finalline)\n      ..flushSync();\n  }\n\n  /// Appends the [line] to the file\n  /// Appends [newline] after the line.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void append(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n\n    _raf\n      ..setPositionSync(_raf.lengthSync())\n      ..writeStringSync(finalline);\n  }\n\n  /// Reads a single line from the file.\n  /// [lineDelimiter] the end of line delimiter.\n  /// May be one or two characters long.\n  /// Defaults to the platform specific delimiter as\n  /// defined by  [Platform().eol].\n  ///\n  String? read({String? lineDelimiter}) {\n    lineDelimiter ??= eol;\n    final line = StringBuffer();\n    int byte;\n    var priorChar = '';\n\n    var foundDelimiter = false;\n\n    while ((byte = _raf.readByteSync()) != -1) {\n      final char = utf8.decode([byte]);\n\n      if (_isLineDelimiter(priorChar, char, lineDelimiter)) {\n        foundDelimiter = true;\n        break;\n      }\n\n      line.write(char);\n      priorChar = char;\n    }\n    final endOfFile = line.isEmpty && !foundDelimiter;\n    return endOfFile ? null : line.toString();\n  }\n\n  /// Truncates the file to zero bytes in length.\n  void truncate() => _raf.truncateSync(0);\n\n  bool _isLineDelimiter(String priorChar, String char, String lineDelimiter) {\n    if (lineDelimiter.length == 1) {\n      return char == lineDelimiter;\n    } else {\n      return priorChar + char == lineDelimiter;\n    }\n  }\n\n  /// Opens the file for random access.\n  void open() {\n    /// accessing raf causes the file to open.\n    // ignore: unnecessary_statements\n    _raf;\n  }"}
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:35:56.262920 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:35:56.262920
[ReorderMembersFix] 2025-09-27T13:35:57.557168 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/test/src/util/line_file.dart:
[ReorderMembersFix] 2025-09-27T13:35:57.557168 ConflictingEditException: {"offset":4713,"length":171,"replacement":"  final void Function(String) callback;\n\n  CallbackStringSync(this.callback);\n\n  @override\n  void add(String data) {\n    callback(data);\n  }\n\n  @override\n  void close() {}"} conflicts with {"offset":4713,"length":171,"replacement":"  final void Function(String) callback;\n\n  CallbackStringSync(this.callback);\n\n  @override\n  void add(String data) {\n    callback(data);\n  }\n\n  @override\n  void close() {}"}
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:35:57.557168 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:35:57.557168
[ReorderMembersFix] 2025-09-27T13:35:57.557944 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli/dcli/test/src/util/line_file.dart:
[ReorderMembersFix] 2025-09-27T13:35:57.557944 ConflictingEditException: {"offset":341,"length":3734,"replacement":"  final FileMode _fileMode;\n\n  late final File _file;\n\n  late final RandomAccessFile _raf = _open(_fileMode);\n\n  /// If you instantiate FileSync you MUST call [close].\n  ///\n  /// We rececommend that you use withOpenFile in prefernce to directly\n  /// calling this method.\n  LineFile(String path, {FileMode fileMode = FileMode.writeOnlyAppend})\n      : _fileMode = fileMode {\n    _file = File(path);\n  }\n\n  RandomAccessFile _open(FileMode fileMode) => _file.openSync(mode: fileMode);\n\n  ///\n  /// Flushes the contents of the file to disk.\n  void flush() => _raf.flushSync();\n\n  /// Returns the length of the file in bytes\n  /// The file does NOT have to be open\n  /// to determine its length.\n  int get length => _file.lengthSync();\n\n  /// Close and flushes the file to disk.\n  void close() => _raf.closeSync();\n\n  /// Read file line by line.\n  void readAll(bool Function(String) handleLine) {\n    final stream = _file.openSync();\n    try {\n      final splitter =\n          const LineSplitter().startChunkedConversion(CallbackStringSync((str) {\n        if (!handleLine(str)) {\n          throw const _StopIteration();\n        }\n      }));\n\n      final decoder = const Utf8Decoder().startChunkedConversion(splitter);\n\n      while (true) {\n        final bytes = stream.readSync(16 * 1024);\n        if (bytes.isEmpty) {\n          break;\n        }\n        decoder.add(bytes);\n      }\n      decoder.close();\n    } on _StopIteration catch (_) {\n      // Ignore.\n    } finally {\n      stream.closeSync();\n    }\n  }\n\n  /// Truncates the file to zero bytes and\n  /// then writes the given text to the file.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void write(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n    _raf\n      ..truncateSync(0)\n      ..setPositionSync(0)\n      ..writeStringSync(finalline)\n      ..flushSync();\n  }\n\n  /// Appends the [line] to the file\n  /// Appends [newline] after the line.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void append(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n\n    _raf\n      ..setPositionSync(_raf.lengthSync())\n      ..writeStringSync(finalline);\n  }\n\n  /// Reads a single line from the file.\n  /// [lineDelimiter] the end of line delimiter.\n  /// May be one or two characters long.\n  /// Defaults to the platform specific delimiter as\n  /// defined by  [Platform().eol].\n  ///\n  String? read({String? lineDelimiter}) {\n    lineDelimiter ??= eol;\n    final line = StringBuffer();\n    int byte;\n    var priorChar = '';\n\n    var foundDelimiter = false;\n\n    while ((byte = _raf.readByteSync()) != -1) {\n      final char = utf8.decode([byte]);\n\n      if (_isLineDelimiter(priorChar, char, lineDelimiter)) {\n        foundDelimiter = true;\n        break;\n      }\n\n      line.write(char);\n      priorChar = char;\n    }\n    final endOfFile = line.isEmpty && !foundDelimiter;\n    return endOfFile ? null : line.toString();\n  }\n\n  /// Truncates the file to zero bytes in length.\n  void truncate() => _raf.truncateSync(0);\n\n  bool _isLineDelimiter(String priorChar, String char, String lineDelimiter) {\n    if (lineDelimiter.length == 1) {\n      return char == lineDelimiter;\n    } else {\n      return priorChar + char == lineDelimiter;\n    }\n  }\n\n  /// Opens the file for random access.\n  void open() {\n    /// accessing raf causes the file to open.\n    // ignore: unnecessary_statements\n    _raf;\n  }"} conflicts with {"offset":341,"length":3734,"replacement":"  final FileMode _fileMode;\n\n  late final File _file;\n\n  late final RandomAccessFile _raf = _open(_fileMode);\n\n  /// If you instantiate FileSync you MUST call [close].\n  ///\n  /// We rececommend that you use withOpenFile in prefernce to directly\n  /// calling this method.\n  LineFile(String path, {FileMode fileMode = FileMode.writeOnlyAppend})\n      : _fileMode = fileMode {\n    _file = File(path);\n  }\n\n  RandomAccessFile _open(FileMode fileMode) => _file.openSync(mode: fileMode);\n\n  ///\n  /// Flushes the contents of the file to disk.\n  void flush() => _raf.flushSync();\n\n  /// Returns the length of the file in bytes\n  /// The file does NOT have to be open\n  /// to determine its length.\n  int get length => _file.lengthSync();\n\n  /// Close and flushes the file to disk.\n  void close() => _raf.closeSync();\n\n  /// Read file line by line.\n  void readAll(bool Function(String) handleLine) {\n    final stream = _file.openSync();\n    try {\n      final splitter =\n          const LineSplitter().startChunkedConversion(CallbackStringSync((str) {\n        if (!handleLine(str)) {\n          throw const _StopIteration();\n        }\n      }));\n\n      final decoder = const Utf8Decoder().startChunkedConversion(splitter);\n\n      while (true) {\n        final bytes = stream.readSync(16 * 1024);\n        if (bytes.isEmpty) {\n          break;\n        }\n        decoder.add(bytes);\n      }\n      decoder.close();\n    } on _StopIteration catch (_) {\n      // Ignore.\n    } finally {\n      stream.closeSync();\n    }\n  }\n\n  /// Truncates the file to zero bytes and\n  /// then writes the given text to the file.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void write(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n    _raf\n      ..truncateSync(0)\n      ..setPositionSync(0)\n      ..writeStringSync(finalline)\n      ..flushSync();\n  }\n\n  /// Appends the [line] to the file\n  /// Appends [newline] after the line.\n  /// If [newline] is null or isn't passed then the platform\n  /// end of line characters are appended as defined by\n  /// [Platform().eol].\n  /// Pass null or an '' to [newline] to not add a line terminator.\n  void append(String line, {String? newline}) {\n    final finalline = line + (newline ?? eol);\n\n    _raf\n      ..setPositionSync(_raf.lengthSync())\n      ..writeStringSync(finalline);\n  }\n\n  /// Reads a single line from the file.\n  /// [lineDelimiter] the end of line delimiter.\n  /// May be one or two characters long.\n  /// Defaults to the platform specific delimiter as\n  /// defined by  [Platform().eol].\n  ///\n  String? read({String? lineDelimiter}) {\n    lineDelimiter ??= eol;\n    final line = StringBuffer();\n    int byte;\n    var priorChar = '';\n\n    var foundDelimiter = false;\n\n    while ((byte = _raf.readByteSync()) != -1) {\n      final char = utf8.decode([byte]);\n\n      if (_isLineDelimiter(priorChar, char, lineDelimiter)) {\n        foundDelimiter = true;\n        break;\n      }\n\n      line.write(char);\n      priorChar = char;\n    }\n    final endOfFile = line.isEmpty && !foundDelimiter;\n    return endOfFile ? null : line.toString();\n  }\n\n  /// Truncates the file to zero bytes in length.\n  void truncate() => _raf.truncateSync(0);\n\n  bool _isLineDelimiter(String priorChar, String char, String lineDelimiter) {\n    if (lineDelimiter.length == 1) {\n      return char == lineDelimiter;\n    } else {\n      return priorChar + char == lineDelimiter;\n    }\n  }\n\n  /// Opens the file for random access.\n  void open() {\n    /// accessing raf causes the file to open.\n    // ignore: unnecessary_statements\n    _raf;\n  }"}
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-09-27T13:35:57.557944 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-09-27T13:35:57.557944
